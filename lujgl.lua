
local ffi = require "ffi"
local bit = require "bit"

local max = math.max
local gl, glu, glfw

local int_buffer = ffi.new("int[2]")

local LuJGL = {}
LuJGL.frameCount = 0

-- Error flag, so we can exit the main loop if a callback errors
local stop = false
-- Client callback functions
local render_cb
local idle_cb
local event_cb

local tex_channels2glconst
local ext_function_cache = {}

do
	-- OpenGL + Extensions
	ffi.cdef[[
/************************************************* TYPES *************************************************/
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef int GLsizei;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;

// glext.h
typedef char GLchar;
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
typedef ptrdiff_t GLintptrARB;
typedef ptrdiff_t GLsizeiptrARB;
typedef char GLcharARB;
typedef unsigned int GLhandleARB;
typedef unsigned short GLhalfARB;
typedef unsigned short GLhalfNV;

typedef int64_t GLint64EXT;
typedef uint64_t GLuint64EXT;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef GLintptr GLvdpauSurfaceNV;

/************************************************* CONSTANTS *************************************************/

static const int GL_VERSION_1_1 = 1;
static const int GL_VERSION_1_2 = 1;
static const int GL_VERSION_1_3 = 1;
static const int GL_ARB_imaging = 1;
static const int GL_FALSE = 0x0;
static const int GL_TRUE = 0x1;
static const int GL_BYTE = 0x1400;
static const int GL_UNSIGNED_BYTE = 0x1401;
static const int GL_SHORT = 0x1402;
static const int GL_UNSIGNED_SHORT = 0x1403;
static const int GL_INT = 0x1404;
static const int GL_UNSIGNED_INT = 0x1405;
static const int GL_FLOAT = 0x1406;
static const int GL_DOUBLE = 0x140A;
static const int GL_2_BYTES = 0x1407;
static const int GL_3_BYTES = 0x1408;
static const int GL_4_BYTES = 0x1409;
static const int GL_POINTS = 0x0000;
static const int GL_LINES = 0x0001;
static const int GL_LINE_LOOP = 0x0002;
static const int GL_LINE_STRIP = 0x0003;
static const int GL_TRIANGLES = 0x0004;
static const int GL_TRIANGLE_STRIP = 0x0005;
static const int GL_TRIANGLE_FAN = 0x0006;
static const int GL_QUADS = 0x0007;
static const int GL_QUAD_STRIP = 0x0008;
static const int GL_POLYGON = 0x0009;
static const int GL_VERTEX_ARRAY = 0x8074;
static const int GL_NORMAL_ARRAY = 0x8075;
static const int GL_COLOR_ARRAY = 0x8076;
static const int GL_INDEX_ARRAY = 0x8077;
static const int GL_TEXTURE_COORD_ARRAY = 0x8078;
static const int GL_EDGE_FLAG_ARRAY = 0x8079;
static const int GL_VERTEX_ARRAY_SIZE = 0x807A;
static const int GL_VERTEX_ARRAY_TYPE = 0x807B;
static const int GL_VERTEX_ARRAY_STRIDE = 0x807C;
static const int GL_NORMAL_ARRAY_TYPE = 0x807E;
static const int GL_NORMAL_ARRAY_STRIDE = 0x807F;
static const int GL_COLOR_ARRAY_SIZE = 0x8081;
static const int GL_COLOR_ARRAY_TYPE = 0x8082;
static const int GL_COLOR_ARRAY_STRIDE = 0x8083;
static const int GL_INDEX_ARRAY_TYPE = 0x8085;
static const int GL_INDEX_ARRAY_STRIDE = 0x8086;
static const int GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088;
static const int GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089;
static const int GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A;
static const int GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C;
static const int GL_VERTEX_ARRAY_POINTER = 0x808E;
static const int GL_NORMAL_ARRAY_POINTER = 0x808F;
static const int GL_COLOR_ARRAY_POINTER = 0x8090;
static const int GL_INDEX_ARRAY_POINTER = 0x8091;
static const int GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092;
static const int GL_EDGE_FLAG_ARRAY_POINTER = 0x8093;
static const int GL_V2F = 0x2A20;
static const int GL_V3F = 0x2A21;
static const int GL_C4UB_V2F = 0x2A22;
static const int GL_C4UB_V3F = 0x2A23;
static const int GL_C3F_V3F = 0x2A24;
static const int GL_N3F_V3F = 0x2A25;
static const int GL_C4F_N3F_V3F = 0x2A26;
static const int GL_T2F_V3F = 0x2A27;
static const int GL_T4F_V4F = 0x2A28;
static const int GL_T2F_C4UB_V3F = 0x2A29;
static const int GL_T2F_C3F_V3F = 0x2A2A;
static const int GL_T2F_N3F_V3F = 0x2A2B;
static const int GL_T2F_C4F_N3F_V3F = 0x2A2C;
static const int GL_T4F_C4F_N3F_V4F = 0x2A2D;
static const int GL_MATRIX_MODE = 0x0BA0;
static const int GL_MODELVIEW = 0x1700;
static const int GL_PROJECTION = 0x1701;
static const int GL_TEXTURE = 0x1702;
static const int GL_POINT_SMOOTH = 0x0B10;
static const int GL_POINT_SIZE = 0x0B11;
static const int GL_POINT_SIZE_GRANULARITY = 0x0B13;
static const int GL_POINT_SIZE_RANGE = 0x0B12;
static const int GL_LINE_SMOOTH = 0x0B20;
static const int GL_LINE_STIPPLE = 0x0B24;
static const int GL_LINE_STIPPLE_PATTERN = 0x0B25;
static const int GL_LINE_STIPPLE_REPEAT = 0x0B26;
static const int GL_LINE_WIDTH = 0x0B21;
static const int GL_LINE_WIDTH_GRANULARITY = 0x0B23;
static const int GL_LINE_WIDTH_RANGE = 0x0B22;
static const int GL_POINT = 0x1B00;
static const int GL_LINE = 0x1B01;
static const int GL_FILL = 0x1B02;
static const int GL_CW = 0x0900;
static const int GL_CCW = 0x0901;
static const int GL_FRONT = 0x0404;
static const int GL_BACK = 0x0405;
static const int GL_POLYGON_MODE = 0x0B40;
static const int GL_POLYGON_SMOOTH = 0x0B41;
static const int GL_POLYGON_STIPPLE = 0x0B42;
static const int GL_EDGE_FLAG = 0x0B43;
static const int GL_CULL_FACE = 0x0B44;
static const int GL_CULL_FACE_MODE = 0x0B45;
static const int GL_FRONT_FACE = 0x0B46;
static const int GL_POLYGON_OFFSET_FACTOR = 0x8038;
static const int GL_POLYGON_OFFSET_UNITS = 0x2A00;
static const int GL_POLYGON_OFFSET_POINT = 0x2A01;
static const int GL_POLYGON_OFFSET_LINE = 0x2A02;
static const int GL_POLYGON_OFFSET_FILL = 0x8037;
static const int GL_COMPILE = 0x1300;
static const int GL_COMPILE_AND_EXECUTE = 0x1301;
static const int GL_LIST_BASE = 0x0B32;
static const int GL_LIST_INDEX = 0x0B33;
static const int GL_LIST_MODE = 0x0B30;
static const int GL_NEVER = 0x0200;
static const int GL_LESS = 0x0201;
static const int GL_EQUAL = 0x0202;
static const int GL_LEQUAL = 0x0203;
static const int GL_GREATER = 0x0204;
static const int GL_NOTEQUAL = 0x0205;
static const int GL_GEQUAL = 0x0206;
static const int GL_ALWAYS = 0x0207;
static const int GL_DEPTH_TEST = 0x0B71;
static const int GL_DEPTH_BITS = 0x0D56;
static const int GL_DEPTH_CLEAR_VALUE = 0x0B73;
static const int GL_DEPTH_FUNC = 0x0B74;
static const int GL_DEPTH_RANGE = 0x0B70;
static const int GL_DEPTH_WRITEMASK = 0x0B72;
static const int GL_DEPTH_COMPONENT = 0x1902;
static const int GL_LIGHTING = 0x0B50;
static const int GL_LIGHT0 = 0x4000;
static const int GL_LIGHT1 = 0x4001;
static const int GL_LIGHT2 = 0x4002;
static const int GL_LIGHT3 = 0x4003;
static const int GL_LIGHT4 = 0x4004;
static const int GL_LIGHT5 = 0x4005;
static const int GL_LIGHT6 = 0x4006;
static const int GL_LIGHT7 = 0x4007;
static const int GL_SPOT_EXPONENT = 0x1205;
static const int GL_SPOT_CUTOFF = 0x1206;
static const int GL_CONSTANT_ATTENUATION = 0x1207;
static const int GL_LINEAR_ATTENUATION = 0x1208;
static const int GL_QUADRATIC_ATTENUATION = 0x1209;
static const int GL_AMBIENT = 0x1200;
static const int GL_DIFFUSE = 0x1201;
static const int GL_SPECULAR = 0x1202;
static const int GL_SHININESS = 0x1601;
static const int GL_EMISSION = 0x1600;
static const int GL_POSITION = 0x1203;
static const int GL_SPOT_DIRECTION = 0x1204;
static const int GL_AMBIENT_AND_DIFFUSE = 0x1602;
static const int GL_COLOR_INDEXES = 0x1603;
static const int GL_LIGHT_MODEL_TWO_SIDE = 0x0B52;
static const int GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51;
static const int GL_LIGHT_MODEL_AMBIENT = 0x0B53;
static const int GL_FRONT_AND_BACK = 0x0408;
static const int GL_SHADE_MODEL = 0x0B54;
static const int GL_FLAT = 0x1D00;
static const int GL_SMOOTH = 0x1D01;
static const int GL_COLOR_MATERIAL = 0x0B57;
static const int GL_COLOR_MATERIAL_FACE = 0x0B55;
static const int GL_COLOR_MATERIAL_PARAMETER = 0x0B56;
static const int GL_NORMALIZE = 0x0BA1;
static const int GL_CLIP_PLANE0 = 0x3000;
static const int GL_CLIP_PLANE1 = 0x3001;
static const int GL_CLIP_PLANE2 = 0x3002;
static const int GL_CLIP_PLANE3 = 0x3003;
static const int GL_CLIP_PLANE4 = 0x3004;
static const int GL_CLIP_PLANE5 = 0x3005;
static const int GL_ACCUM_RED_BITS = 0x0D58;
static const int GL_ACCUM_GREEN_BITS = 0x0D59;
static const int GL_ACCUM_BLUE_BITS = 0x0D5A;
static const int GL_ACCUM_ALPHA_BITS = 0x0D5B;
static const int GL_ACCUM_CLEAR_VALUE = 0x0B80;
static const int GL_ACCUM = 0x0100;
static const int GL_ADD = 0x0104;
static const int GL_LOAD = 0x0101;
static const int GL_MULT = 0x0103;
static const int GL_RETURN = 0x0102;
static const int GL_ALPHA_TEST = 0x0BC0;
static const int GL_ALPHA_TEST_REF = 0x0BC2;
static const int GL_ALPHA_TEST_FUNC = 0x0BC1;
static const int GL_BLEND = 0x0BE2;
static const int GL_BLEND_SRC = 0x0BE1;
static const int GL_BLEND_DST = 0x0BE0;
static const int GL_ZERO = 0x0;
static const int GL_ONE = 0x1;
static const int GL_SRC_COLOR = 0x0300;
static const int GL_ONE_MINUS_SRC_COLOR = 0x0301;
static const int GL_SRC_ALPHA = 0x0302;
static const int GL_ONE_MINUS_SRC_ALPHA = 0x0303;
static const int GL_DST_ALPHA = 0x0304;
static const int GL_ONE_MINUS_DST_ALPHA = 0x0305;
static const int GL_DST_COLOR = 0x0306;
static const int GL_ONE_MINUS_DST_COLOR = 0x0307;
static const int GL_SRC_ALPHA_SATURATE = 0x0308;
static const int GL_CONSTANT_COLOR = 0x8001;
static const int GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;
static const int GL_CONSTANT_ALPHA = 0x8003;
static const int GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;
static const int GL_FEEDBACK = 0x1C01;
static const int GL_RENDER = 0x1C00;
static const int GL_SELECT = 0x1C02;
static const int GL_2D = 0x0600;
static const int GL_3D = 0x0601;
static const int GL_3D_COLOR = 0x0602;
static const int GL_3D_COLOR_TEXTURE = 0x0603;
static const int GL_4D_COLOR_TEXTURE = 0x0604;
static const int GL_POINT_TOKEN = 0x0701;
static const int GL_LINE_TOKEN = 0x0702;
static const int GL_LINE_RESET_TOKEN = 0x0707;
static const int GL_POLYGON_TOKEN = 0x0703;
static const int GL_BITMAP_TOKEN = 0x0704;
static const int GL_DRAW_PIXEL_TOKEN = 0x0705;
static const int GL_COPY_PIXEL_TOKEN = 0x0706;
static const int GL_PASS_THROUGH_TOKEN = 0x0700;
static const int GL_FEEDBACK_BUFFER_POINTER = 0x0DF0;
static const int GL_FEEDBACK_BUFFER_SIZE = 0x0DF1;
static const int GL_FEEDBACK_BUFFER_TYPE = 0x0DF2;
static const int GL_SELECTION_BUFFER_POINTER = 0x0DF3;
static const int GL_SELECTION_BUFFER_SIZE = 0x0DF4;
static const int GL_FOG = 0x0B60;
static const int GL_FOG_MODE = 0x0B65;
static const int GL_FOG_DENSITY = 0x0B62;
static const int GL_FOG_COLOR = 0x0B66;
static const int GL_FOG_INDEX = 0x0B61;
static const int GL_FOG_START = 0x0B63;
static const int GL_FOG_END = 0x0B64;
static const int GL_LINEAR = 0x2601;
static const int GL_EXP = 0x0800;
static const int GL_EXP2 = 0x0801;
static const int GL_LOGIC_OP = 0x0BF1;
static const int GL_INDEX_LOGIC_OP = 0x0BF1;
static const int GL_COLOR_LOGIC_OP = 0x0BF2;
static const int GL_LOGIC_OP_MODE = 0x0BF0;
static const int GL_CLEAR = 0x1500;
static const int GL_SET = 0x150F;
static const int GL_COPY = 0x1503;
static const int GL_COPY_INVERTED = 0x150C;
static const int GL_NOOP = 0x1505;
static const int GL_INVERT = 0x150A;
static const int GL_AND = 0x1501;
static const int GL_NAND = 0x150E;
static const int GL_OR = 0x1507;
static const int GL_NOR = 0x1508;
static const int GL_XOR = 0x1506;
static const int GL_EQUIV = 0x1509;
static const int GL_AND_REVERSE = 0x1502;
static const int GL_AND_INVERTED = 0x1504;
static const int GL_OR_REVERSE = 0x150B;
static const int GL_OR_INVERTED = 0x150D;
static const int GL_STENCIL_TEST = 0x0B90;
static const int GL_STENCIL_WRITEMASK = 0x0B98;
static const int GL_STENCIL_BITS = 0x0D57;
static const int GL_STENCIL_FUNC = 0x0B92;
static const int GL_STENCIL_VALUE_MASK = 0x0B93;
static const int GL_STENCIL_REF = 0x0B97;
static const int GL_STENCIL_FAIL = 0x0B94;
static const int GL_STENCIL_PASS_DEPTH_PASS = 0x0B96;
static const int GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95;
static const int GL_STENCIL_CLEAR_VALUE = 0x0B91;
static const int GL_STENCIL_INDEX = 0x1901;
static const int GL_KEEP = 0x1E00;
static const int GL_REPLACE = 0x1E01;
static const int GL_INCR = 0x1E02;
static const int GL_DECR = 0x1E03;
static const int GL_NONE = 0x0;
static const int GL_LEFT = 0x0406;
static const int GL_RIGHT = 0x0407;
static const int GL_FRONT_LEFT = 0x0400;
static const int GL_FRONT_RIGHT = 0x0401;
static const int GL_BACK_LEFT = 0x0402;
static const int GL_BACK_RIGHT = 0x0403;
static const int GL_AUX0 = 0x0409;
static const int GL_AUX1 = 0x040A;
static const int GL_AUX2 = 0x040B;
static const int GL_AUX3 = 0x040C;
static const int GL_COLOR_INDEX = 0x1900;
static const int GL_RED = 0x1903;
static const int GL_GREEN = 0x1904;
static const int GL_BLUE = 0x1905;
static const int GL_ALPHA = 0x1906;
static const int GL_LUMINANCE = 0x1909;
static const int GL_LUMINANCE_ALPHA = 0x190A;
static const int GL_ALPHA_BITS = 0x0D55;
static const int GL_RED_BITS = 0x0D52;
static const int GL_GREEN_BITS = 0x0D53;
static const int GL_BLUE_BITS = 0x0D54;
static const int GL_INDEX_BITS = 0x0D51;
static const int GL_SUBPIXEL_BITS = 0x0D50;
static const int GL_AUX_BUFFERS = 0x0C00;
static const int GL_READ_BUFFER = 0x0C02;
static const int GL_DRAW_BUFFER = 0x0C01;
static const int GL_DOUBLEBUFFER = 0x0C32;
static const int GL_STEREO = 0x0C33;
static const int GL_BITMAP = 0x1A00;
static const int GL_COLOR = 0x1800;
static const int GL_DEPTH = 0x1801;
static const int GL_STENCIL = 0x1802;
static const int GL_DITHER = 0x0BD0;
static const int GL_RGB = 0x1907;
static const int GL_RGBA = 0x1908;
static const int GL_MAX_LIST_NESTING = 0x0B31;
static const int GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35;
static const int GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36;
static const int GL_MAX_NAME_STACK_DEPTH = 0x0D37;
static const int GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38;
static const int GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39;
static const int GL_MAX_EVAL_ORDER = 0x0D30;
static const int GL_MAX_LIGHTS = 0x0D31;
static const int GL_MAX_CLIP_PLANES = 0x0D32;
static const int GL_MAX_TEXTURE_SIZE = 0x0D33;
static const int GL_MAX_PIXEL_MAP_TABLE = 0x0D34;
static const int GL_MAX_VIEWPORT_DIMS = 0x0D3A;
static const int GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B;
static const int GL_ATTRIB_STACK_DEPTH = 0x0BB0;
static const int GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1;
static const int GL_COLOR_CLEAR_VALUE = 0x0C22;
static const int GL_COLOR_WRITEMASK = 0x0C23;
static const int GL_CURRENT_INDEX = 0x0B01;
static const int GL_CURRENT_COLOR = 0x0B00;
static const int GL_CURRENT_NORMAL = 0x0B02;
static const int GL_CURRENT_RASTER_COLOR = 0x0B04;
static const int GL_CURRENT_RASTER_DISTANCE = 0x0B09;
static const int GL_CURRENT_RASTER_INDEX = 0x0B05;
static const int GL_CURRENT_RASTER_POSITION = 0x0B07;
static const int GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06;
static const int GL_CURRENT_RASTER_POSITION_VALID = 0x0B08;
static const int GL_CURRENT_TEXTURE_COORDS = 0x0B03;
static const int GL_INDEX_CLEAR_VALUE = 0x0C20;
static const int GL_INDEX_MODE = 0x0C30;
static const int GL_INDEX_WRITEMASK = 0x0C21;
static const int GL_MODELVIEW_MATRIX = 0x0BA6;
static const int GL_MODELVIEW_STACK_DEPTH = 0x0BA3;
static const int GL_NAME_STACK_DEPTH = 0x0D70;
static const int GL_PROJECTION_MATRIX = 0x0BA7;
static const int GL_PROJECTION_STACK_DEPTH = 0x0BA4;
static const int GL_RENDER_MODE = 0x0C40;
static const int GL_RGBA_MODE = 0x0C31;
static const int GL_TEXTURE_MATRIX = 0x0BA8;
static const int GL_TEXTURE_STACK_DEPTH = 0x0BA5;
static const int GL_VIEWPORT = 0x0BA2;
static const int GL_AUTO_NORMAL = 0x0D80;
static const int GL_MAP1_COLOR_4 = 0x0D90;
static const int GL_MAP1_GRID_DOMAIN = 0x0DD0;
static const int GL_MAP1_GRID_SEGMENTS = 0x0DD1;
static const int GL_MAP1_INDEX = 0x0D91;
static const int GL_MAP1_NORMAL = 0x0D92;
static const int GL_MAP1_TEXTURE_COORD_1 = 0x0D93;
static const int GL_MAP1_TEXTURE_COORD_2 = 0x0D94;
static const int GL_MAP1_TEXTURE_COORD_3 = 0x0D95;
static const int GL_MAP1_TEXTURE_COORD_4 = 0x0D96;
static const int GL_MAP1_VERTEX_3 = 0x0D97;
static const int GL_MAP1_VERTEX_4 = 0x0D98;
static const int GL_MAP2_COLOR_4 = 0x0DB0;
static const int GL_MAP2_GRID_DOMAIN = 0x0DD2;
static const int GL_MAP2_GRID_SEGMENTS = 0x0DD3;
static const int GL_MAP2_INDEX = 0x0DB1;
static const int GL_MAP2_NORMAL = 0x0DB2;
static const int GL_MAP2_TEXTURE_COORD_1 = 0x0DB3;
static const int GL_MAP2_TEXTURE_COORD_2 = 0x0DB4;
static const int GL_MAP2_TEXTURE_COORD_3 = 0x0DB5;
static const int GL_MAP2_TEXTURE_COORD_4 = 0x0DB6;
static const int GL_MAP2_VERTEX_3 = 0x0DB7;
static const int GL_MAP2_VERTEX_4 = 0x0DB8;
static const int GL_COEFF = 0x0A00;
static const int GL_DOMAIN = 0x0A02;
static const int GL_ORDER = 0x0A01;
static const int GL_FOG_HINT = 0x0C54;
static const int GL_LINE_SMOOTH_HINT = 0x0C52;
static const int GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50;
static const int GL_POINT_SMOOTH_HINT = 0x0C51;
static const int GL_POLYGON_SMOOTH_HINT = 0x0C53;
static const int GL_DONT_CARE = 0x1100;
static const int GL_FASTEST = 0x1101;
static const int GL_NICEST = 0x1102;
static const int GL_SCISSOR_TEST = 0x0C11;
static const int GL_SCISSOR_BOX = 0x0C10;
static const int GL_MAP_COLOR = 0x0D10;
static const int GL_MAP_STENCIL = 0x0D11;
static const int GL_INDEX_SHIFT = 0x0D12;
static const int GL_INDEX_OFFSET = 0x0D13;
static const int GL_RED_SCALE = 0x0D14;
static const int GL_RED_BIAS = 0x0D15;
static const int GL_GREEN_SCALE = 0x0D18;
static const int GL_GREEN_BIAS = 0x0D19;
static const int GL_BLUE_SCALE = 0x0D1A;
static const int GL_BLUE_BIAS = 0x0D1B;
static const int GL_ALPHA_SCALE = 0x0D1C;
static const int GL_ALPHA_BIAS = 0x0D1D;
static const int GL_DEPTH_SCALE = 0x0D1E;
static const int GL_DEPTH_BIAS = 0x0D1F;
static const int GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1;
static const int GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0;
static const int GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2;
static const int GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3;
static const int GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4;
static const int GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5;
static const int GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6;
static const int GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7;
static const int GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8;
static const int GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9;
static const int GL_PIXEL_MAP_S_TO_S = 0x0C71;
static const int GL_PIXEL_MAP_I_TO_I = 0x0C70;
static const int GL_PIXEL_MAP_I_TO_R = 0x0C72;
static const int GL_PIXEL_MAP_I_TO_G = 0x0C73;
static const int GL_PIXEL_MAP_I_TO_B = 0x0C74;
static const int GL_PIXEL_MAP_I_TO_A = 0x0C75;
static const int GL_PIXEL_MAP_R_TO_R = 0x0C76;
static const int GL_PIXEL_MAP_G_TO_G = 0x0C77;
static const int GL_PIXEL_MAP_B_TO_B = 0x0C78;
static const int GL_PIXEL_MAP_A_TO_A = 0x0C79;
static const int GL_PACK_ALIGNMENT = 0x0D05;
static const int GL_PACK_LSB_FIRST = 0x0D01;
static const int GL_PACK_ROW_LENGTH = 0x0D02;
static const int GL_PACK_SKIP_PIXELS = 0x0D04;
static const int GL_PACK_SKIP_ROWS = 0x0D03;
static const int GL_PACK_SWAP_BYTES = 0x0D00;
static const int GL_UNPACK_ALIGNMENT = 0x0CF5;
static const int GL_UNPACK_LSB_FIRST = 0x0CF1;
static const int GL_UNPACK_ROW_LENGTH = 0x0CF2;
static const int GL_UNPACK_SKIP_PIXELS = 0x0CF4;
static const int GL_UNPACK_SKIP_ROWS = 0x0CF3;
static const int GL_UNPACK_SWAP_BYTES = 0x0CF0;
static const int GL_ZOOM_X = 0x0D16;
static const int GL_ZOOM_Y = 0x0D17;
static const int GL_TEXTURE_ENV = 0x2300;
static const int GL_TEXTURE_ENV_MODE = 0x2200;
static const int GL_TEXTURE_1D = 0x0DE0;
static const int GL_TEXTURE_2D = 0x0DE1;
static const int GL_TEXTURE_WRAP_S = 0x2802;
static const int GL_TEXTURE_WRAP_T = 0x2803;
static const int GL_TEXTURE_MAG_FILTER = 0x2800;
static const int GL_TEXTURE_MIN_FILTER = 0x2801;
static const int GL_TEXTURE_ENV_COLOR = 0x2201;
static const int GL_TEXTURE_GEN_S = 0x0C60;
static const int GL_TEXTURE_GEN_T = 0x0C61;
static const int GL_TEXTURE_GEN_MODE = 0x2500;
static const int GL_TEXTURE_BORDER_COLOR = 0x1004;
static const int GL_TEXTURE_WIDTH = 0x1000;
static const int GL_TEXTURE_HEIGHT = 0x1001;
static const int GL_TEXTURE_BORDER = 0x1005;
static const int GL_TEXTURE_COMPONENTS = 0x1003;
static const int GL_TEXTURE_RED_SIZE = 0x805C;
static const int GL_TEXTURE_GREEN_SIZE = 0x805D;
static const int GL_TEXTURE_BLUE_SIZE = 0x805E;
static const int GL_TEXTURE_ALPHA_SIZE = 0x805F;
static const int GL_TEXTURE_LUMINANCE_SIZE = 0x8060;
static const int GL_TEXTURE_INTENSITY_SIZE = 0x8061;
static const int GL_NEAREST_MIPMAP_NEAREST = 0x2700;
static const int GL_NEAREST_MIPMAP_LINEAR = 0x2702;
static const int GL_LINEAR_MIPMAP_NEAREST = 0x2701;
static const int GL_LINEAR_MIPMAP_LINEAR = 0x2703;
static const int GL_OBJECT_LINEAR = 0x2401;
static const int GL_OBJECT_PLANE = 0x2501;
static const int GL_EYE_LINEAR = 0x2400;
static const int GL_EYE_PLANE = 0x2502;
static const int GL_SPHERE_MAP = 0x2402;
static const int GL_DECAL = 0x2101;
static const int GL_MODULATE = 0x2100;
static const int GL_NEAREST = 0x2600;
static const int GL_REPEAT = 0x2901;
static const int GL_CLAMP = 0x2900;
static const int GL_S = 0x2000;
static const int GL_T = 0x2001;
static const int GL_R = 0x2002;
static const int GL_Q = 0x2003;
static const int GL_TEXTURE_GEN_R = 0x0C62;
static const int GL_TEXTURE_GEN_Q = 0x0C63;
static const int GL_VENDOR = 0x1F00;
static const int GL_RENDERER = 0x1F01;
static const int GL_VERSION = 0x1F02;
static const int GL_EXTENSIONS = 0x1F03;
static const int GL_NO_ERROR = 0x0;
static const int GL_INVALID_VALUE = 0x0501;
static const int GL_INVALID_ENUM = 0x0500;
static const int GL_INVALID_OPERATION = 0x0502;
static const int GL_STACK_OVERFLOW = 0x0503;
static const int GL_STACK_UNDERFLOW = 0x0504;
static const int GL_OUT_OF_MEMORY = 0x0505;
static const int GL_CURRENT_BIT = 0x00000001;
static const int GL_POINT_BIT = 0x00000002;
static const int GL_LINE_BIT = 0x00000004;
static const int GL_POLYGON_BIT = 0x00000008;
static const int GL_POLYGON_STIPPLE_BIT = 0x00000010;
static const int GL_PIXEL_MODE_BIT = 0x00000020;
static const int GL_LIGHTING_BIT = 0x00000040;
static const int GL_FOG_BIT = 0x00000080;
static const int GL_DEPTH_BUFFER_BIT = 0x00000100;
static const int GL_ACCUM_BUFFER_BIT = 0x00000200;
static const int GL_STENCIL_BUFFER_BIT = 0x00000400;
static const int GL_VIEWPORT_BIT = 0x00000800;
static const int GL_TRANSFORM_BIT = 0x00001000;
static const int GL_ENABLE_BIT = 0x00002000;
static const int GL_COLOR_BUFFER_BIT = 0x00004000;
static const int GL_HINT_BIT = 0x00008000;
static const int GL_EVAL_BIT = 0x00010000;
static const int GL_LIST_BIT = 0x00020000;
static const int GL_TEXTURE_BIT = 0x00040000;
static const int GL_SCISSOR_BIT = 0x00080000;
static const int GL_ALL_ATTRIB_BITS = 0x000FFFFF;
static const int GL_PROXY_TEXTURE_1D = 0x8063;
static const int GL_PROXY_TEXTURE_2D = 0x8064;
static const int GL_TEXTURE_PRIORITY = 0x8066;
static const int GL_TEXTURE_RESIDENT = 0x8067;
static const int GL_TEXTURE_BINDING_1D = 0x8068;
static const int GL_TEXTURE_BINDING_2D = 0x8069;
static const int GL_TEXTURE_INTERNAL_FORMAT = 0x1003;
static const int GL_ALPHA4 = 0x803B;
static const int GL_ALPHA8 = 0x803C;
static const int GL_ALPHA12 = 0x803D;
static const int GL_ALPHA16 = 0x803E;
static const int GL_LUMINANCE4 = 0x803F;
static const int GL_LUMINANCE8 = 0x8040;
static const int GL_LUMINANCE12 = 0x8041;
static const int GL_LUMINANCE16 = 0x8042;
static const int GL_LUMINANCE4_ALPHA4 = 0x8043;
static const int GL_LUMINANCE6_ALPHA2 = 0x8044;
static const int GL_LUMINANCE8_ALPHA8 = 0x8045;
static const int GL_LUMINANCE12_ALPHA4 = 0x8046;
static const int GL_LUMINANCE12_ALPHA12 = 0x8047;
static const int GL_LUMINANCE16_ALPHA16 = 0x8048;
static const int GL_INTENSITY = 0x8049;
static const int GL_INTENSITY4 = 0x804A;
static const int GL_INTENSITY8 = 0x804B;
static const int GL_INTENSITY12 = 0x804C;
static const int GL_INTENSITY16 = 0x804D;
static const int GL_R3_G3_B2 = 0x2A10;
static const int GL_RGB4 = 0x804F;
static const int GL_RGB5 = 0x8050;
static const int GL_RGB8 = 0x8051;
static const int GL_RGB10 = 0x8052;
static const int GL_RGB12 = 0x8053;
static const int GL_RGB16 = 0x8054;
static const int GL_RGBA2 = 0x8055;
static const int GL_RGBA4 = 0x8056;
static const int GL_RGB5_A1 = 0x8057;
static const int GL_RGBA8 = 0x8058;
static const int GL_RGB10_A2 = 0x8059;
static const int GL_RGBA12 = 0x805A;
static const int GL_RGBA16 = 0x805B;
static const int GL_CLIENT_PIXEL_STORE_BIT = 0x00000001;
static const int GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002;
static const int GL_ALL_CLIENT_ATTRIB_BITS = 0xFFFFFFFF;
static const int GL_CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF;
static const int GL_RESCALE_NORMAL = 0x803A;
static const int GL_CLAMP_TO_EDGE = 0x812F;
static const int GL_MAX_ELEMENTS_VERTICES = 0x80E8;
static const int GL_MAX_ELEMENTS_INDICES = 0x80E9;
static const int GL_BGR = 0x80E0;
static const int GL_BGRA = 0x80E1;
static const int GL_UNSIGNED_BYTE_3_3_2 = 0x8032;
static const int GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362;
static const int GL_UNSIGNED_SHORT_5_6_5 = 0x8363;
static const int GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364;
static const int GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;
static const int GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365;
static const int GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;
static const int GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366;
static const int GL_UNSIGNED_INT_8_8_8_8 = 0x8035;
static const int GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367;
static const int GL_UNSIGNED_INT_10_10_10_2 = 0x8036;
static const int GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;
static const int GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8;
static const int GL_SINGLE_COLOR = 0x81F9;
static const int GL_SEPARATE_SPECULAR_COLOR = 0x81FA;
static const int GL_TEXTURE_MIN_LOD = 0x813A;
static const int GL_TEXTURE_MAX_LOD = 0x813B;
static const int GL_TEXTURE_BASE_LEVEL = 0x813C;
static const int GL_TEXTURE_MAX_LEVEL = 0x813D;
static const int GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12;
static const int GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13;
static const int GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22;
static const int GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23;
static const int GL_ALIASED_POINT_SIZE_RANGE = 0x846D;
static const int GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;
static const int GL_PACK_SKIP_IMAGES = 0x806B;
static const int GL_PACK_IMAGE_HEIGHT = 0x806C;
static const int GL_UNPACK_SKIP_IMAGES = 0x806D;
static const int GL_UNPACK_IMAGE_HEIGHT = 0x806E;
static const int GL_TEXTURE_3D = 0x806F;
static const int GL_PROXY_TEXTURE_3D = 0x8070;
static const int GL_TEXTURE_DEPTH = 0x8071;
static const int GL_TEXTURE_WRAP_R = 0x8072;
static const int GL_MAX_3D_TEXTURE_SIZE = 0x8073;
static const int GL_TEXTURE_BINDING_3D = 0x806A;
static const int GL_COLOR_TABLE = 0x80D0;
static const int GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1;
static const int GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2;
static const int GL_PROXY_COLOR_TABLE = 0x80D3;
static const int GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4;
static const int GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5;
static const int GL_COLOR_TABLE_SCALE = 0x80D6;
static const int GL_COLOR_TABLE_BIAS = 0x80D7;
static const int GL_COLOR_TABLE_FORMAT = 0x80D8;
static const int GL_COLOR_TABLE_WIDTH = 0x80D9;
static const int GL_COLOR_TABLE_RED_SIZE = 0x80DA;
static const int GL_COLOR_TABLE_GREEN_SIZE = 0x80DB;
static const int GL_COLOR_TABLE_BLUE_SIZE = 0x80DC;
static const int GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD;
static const int GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE;
static const int GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF;
static const int GL_CONVOLUTION_1D = 0x8010;
static const int GL_CONVOLUTION_2D = 0x8011;
static const int GL_SEPARABLE_2D = 0x8012;
static const int GL_CONVOLUTION_BORDER_MODE = 0x8013;
static const int GL_CONVOLUTION_FILTER_SCALE = 0x8014;
static const int GL_CONVOLUTION_FILTER_BIAS = 0x8015;
static const int GL_REDUCE = 0x8016;
static const int GL_CONVOLUTION_FORMAT = 0x8017;
static const int GL_CONVOLUTION_WIDTH = 0x8018;
static const int GL_CONVOLUTION_HEIGHT = 0x8019;
static const int GL_MAX_CONVOLUTION_WIDTH = 0x801A;
static const int GL_MAX_CONVOLUTION_HEIGHT = 0x801B;
static const int GL_POST_CONVOLUTION_RED_SCALE = 0x801C;
static const int GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D;
static const int GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E;
static const int GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F;
static const int GL_POST_CONVOLUTION_RED_BIAS = 0x8020;
static const int GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021;
static const int GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022;
static const int GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023;
static const int GL_CONSTANT_BORDER = 0x8151;
static const int GL_REPLICATE_BORDER = 0x8153;
static const int GL_CONVOLUTION_BORDER_COLOR = 0x8154;
static const int GL_COLOR_MATRIX = 0x80B1;
static const int GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2;
static const int GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3;
static const int GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4;
static const int GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5;
static const int GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6;
static const int GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7;
static const int GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8;
static const int GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9;
static const int GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA;
static const int GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB;
static const int GL_HISTOGRAM = 0x8024;
static const int GL_PROXY_HISTOGRAM = 0x8025;
static const int GL_HISTOGRAM_WIDTH = 0x8026;
static const int GL_HISTOGRAM_FORMAT = 0x8027;
static const int GL_HISTOGRAM_RED_SIZE = 0x8028;
static const int GL_HISTOGRAM_GREEN_SIZE = 0x8029;
static const int GL_HISTOGRAM_BLUE_SIZE = 0x802A;
static const int GL_HISTOGRAM_ALPHA_SIZE = 0x802B;
static const int GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C;
static const int GL_HISTOGRAM_SINK = 0x802D;
static const int GL_MINMAX = 0x802E;
static const int GL_MINMAX_FORMAT = 0x802F;
static const int GL_MINMAX_SINK = 0x8030;
static const int GL_TABLE_TOO_LARGE = 0x8031;
static const int GL_BLEND_EQUATION = 0x8009;
static const int GL_MIN = 0x8007;
static const int GL_MAX = 0x8008;
static const int GL_FUNC_ADD = 0x8006;
static const int GL_FUNC_SUBTRACT = 0x800A;
static const int GL_FUNC_REVERSE_SUBTRACT = 0x800B;
static const int GL_BLEND_COLOR = 0x8005;
static const int GL_TEXTURE0 = 0x84C0;
static const int GL_TEXTURE1 = 0x84C1;
static const int GL_TEXTURE2 = 0x84C2;
static const int GL_TEXTURE3 = 0x84C3;
static const int GL_TEXTURE4 = 0x84C4;
static const int GL_TEXTURE5 = 0x84C5;
static const int GL_TEXTURE6 = 0x84C6;
static const int GL_TEXTURE7 = 0x84C7;
static const int GL_TEXTURE8 = 0x84C8;
static const int GL_TEXTURE9 = 0x84C9;
static const int GL_TEXTURE10 = 0x84CA;
static const int GL_TEXTURE11 = 0x84CB;
static const int GL_TEXTURE12 = 0x84CC;
static const int GL_TEXTURE13 = 0x84CD;
static const int GL_TEXTURE14 = 0x84CE;
static const int GL_TEXTURE15 = 0x84CF;
static const int GL_TEXTURE16 = 0x84D0;
static const int GL_TEXTURE17 = 0x84D1;
static const int GL_TEXTURE18 = 0x84D2;
static const int GL_TEXTURE19 = 0x84D3;
static const int GL_TEXTURE20 = 0x84D4;
static const int GL_TEXTURE21 = 0x84D5;
static const int GL_TEXTURE22 = 0x84D6;
static const int GL_TEXTURE23 = 0x84D7;
static const int GL_TEXTURE24 = 0x84D8;
static const int GL_TEXTURE25 = 0x84D9;
static const int GL_TEXTURE26 = 0x84DA;
static const int GL_TEXTURE27 = 0x84DB;
static const int GL_TEXTURE28 = 0x84DC;
static const int GL_TEXTURE29 = 0x84DD;
static const int GL_TEXTURE30 = 0x84DE;
static const int GL_TEXTURE31 = 0x84DF;
static const int GL_ACTIVE_TEXTURE = 0x84E0;
static const int GL_CLIENT_ACTIVE_TEXTURE = 0x84E1;
static const int GL_MAX_TEXTURE_UNITS = 0x84E2;
static const int GL_NORMAL_MAP = 0x8511;
static const int GL_REFLECTION_MAP = 0x8512;
static const int GL_TEXTURE_CUBE_MAP = 0x8513;
static const int GL_TEXTURE_BINDING_CUBE_MAP = 0x8514;
static const int GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;
static const int GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;
static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;
static const int GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;
static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;
static const int GL_PROXY_TEXTURE_CUBE_MAP = 0x851B;
static const int GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;
static const int GL_COMPRESSED_ALPHA = 0x84E9;
static const int GL_COMPRESSED_LUMINANCE = 0x84EA;
static const int GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB;
static const int GL_COMPRESSED_INTENSITY = 0x84EC;
static const int GL_COMPRESSED_RGB = 0x84ED;
static const int GL_COMPRESSED_RGBA = 0x84EE;
static const int GL_TEXTURE_COMPRESSION_HINT = 0x84EF;
static const int GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0;
static const int GL_TEXTURE_COMPRESSED = 0x86A1;
static const int GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;
static const int GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;
static const int GL_MULTISAMPLE = 0x809D;
static const int GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;
static const int GL_SAMPLE_ALPHA_TO_ONE = 0x809F;
static const int GL_SAMPLE_COVERAGE = 0x80A0;
static const int GL_SAMPLE_BUFFERS = 0x80A8;
static const int GL_SAMPLES = 0x80A9;
static const int GL_SAMPLE_COVERAGE_VALUE = 0x80AA;
static const int GL_SAMPLE_COVERAGE_INVERT = 0x80AB;
static const int GL_MULTISAMPLE_BIT = 0x20000000;
static const int GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3;
static const int GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4;
static const int GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5;
static const int GL_TRANSPOSE_COLOR_MATRIX = 0x84E6;
static const int GL_COMBINE = 0x8570;
static const int GL_COMBINE_RGB = 0x8571;
static const int GL_COMBINE_ALPHA = 0x8572;
static const int GL_SOURCE0_RGB = 0x8580;
static const int GL_SOURCE1_RGB = 0x8581;
static const int GL_SOURCE2_RGB = 0x8582;
static const int GL_SOURCE0_ALPHA = 0x8588;
static const int GL_SOURCE1_ALPHA = 0x8589;
static const int GL_SOURCE2_ALPHA = 0x858A;
static const int GL_OPERAND0_RGB = 0x8590;
static const int GL_OPERAND1_RGB = 0x8591;
static const int GL_OPERAND2_RGB = 0x8592;
static const int GL_OPERAND0_ALPHA = 0x8598;
static const int GL_OPERAND1_ALPHA = 0x8599;
static const int GL_OPERAND2_ALPHA = 0x859A;
static const int GL_RGB_SCALE = 0x8573;
static const int GL_ADD_SIGNED = 0x8574;
static const int GL_INTERPOLATE = 0x8575;
static const int GL_SUBTRACT = 0x84E7;
static const int GL_CONSTANT = 0x8576;
static const int GL_PRIMARY_COLOR = 0x8577;
static const int GL_PREVIOUS = 0x8578;
static const int GL_DOT3_RGB = 0x86AE;
static const int GL_DOT3_RGBA = 0x86AF;
static const int GL_CLAMP_TO_BORDER = 0x812D;
static const int GL_GLEXT_VERSION = 81;
static const int WIN32_LEAN_AND_MEAN = 1;
static const int GL_BLEND_DST_RGB = 0x80C8;
static const int GL_BLEND_SRC_RGB = 0x80C9;
static const int GL_BLEND_DST_ALPHA = 0x80CA;
static const int GL_BLEND_SRC_ALPHA = 0x80CB;
static const int GL_POINT_FADE_THRESHOLD_SIZE = 0x8128;
static const int GL_DEPTH_COMPONENT16 = 0x81A5;
static const int GL_DEPTH_COMPONENT24 = 0x81A6;
static const int GL_DEPTH_COMPONENT32 = 0x81A7;
static const int GL_MIRRORED_REPEAT = 0x8370;
static const int GL_MAX_TEXTURE_LOD_BIAS = 0x84FD;
static const int GL_TEXTURE_LOD_BIAS = 0x8501;
static const int GL_INCR_WRAP = 0x8507;
static const int GL_DECR_WRAP = 0x8508;
static const int GL_TEXTURE_DEPTH_SIZE = 0x884A;
static const int GL_TEXTURE_COMPARE_MODE = 0x884C;
static const int GL_TEXTURE_COMPARE_FUNC = 0x884D;
static const int GL_POINT_SIZE_MIN = 0x8126;
static const int GL_POINT_SIZE_MAX = 0x8127;
static const int GL_POINT_DISTANCE_ATTENUATION = 0x8129;
static const int GL_GENERATE_MIPMAP = 0x8191;
static const int GL_GENERATE_MIPMAP_HINT = 0x8192;
static const int GL_FOG_COORDINATE_SOURCE = 0x8450;
static const int GL_FOG_COORDINATE = 0x8451;
static const int GL_FRAGMENT_DEPTH = 0x8452;
static const int GL_CURRENT_FOG_COORDINATE = 0x8453;
static const int GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454;
static const int GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455;
static const int GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456;
static const int GL_FOG_COORDINATE_ARRAY = 0x8457;
static const int GL_COLOR_SUM = 0x8458;
static const int GL_CURRENT_SECONDARY_COLOR = 0x8459;
static const int GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A;
static const int GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B;
static const int GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C;
static const int GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D;
static const int GL_SECONDARY_COLOR_ARRAY = 0x845E;
static const int GL_TEXTURE_FILTER_CONTROL = 0x8500;
static const int GL_DEPTH_TEXTURE_MODE = 0x884B;
static const int GL_COMPARE_R_TO_TEXTURE = 0x884E;
static const int GL_BUFFER_SIZE = 0x8764;
static const int GL_BUFFER_USAGE = 0x8765;
static const int GL_QUERY_COUNTER_BITS = 0x8864;
static const int GL_CURRENT_QUERY = 0x8865;
static const int GL_QUERY_RESULT = 0x8866;
static const int GL_QUERY_RESULT_AVAILABLE = 0x8867;
static const int GL_ARRAY_BUFFER = 0x8892;
static const int GL_ELEMENT_ARRAY_BUFFER = 0x8893;
static const int GL_ARRAY_BUFFER_BINDING = 0x8894;
static const int GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;
static const int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;
static const int GL_READ_ONLY = 0x88B8;
static const int GL_WRITE_ONLY = 0x88B9;
static const int GL_READ_WRITE = 0x88BA;
static const int GL_BUFFER_ACCESS = 0x88BB;
static const int GL_BUFFER_MAPPED = 0x88BC;
static const int GL_BUFFER_MAP_POINTER = 0x88BD;
static const int GL_STREAM_DRAW = 0x88E0;
static const int GL_STREAM_READ = 0x88E1;
static const int GL_STREAM_COPY = 0x88E2;
static const int GL_STATIC_DRAW = 0x88E4;
static const int GL_STATIC_READ = 0x88E5;
static const int GL_STATIC_COPY = 0x88E6;
static const int GL_DYNAMIC_DRAW = 0x88E8;
static const int GL_DYNAMIC_READ = 0x88E9;
static const int GL_DYNAMIC_COPY = 0x88EA;
static const int GL_SAMPLES_PASSED = 0x8914;
static const int GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896;
static const int GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897;
static const int GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898;
static const int GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899;
static const int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A;
static const int GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B;
static const int GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C;
static const int GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D;
static const int GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E;
static const int GL_FOG_COORD_SRC = 0x8450;
static const int GL_FOG_COORD = 0x8451;
static const int GL_CURRENT_FOG_COORD = 0x8453;
static const int GL_FOG_COORD_ARRAY_TYPE = 0x8454;
static const int GL_FOG_COORD_ARRAY_STRIDE = 0x8455;
static const int GL_FOG_COORD_ARRAY_POINTER = 0x8456;
static const int GL_FOG_COORD_ARRAY = 0x8457;
static const int GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D;
static const int GL_SRC0_RGB = 0x8580;
static const int GL_SRC1_RGB = 0x8581;
static const int GL_SRC2_RGB = 0x8582;
static const int GL_SRC0_ALPHA = 0x8588;
static const int GL_SRC1_ALPHA = 0x8589;
static const int GL_SRC2_ALPHA = 0x858A;
static const int GL_BLEND_EQUATION_RGB = 0x8009;
static const int GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
static const int GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;
static const int GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;
static const int GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;
static const int GL_CURRENT_VERTEX_ATTRIB = 0x8626;
static const int GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642;
static const int GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;
static const int GL_STENCIL_BACK_FUNC = 0x8800;
static const int GL_STENCIL_BACK_FAIL = 0x8801;
static const int GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;
static const int GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;
static const int GL_MAX_DRAW_BUFFERS = 0x8824;
static const int GL_DRAW_BUFFER0 = 0x8825;
static const int GL_DRAW_BUFFER1 = 0x8826;
static const int GL_DRAW_BUFFER2 = 0x8827;
static const int GL_DRAW_BUFFER3 = 0x8828;
static const int GL_DRAW_BUFFER4 = 0x8829;
static const int GL_DRAW_BUFFER5 = 0x882A;
static const int GL_DRAW_BUFFER6 = 0x882B;
static const int GL_DRAW_BUFFER7 = 0x882C;
static const int GL_DRAW_BUFFER8 = 0x882D;
static const int GL_DRAW_BUFFER9 = 0x882E;
static const int GL_DRAW_BUFFER10 = 0x882F;
static const int GL_DRAW_BUFFER11 = 0x8830;
static const int GL_DRAW_BUFFER12 = 0x8831;
static const int GL_DRAW_BUFFER13 = 0x8832;
static const int GL_DRAW_BUFFER14 = 0x8833;
static const int GL_DRAW_BUFFER15 = 0x8834;
static const int GL_BLEND_EQUATION_ALPHA = 0x883D;
static const int GL_MAX_VERTEX_ATTRIBS = 0x8869;
static const int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
static const int GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;
static const int GL_FRAGMENT_SHADER = 0x8B30;
static const int GL_VERTEX_SHADER = 0x8B31;
static const int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;
static const int GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;
static const int GL_MAX_VARYING_FLOATS = 0x8B4B;
static const int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
static const int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
static const int GL_SHADER_TYPE = 0x8B4F;
static const int GL_FLOAT_VEC2 = 0x8B50;
static const int GL_FLOAT_VEC3 = 0x8B51;
static const int GL_FLOAT_VEC4 = 0x8B52;
static const int GL_INT_VEC2 = 0x8B53;
static const int GL_INT_VEC3 = 0x8B54;
static const int GL_INT_VEC4 = 0x8B55;
static const int GL_BOOL = 0x8B56;
static const int GL_BOOL_VEC2 = 0x8B57;
static const int GL_BOOL_VEC3 = 0x8B58;
static const int GL_BOOL_VEC4 = 0x8B59;
static const int GL_FLOAT_MAT2 = 0x8B5A;
static const int GL_FLOAT_MAT3 = 0x8B5B;
static const int GL_FLOAT_MAT4 = 0x8B5C;
static const int GL_SAMPLER_1D = 0x8B5D;
static const int GL_SAMPLER_2D = 0x8B5E;
static const int GL_SAMPLER_3D = 0x8B5F;
static const int GL_SAMPLER_CUBE = 0x8B60;
static const int GL_SAMPLER_1D_SHADOW = 0x8B61;
static const int GL_SAMPLER_2D_SHADOW = 0x8B62;
static const int GL_DELETE_STATUS = 0x8B80;
static const int GL_COMPILE_STATUS = 0x8B81;
static const int GL_LINK_STATUS = 0x8B82;
static const int GL_VALIDATE_STATUS = 0x8B83;
static const int GL_INFO_LOG_LENGTH = 0x8B84;
static const int GL_ATTACHED_SHADERS = 0x8B85;
static const int GL_ACTIVE_UNIFORMS = 0x8B86;
static const int GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;
static const int GL_SHADER_SOURCE_LENGTH = 0x8B88;
static const int GL_ACTIVE_ATTRIBUTES = 0x8B89;
static const int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;
static const int GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;
static const int GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
static const int GL_CURRENT_PROGRAM = 0x8B8D;
static const int GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0;
static const int GL_LOWER_LEFT = 0x8CA1;
static const int GL_UPPER_LEFT = 0x8CA2;
static const int GL_STENCIL_BACK_REF = 0x8CA3;
static const int GL_STENCIL_BACK_VALUE_MASK = 0x8CA4;
static const int GL_STENCIL_BACK_WRITEMASK = 0x8CA5;
static const int GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643;
static const int GL_POINT_SPRITE = 0x8861;
static const int GL_COORD_REPLACE = 0x8862;
static const int GL_MAX_TEXTURE_COORDS = 0x8871;
static const int GL_PIXEL_PACK_BUFFER = 0x88EB;
static const int GL_PIXEL_UNPACK_BUFFER = 0x88EC;
static const int GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED;
static const int GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;
static const int GL_FLOAT_MAT2x3 = 0x8B65;
static const int GL_FLOAT_MAT2x4 = 0x8B66;
static const int GL_FLOAT_MAT3x2 = 0x8B67;
static const int GL_FLOAT_MAT3x4 = 0x8B68;
static const int GL_FLOAT_MAT4x2 = 0x8B69;
static const int GL_FLOAT_MAT4x3 = 0x8B6A;
static const int GL_SRGB = 0x8C40;
static const int GL_SRGB8 = 0x8C41;
static const int GL_SRGB_ALPHA = 0x8C42;
static const int GL_SRGB8_ALPHA8 = 0x8C43;
static const int GL_COMPRESSED_SRGB = 0x8C48;
static const int GL_COMPRESSED_SRGB_ALPHA = 0x8C49;
static const int GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F;
static const int GL_SLUMINANCE_ALPHA = 0x8C44;
static const int GL_SLUMINANCE8_ALPHA8 = 0x8C45;
static const int GL_SLUMINANCE = 0x8C46;
static const int GL_SLUMINANCE8 = 0x8C47;
static const int GL_COMPRESSED_SLUMINANCE = 0x8C4A;
static const int GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B;
static const int GL_COMPARE_REF_TO_TEXTURE = 0x884E;
static const int GL_CLIP_DISTANCE0 = 0x3000;
static const int GL_CLIP_DISTANCE1 = 0x3001;
static const int GL_CLIP_DISTANCE2 = 0x3002;
static const int GL_CLIP_DISTANCE3 = 0x3003;
static const int GL_CLIP_DISTANCE4 = 0x3004;
static const int GL_CLIP_DISTANCE5 = 0x3005;
static const int GL_CLIP_DISTANCE6 = 0x3006;
static const int GL_CLIP_DISTANCE7 = 0x3007;
static const int GL_MAX_CLIP_DISTANCES = 0x0D32;
static const int GL_MAJOR_VERSION = 0x821B;
static const int GL_MINOR_VERSION = 0x821C;
static const int GL_NUM_EXTENSIONS = 0x821D;
static const int GL_CONTEXT_FLAGS = 0x821E;
static const int GL_COMPRESSED_RED = 0x8225;
static const int GL_COMPRESSED_RG = 0x8226;
static const int GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x0001;
static const int GL_RGBA32F = 0x8814;
static const int GL_RGB32F = 0x8815;
static const int GL_RGBA16F = 0x881A;
static const int GL_RGB16F = 0x881B;
static const int GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;
static const int GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;
static const int GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;
static const int GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;
static const int GL_CLAMP_READ_COLOR = 0x891C;
static const int GL_FIXED_ONLY = 0x891D;
static const int GL_MAX_VARYING_COMPONENTS = 0x8B4B;
static const int GL_TEXTURE_1D_ARRAY = 0x8C18;
static const int GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19;
static const int GL_TEXTURE_2D_ARRAY = 0x8C1A;
static const int GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B;
static const int GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C;
static const int GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D;
static const int GL_R11F_G11F_B10F = 0x8C3A;
static const int GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;
static const int GL_RGB9_E5 = 0x8C3D;
static const int GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;
static const int GL_TEXTURE_SHARED_SIZE = 0x8C3F;
static const int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;
static const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;
static const int GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;
static const int GL_PRIMITIVES_GENERATED = 0x8C87;
static const int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;
static const int GL_RASTERIZER_DISCARD = 0x8C89;
static const int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;
static const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;
static const int GL_INTERLEAVED_ATTRIBS = 0x8C8C;
static const int GL_SEPARATE_ATTRIBS = 0x8C8D;
static const int GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;
static const int GL_RGBA32UI = 0x8D70;
static const int GL_RGB32UI = 0x8D71;
static const int GL_RGBA16UI = 0x8D76;
static const int GL_RGB16UI = 0x8D77;
static const int GL_RGBA8UI = 0x8D7C;
static const int GL_RGB8UI = 0x8D7D;
static const int GL_RGBA32I = 0x8D82;
static const int GL_RGB32I = 0x8D83;
static const int GL_RGBA16I = 0x8D88;
static const int GL_RGB16I = 0x8D89;
static const int GL_RGBA8I = 0x8D8E;
static const int GL_RGB8I = 0x8D8F;
static const int GL_RED_INTEGER = 0x8D94;
static const int GL_GREEN_INTEGER = 0x8D95;
static const int GL_BLUE_INTEGER = 0x8D96;
static const int GL_RGB_INTEGER = 0x8D98;
static const int GL_RGBA_INTEGER = 0x8D99;
static const int GL_BGR_INTEGER = 0x8D9A;
static const int GL_BGRA_INTEGER = 0x8D9B;
static const int GL_SAMPLER_1D_ARRAY = 0x8DC0;
static const int GL_SAMPLER_2D_ARRAY = 0x8DC1;
static const int GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3;
static const int GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;
static const int GL_SAMPLER_CUBE_SHADOW = 0x8DC5;
static const int GL_UNSIGNED_INT_VEC2 = 0x8DC6;
static const int GL_UNSIGNED_INT_VEC3 = 0x8DC7;
static const int GL_UNSIGNED_INT_VEC4 = 0x8DC8;
static const int GL_INT_SAMPLER_1D = 0x8DC9;
static const int GL_INT_SAMPLER_2D = 0x8DCA;
static const int GL_INT_SAMPLER_3D = 0x8DCB;
static const int GL_INT_SAMPLER_CUBE = 0x8DCC;
static const int GL_INT_SAMPLER_1D_ARRAY = 0x8DCE;
static const int GL_INT_SAMPLER_2D_ARRAY = 0x8DCF;
static const int GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1;
static const int GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2;
static const int GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3;
static const int GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;
static const int GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6;
static const int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;
static const int GL_QUERY_WAIT = 0x8E13;
static const int GL_QUERY_NO_WAIT = 0x8E14;
static const int GL_QUERY_BY_REGION_WAIT = 0x8E15;
static const int GL_QUERY_BY_REGION_NO_WAIT = 0x8E16;
static const int GL_BUFFER_ACCESS_FLAGS = 0x911F;
static const int GL_BUFFER_MAP_LENGTH = 0x9120;
static const int GL_BUFFER_MAP_OFFSET = 0x9121;
static const int GL_CLAMP_VERTEX_COLOR = 0x891A;
static const int GL_CLAMP_FRAGMENT_COLOR = 0x891B;
static const int GL_ALPHA_INTEGER = 0x8D97;
static const int GL_SAMPLER_2D_RECT = 0x8B63;
static const int GL_SAMPLER_2D_RECT_SHADOW = 0x8B64;
static const int GL_SAMPLER_BUFFER = 0x8DC2;
static const int GL_INT_SAMPLER_2D_RECT = 0x8DCD;
static const int GL_INT_SAMPLER_BUFFER = 0x8DD0;
static const int GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5;
static const int GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8;
static const int GL_TEXTURE_BUFFER = 0x8C2A;
static const int GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B;
static const int GL_TEXTURE_BINDING_BUFFER = 0x8C2C;
static const int GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D;
static const int GL_TEXTURE_BUFFER_FORMAT = 0x8C2E;
static const int GL_TEXTURE_RECTANGLE = 0x84F5;
static const int GL_TEXTURE_BINDING_RECTANGLE = 0x84F6;
static const int GL_PROXY_TEXTURE_RECTANGLE = 0x84F7;
static const int GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8;
static const int GL_RED_SNORM = 0x8F90;
static const int GL_RG_SNORM = 0x8F91;
static const int GL_RGB_SNORM = 0x8F92;
static const int GL_RGBA_SNORM = 0x8F93;
static const int GL_R8_SNORM = 0x8F94;
static const int GL_RG8_SNORM = 0x8F95;
static const int GL_RGB8_SNORM = 0x8F96;
static const int GL_RGBA8_SNORM = 0x8F97;
static const int GL_R16_SNORM = 0x8F98;
static const int GL_RG16_SNORM = 0x8F99;
static const int GL_RGB16_SNORM = 0x8F9A;
static const int GL_RGBA16_SNORM = 0x8F9B;
static const int GL_SIGNED_NORMALIZED = 0x8F9C;
static const int GL_PRIMITIVE_RESTART = 0x8F9D;
static const int GL_PRIMITIVE_RESTART_INDEX = 0x8F9E;
static const int GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001;
static const int GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002;
static const int GL_LINES_ADJACENCY = 0x000A;
static const int GL_LINE_STRIP_ADJACENCY = 0x000B;
static const int GL_TRIANGLES_ADJACENCY = 0x000C;
static const int GL_TRIANGLE_STRIP_ADJACENCY = 0x000D;
static const int GL_PROGRAM_POINT_SIZE = 0x8642;
static const int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29;
static const int GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7;
static const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8;
static const int GL_GEOMETRY_SHADER = 0x8DD9;
static const int GL_GEOMETRY_VERTICES_OUT = 0x8916;
static const int GL_GEOMETRY_INPUT_TYPE = 0x8917;
static const int GL_GEOMETRY_OUTPUT_TYPE = 0x8918;
static const int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF;
static const int GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0;
static const int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1;
static const int GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;
static const int GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123;
static const int GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124;
static const int GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;
static const int GL_CONTEXT_PROFILE_MASK = 0x9126;
static const int GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;
static const int GL_SAMPLE_SHADING = 0x8C36;
static const int GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37;
static const int GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E;
static const int GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F;
static const int GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009;
static const int GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A;
static const int GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B;
static const int GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C;
static const int GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D;
static const int GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E;
static const int GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F;
static const int GL_TEXTURE0_ARB = 0x84C0;
static const int GL_TEXTURE1_ARB = 0x84C1;
static const int GL_TEXTURE2_ARB = 0x84C2;
static const int GL_TEXTURE3_ARB = 0x84C3;
static const int GL_TEXTURE4_ARB = 0x84C4;
static const int GL_TEXTURE5_ARB = 0x84C5;
static const int GL_TEXTURE6_ARB = 0x84C6;
static const int GL_TEXTURE7_ARB = 0x84C7;
static const int GL_TEXTURE8_ARB = 0x84C8;
static const int GL_TEXTURE9_ARB = 0x84C9;
static const int GL_TEXTURE10_ARB = 0x84CA;
static const int GL_TEXTURE11_ARB = 0x84CB;
static const int GL_TEXTURE12_ARB = 0x84CC;
static const int GL_TEXTURE13_ARB = 0x84CD;
static const int GL_TEXTURE14_ARB = 0x84CE;
static const int GL_TEXTURE15_ARB = 0x84CF;
static const int GL_TEXTURE16_ARB = 0x84D0;
static const int GL_TEXTURE17_ARB = 0x84D1;
static const int GL_TEXTURE18_ARB = 0x84D2;
static const int GL_TEXTURE19_ARB = 0x84D3;
static const int GL_TEXTURE20_ARB = 0x84D4;
static const int GL_TEXTURE21_ARB = 0x84D5;
static const int GL_TEXTURE22_ARB = 0x84D6;
static const int GL_TEXTURE23_ARB = 0x84D7;
static const int GL_TEXTURE24_ARB = 0x84D8;
static const int GL_TEXTURE25_ARB = 0x84D9;
static const int GL_TEXTURE26_ARB = 0x84DA;
static const int GL_TEXTURE27_ARB = 0x84DB;
static const int GL_TEXTURE28_ARB = 0x84DC;
static const int GL_TEXTURE29_ARB = 0x84DD;
static const int GL_TEXTURE30_ARB = 0x84DE;
static const int GL_TEXTURE31_ARB = 0x84DF;
static const int GL_ACTIVE_TEXTURE_ARB = 0x84E0;
static const int GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1;
static const int GL_MAX_TEXTURE_UNITS_ARB = 0x84E2;
static const int GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x84E3;
static const int GL_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4;
static const int GL_TRANSPOSE_TEXTURE_MATRIX_ARB = 0x84E5;
static const int GL_TRANSPOSE_COLOR_MATRIX_ARB = 0x84E6;
static const int GL_MULTISAMPLE_ARB = 0x809D;
static const int GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E;
static const int GL_SAMPLE_ALPHA_TO_ONE_ARB = 0x809F;
static const int GL_SAMPLE_COVERAGE_ARB = 0x80A0;
static const int GL_SAMPLE_BUFFERS_ARB = 0x80A8;
static const int GL_SAMPLES_ARB = 0x80A9;
static const int GL_SAMPLE_COVERAGE_VALUE_ARB = 0x80AA;
static const int GL_SAMPLE_COVERAGE_INVERT_ARB = 0x80AB;
static const int GL_MULTISAMPLE_BIT_ARB = 0x20000000;
static const int GL_NORMAL_MAP_ARB = 0x8511;
static const int GL_REFLECTION_MAP_ARB = 0x8512;
static const int GL_TEXTURE_CUBE_MAP_ARB = 0x8513;
static const int GL_TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514;
static const int GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515;
static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516;
static const int GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517;
static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518;
static const int GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519;
static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A;
static const int GL_PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B;
static const int GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C;
static const int GL_COMPRESSED_ALPHA_ARB = 0x84E9;
static const int GL_COMPRESSED_LUMINANCE_ARB = 0x84EA;
static const int GL_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB;
static const int GL_COMPRESSED_INTENSITY_ARB = 0x84EC;
static const int GL_COMPRESSED_RGB_ARB = 0x84ED;
static const int GL_COMPRESSED_RGBA_ARB = 0x84EE;
static const int GL_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF;
static const int GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0;
static const int GL_TEXTURE_COMPRESSED_ARB = 0x86A1;
static const int GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2;
static const int GL_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A3;
static const int GL_CLAMP_TO_BORDER_ARB = 0x812D;
static const int GL_POINT_SIZE_MIN_ARB = 0x8126;
static const int GL_POINT_SIZE_MAX_ARB = 0x8127;
static const int GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128;
static const int GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129;
static const int GL_MAX_VERTEX_UNITS_ARB = 0x86A4;
static const int GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5;
static const int GL_WEIGHT_SUM_UNITY_ARB = 0x86A6;
static const int GL_VERTEX_BLEND_ARB = 0x86A7;
static const int GL_CURRENT_WEIGHT_ARB = 0x86A8;
static const int GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9;
static const int GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA;
static const int GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB;
static const int GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC;
static const int GL_WEIGHT_ARRAY_ARB = 0x86AD;
static const int GL_MODELVIEW0_ARB = 0x1700;
static const int GL_MODELVIEW1_ARB = 0x850A;
static const int GL_MODELVIEW2_ARB = 0x8722;
static const int GL_MODELVIEW3_ARB = 0x8723;
static const int GL_MODELVIEW4_ARB = 0x8724;
static const int GL_MODELVIEW5_ARB = 0x8725;
static const int GL_MODELVIEW6_ARB = 0x8726;
static const int GL_MODELVIEW7_ARB = 0x8727;
static const int GL_MODELVIEW8_ARB = 0x8728;
static const int GL_MODELVIEW9_ARB = 0x8729;
static const int GL_MODELVIEW10_ARB = 0x872A;
static const int GL_MODELVIEW11_ARB = 0x872B;
static const int GL_MODELVIEW12_ARB = 0x872C;
static const int GL_MODELVIEW13_ARB = 0x872D;
static const int GL_MODELVIEW14_ARB = 0x872E;
static const int GL_MODELVIEW15_ARB = 0x872F;
static const int GL_MODELVIEW16_ARB = 0x8730;
static const int GL_MODELVIEW17_ARB = 0x8731;
static const int GL_MODELVIEW18_ARB = 0x8732;
static const int GL_MODELVIEW19_ARB = 0x8733;
static const int GL_MODELVIEW20_ARB = 0x8734;
static const int GL_MODELVIEW21_ARB = 0x8735;
static const int GL_MODELVIEW22_ARB = 0x8736;
static const int GL_MODELVIEW23_ARB = 0x8737;
static const int GL_MODELVIEW24_ARB = 0x8738;
static const int GL_MODELVIEW25_ARB = 0x8739;
static const int GL_MODELVIEW26_ARB = 0x873A;
static const int GL_MODELVIEW27_ARB = 0x873B;
static const int GL_MODELVIEW28_ARB = 0x873C;
static const int GL_MODELVIEW29_ARB = 0x873D;
static const int GL_MODELVIEW30_ARB = 0x873E;
static const int GL_MODELVIEW31_ARB = 0x873F;
static const int GL_MATRIX_PALETTE_ARB = 0x8840;
static const int GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841;
static const int GL_MAX_PALETTE_MATRICES_ARB = 0x8842;
static const int GL_CURRENT_PALETTE_MATRIX_ARB = 0x8843;
static const int GL_MATRIX_INDEX_ARRAY_ARB = 0x8844;
static const int GL_CURRENT_MATRIX_INDEX_ARB = 0x8845;
static const int GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846;
static const int GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847;
static const int GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848;
static const int GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849;
static const int GL_COMBINE_ARB = 0x8570;
static const int GL_COMBINE_RGB_ARB = 0x8571;
static const int GL_COMBINE_ALPHA_ARB = 0x8572;
static const int GL_SOURCE0_RGB_ARB = 0x8580;
static const int GL_SOURCE1_RGB_ARB = 0x8581;
static const int GL_SOURCE2_RGB_ARB = 0x8582;
static const int GL_SOURCE0_ALPHA_ARB = 0x8588;
static const int GL_SOURCE1_ALPHA_ARB = 0x8589;
static const int GL_SOURCE2_ALPHA_ARB = 0x858A;
static const int GL_OPERAND0_RGB_ARB = 0x8590;
static const int GL_OPERAND1_RGB_ARB = 0x8591;
static const int GL_OPERAND2_RGB_ARB = 0x8592;
static const int GL_OPERAND0_ALPHA_ARB = 0x8598;
static const int GL_OPERAND1_ALPHA_ARB = 0x8599;
static const int GL_OPERAND2_ALPHA_ARB = 0x859A;
static const int GL_RGB_SCALE_ARB = 0x8573;
static const int GL_ADD_SIGNED_ARB = 0x8574;
static const int GL_INTERPOLATE_ARB = 0x8575;
static const int GL_SUBTRACT_ARB = 0x84E7;
static const int GL_CONSTANT_ARB = 0x8576;
static const int GL_PRIMARY_COLOR_ARB = 0x8577;
static const int GL_PREVIOUS_ARB = 0x8578;
static const int GL_DOT3_RGB_ARB = 0x86AE;
static const int GL_DOT3_RGBA_ARB = 0x86AF;
static const int GL_MIRRORED_REPEAT_ARB = 0x8370;
static const int GL_DEPTH_COMPONENT16_ARB = 0x81A5;
static const int GL_DEPTH_COMPONENT24_ARB = 0x81A6;
static const int GL_DEPTH_COMPONENT32_ARB = 0x81A7;
static const int GL_TEXTURE_DEPTH_SIZE_ARB = 0x884A;
static const int GL_DEPTH_TEXTURE_MODE_ARB = 0x884B;
static const int GL_TEXTURE_COMPARE_MODE_ARB = 0x884C;
static const int GL_TEXTURE_COMPARE_FUNC_ARB = 0x884D;
static const int GL_COMPARE_R_TO_TEXTURE_ARB = 0x884E;
static const int GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF;
static const int GL_COLOR_SUM_ARB = 0x8458;
static const int GL_VERTEX_PROGRAM_ARB = 0x8620;
static const int GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622;
static const int GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623;
static const int GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624;
static const int GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625;
static const int GL_CURRENT_VERTEX_ATTRIB_ARB = 0x8626;
static const int GL_PROGRAM_LENGTH_ARB = 0x8627;
static const int GL_PROGRAM_STRING_ARB = 0x8628;
static const int GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = 0x862E;
static const int GL_MAX_PROGRAM_MATRICES_ARB = 0x862F;
static const int GL_CURRENT_MATRIX_STACK_DEPTH_ARB = 0x8640;
static const int GL_CURRENT_MATRIX_ARB = 0x8641;
static const int GL_VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642;
static const int GL_VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643;
static const int GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645;
static const int GL_PROGRAM_ERROR_POSITION_ARB = 0x864B;
static const int GL_PROGRAM_BINDING_ARB = 0x8677;
static const int GL_MAX_VERTEX_ATTRIBS_ARB = 0x8869;
static const int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A;
static const int GL_PROGRAM_ERROR_STRING_ARB = 0x8874;
static const int GL_PROGRAM_FORMAT_ASCII_ARB = 0x8875;
static const int GL_PROGRAM_FORMAT_ARB = 0x8876;
static const int GL_PROGRAM_INSTRUCTIONS_ARB = 0x88A0;
static const int GL_MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1;
static const int GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2;
static const int GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3;
static const int GL_PROGRAM_TEMPORARIES_ARB = 0x88A4;
static const int GL_MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5;
static const int GL_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6;
static const int GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7;
static const int GL_PROGRAM_PARAMETERS_ARB = 0x88A8;
static const int GL_MAX_PROGRAM_PARAMETERS_ARB = 0x88A9;
static const int GL_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA;
static const int GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB;
static const int GL_PROGRAM_ATTRIBS_ARB = 0x88AC;
static const int GL_MAX_PROGRAM_ATTRIBS_ARB = 0x88AD;
static const int GL_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE;
static const int GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF;
static const int GL_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0;
static const int GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1;
static const int GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2;
static const int GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3;
static const int GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4;
static const int GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = 0x88B5;
static const int GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6;
static const int GL_TRANSPOSE_CURRENT_MATRIX_ARB = 0x88B7;
static const int GL_MATRIX0_ARB = 0x88C0;
static const int GL_MATRIX1_ARB = 0x88C1;
static const int GL_MATRIX2_ARB = 0x88C2;
static const int GL_MATRIX3_ARB = 0x88C3;
static const int GL_MATRIX4_ARB = 0x88C4;
static const int GL_MATRIX5_ARB = 0x88C5;
static const int GL_MATRIX6_ARB = 0x88C6;
static const int GL_MATRIX7_ARB = 0x88C7;
static const int GL_MATRIX8_ARB = 0x88C8;
static const int GL_MATRIX9_ARB = 0x88C9;
static const int GL_MATRIX10_ARB = 0x88CA;
static const int GL_MATRIX11_ARB = 0x88CB;
static const int GL_MATRIX12_ARB = 0x88CC;
static const int GL_MATRIX13_ARB = 0x88CD;
static const int GL_MATRIX14_ARB = 0x88CE;
static const int GL_MATRIX15_ARB = 0x88CF;
static const int GL_MATRIX16_ARB = 0x88D0;
static const int GL_MATRIX17_ARB = 0x88D1;
static const int GL_MATRIX18_ARB = 0x88D2;
static const int GL_MATRIX19_ARB = 0x88D3;
static const int GL_MATRIX20_ARB = 0x88D4;
static const int GL_MATRIX21_ARB = 0x88D5;
static const int GL_MATRIX22_ARB = 0x88D6;
static const int GL_MATRIX23_ARB = 0x88D7;
static const int GL_MATRIX24_ARB = 0x88D8;
static const int GL_MATRIX25_ARB = 0x88D9;
static const int GL_MATRIX26_ARB = 0x88DA;
static const int GL_MATRIX27_ARB = 0x88DB;
static const int GL_MATRIX28_ARB = 0x88DC;
static const int GL_MATRIX29_ARB = 0x88DD;
static const int GL_MATRIX30_ARB = 0x88DE;
static const int GL_MATRIX31_ARB = 0x88DF;
static const int GL_FRAGMENT_PROGRAM_ARB = 0x8804;
static const int GL_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805;
static const int GL_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806;
static const int GL_PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807;
static const int GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808;
static const int GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809;
static const int GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A;
static const int GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B;
static const int GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C;
static const int GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D;
static const int GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E;
static const int GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F;
static const int GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810;
static const int GL_MAX_TEXTURE_COORDS_ARB = 0x8871;
static const int GL_MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872;
static const int GL_BUFFER_SIZE_ARB = 0x8764;
static const int GL_BUFFER_USAGE_ARB = 0x8765;
static const int GL_ARRAY_BUFFER_ARB = 0x8892;
static const int GL_ELEMENT_ARRAY_BUFFER_ARB = 0x8893;
static const int GL_ARRAY_BUFFER_BINDING_ARB = 0x8894;
static const int GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895;
static const int GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896;
static const int GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897;
static const int GL_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898;
static const int GL_INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899;
static const int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A;
static const int GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B;
static const int GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C;
static const int GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D;
static const int GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E;
static const int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F;
static const int GL_READ_ONLY_ARB = 0x88B8;
static const int GL_WRITE_ONLY_ARB = 0x88B9;
static const int GL_READ_WRITE_ARB = 0x88BA;
static const int GL_BUFFER_ACCESS_ARB = 0x88BB;
static const int GL_BUFFER_MAPPED_ARB = 0x88BC;
static const int GL_BUFFER_MAP_POINTER_ARB = 0x88BD;
static const int GL_STREAM_DRAW_ARB = 0x88E0;
static const int GL_STREAM_READ_ARB = 0x88E1;
static const int GL_STREAM_COPY_ARB = 0x88E2;
static const int GL_STATIC_DRAW_ARB = 0x88E4;
static const int GL_STATIC_READ_ARB = 0x88E5;
static const int GL_STATIC_COPY_ARB = 0x88E6;
static const int GL_DYNAMIC_DRAW_ARB = 0x88E8;
static const int GL_DYNAMIC_READ_ARB = 0x88E9;
static const int GL_DYNAMIC_COPY_ARB = 0x88EA;
static const int GL_QUERY_COUNTER_BITS_ARB = 0x8864;
static const int GL_CURRENT_QUERY_ARB = 0x8865;
static const int GL_QUERY_RESULT_ARB = 0x8866;
static const int GL_QUERY_RESULT_AVAILABLE_ARB = 0x8867;
static const int GL_SAMPLES_PASSED_ARB = 0x8914;
static const int GL_PROGRAM_OBJECT_ARB = 0x8B40;
static const int GL_SHADER_OBJECT_ARB = 0x8B48;
static const int GL_OBJECT_TYPE_ARB = 0x8B4E;
static const int GL_OBJECT_SUBTYPE_ARB = 0x8B4F;
static const int GL_FLOAT_VEC2_ARB = 0x8B50;
static const int GL_FLOAT_VEC3_ARB = 0x8B51;
static const int GL_FLOAT_VEC4_ARB = 0x8B52;
static const int GL_INT_VEC2_ARB = 0x8B53;
static const int GL_INT_VEC3_ARB = 0x8B54;
static const int GL_INT_VEC4_ARB = 0x8B55;
static const int GL_BOOL_ARB = 0x8B56;
static const int GL_BOOL_VEC2_ARB = 0x8B57;
static const int GL_BOOL_VEC3_ARB = 0x8B58;
static const int GL_BOOL_VEC4_ARB = 0x8B59;
static const int GL_FLOAT_MAT2_ARB = 0x8B5A;
static const int GL_FLOAT_MAT3_ARB = 0x8B5B;
static const int GL_FLOAT_MAT4_ARB = 0x8B5C;
static const int GL_SAMPLER_1D_ARB = 0x8B5D;
static const int GL_SAMPLER_2D_ARB = 0x8B5E;
static const int GL_SAMPLER_3D_ARB = 0x8B5F;
static const int GL_SAMPLER_CUBE_ARB = 0x8B60;
static const int GL_SAMPLER_1D_SHADOW_ARB = 0x8B61;
static const int GL_SAMPLER_2D_SHADOW_ARB = 0x8B62;
static const int GL_SAMPLER_2D_RECT_ARB = 0x8B63;
static const int GL_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64;
static const int GL_OBJECT_DELETE_STATUS_ARB = 0x8B80;
static const int GL_OBJECT_COMPILE_STATUS_ARB = 0x8B81;
static const int GL_OBJECT_LINK_STATUS_ARB = 0x8B82;
static const int GL_OBJECT_VALIDATE_STATUS_ARB = 0x8B83;
static const int GL_OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84;
static const int GL_OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85;
static const int GL_OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86;
static const int GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87;
static const int GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88;
static const int GL_VERTEX_SHADER_ARB = 0x8B31;
static const int GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A;
static const int GL_MAX_VARYING_FLOATS_ARB = 0x8B4B;
static const int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C;
static const int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D;
static const int GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89;
static const int GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A;
static const int GL_FRAGMENT_SHADER_ARB = 0x8B30;
static const int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49;
static const int GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B;
static const int GL_SHADING_LANGUAGE_VERSION_ARB = 0x8B8C;
static const int GL_POINT_SPRITE_ARB = 0x8861;
static const int GL_COORD_REPLACE_ARB = 0x8862;
static const int GL_MAX_DRAW_BUFFERS_ARB = 0x8824;
static const int GL_DRAW_BUFFER0_ARB = 0x8825;
static const int GL_DRAW_BUFFER1_ARB = 0x8826;
static const int GL_DRAW_BUFFER2_ARB = 0x8827;
static const int GL_DRAW_BUFFER3_ARB = 0x8828;
static const int GL_DRAW_BUFFER4_ARB = 0x8829;
static const int GL_DRAW_BUFFER5_ARB = 0x882A;
static const int GL_DRAW_BUFFER6_ARB = 0x882B;
static const int GL_DRAW_BUFFER7_ARB = 0x882C;
static const int GL_DRAW_BUFFER8_ARB = 0x882D;
static const int GL_DRAW_BUFFER9_ARB = 0x882E;
static const int GL_DRAW_BUFFER10_ARB = 0x882F;
static const int GL_DRAW_BUFFER11_ARB = 0x8830;
static const int GL_DRAW_BUFFER12_ARB = 0x8831;
static const int GL_DRAW_BUFFER13_ARB = 0x8832;
static const int GL_DRAW_BUFFER14_ARB = 0x8833;
static const int GL_DRAW_BUFFER15_ARB = 0x8834;
static const int GL_TEXTURE_RECTANGLE_ARB = 0x84F5;
static const int GL_TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6;
static const int GL_PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7;
static const int GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8;
static const int GL_RGBA_FLOAT_MODE_ARB = 0x8820;
static const int GL_CLAMP_VERTEX_COLOR_ARB = 0x891A;
static const int GL_CLAMP_FRAGMENT_COLOR_ARB = 0x891B;
static const int GL_CLAMP_READ_COLOR_ARB = 0x891C;
static const int GL_FIXED_ONLY_ARB = 0x891D;
static const int GL_HALF_FLOAT_ARB = 0x140B;
static const int GL_TEXTURE_RED_TYPE_ARB = 0x8C10;
static const int GL_TEXTURE_GREEN_TYPE_ARB = 0x8C11;
static const int GL_TEXTURE_BLUE_TYPE_ARB = 0x8C12;
static const int GL_TEXTURE_ALPHA_TYPE_ARB = 0x8C13;
static const int GL_TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14;
static const int GL_TEXTURE_INTENSITY_TYPE_ARB = 0x8C15;
static const int GL_TEXTURE_DEPTH_TYPE_ARB = 0x8C16;
static const int GL_UNSIGNED_NORMALIZED_ARB = 0x8C17;
static const int GL_RGBA32F_ARB = 0x8814;
static const int GL_RGB32F_ARB = 0x8815;
static const int GL_ALPHA32F_ARB = 0x8816;
static const int GL_INTENSITY32F_ARB = 0x8817;
static const int GL_LUMINANCE32F_ARB = 0x8818;
static const int GL_LUMINANCE_ALPHA32F_ARB = 0x8819;
static const int GL_RGBA16F_ARB = 0x881A;
static const int GL_RGB16F_ARB = 0x881B;
static const int GL_ALPHA16F_ARB = 0x881C;
static const int GL_INTENSITY16F_ARB = 0x881D;
static const int GL_LUMINANCE16F_ARB = 0x881E;
static const int GL_LUMINANCE_ALPHA16F_ARB = 0x881F;
static const int GL_PIXEL_PACK_BUFFER_ARB = 0x88EB;
static const int GL_PIXEL_UNPACK_BUFFER_ARB = 0x88EC;
static const int GL_PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED;
static const int GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF;
static const int GL_DEPTH_COMPONENT32F = 0x8CAC;
static const int GL_DEPTH32F_STENCIL8 = 0x8CAD;
static const int GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;
static const int GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506;
static const int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;
static const int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;
static const int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;
static const int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;
static const int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;
static const int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;
static const int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;
static const int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;
static const int GL_FRAMEBUFFER_DEFAULT = 0x8218;
static const int GL_FRAMEBUFFER_UNDEFINED = 0x8219;
static const int GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;
static const int GL_MAX_RENDERBUFFER_SIZE = 0x84E8;
static const int GL_DEPTH_STENCIL = 0x84F9;
static const int GL_UNSIGNED_INT_24_8 = 0x84FA;
static const int GL_DEPTH24_STENCIL8 = 0x88F0;
static const int GL_TEXTURE_STENCIL_SIZE = 0x88F1;
static const int GL_TEXTURE_RED_TYPE = 0x8C10;
static const int GL_TEXTURE_GREEN_TYPE = 0x8C11;
static const int GL_TEXTURE_BLUE_TYPE = 0x8C12;
static const int GL_TEXTURE_ALPHA_TYPE = 0x8C13;
static const int GL_TEXTURE_DEPTH_TYPE = 0x8C16;
static const int GL_UNSIGNED_NORMALIZED = 0x8C17;
static const int GL_FRAMEBUFFER_BINDING = 0x8CA6;
static const int GL_DRAW_FRAMEBUFFER_BINDING = GL_FRAMEBUFFER_BINDING;
static const int GL_RENDERBUFFER_BINDING = 0x8CA7;
static const int GL_READ_FRAMEBUFFER = 0x8CA8;
static const int GL_DRAW_FRAMEBUFFER = 0x8CA9;
static const int GL_READ_FRAMEBUFFER_BINDING = 0x8CAA;
static const int GL_RENDERBUFFER_SAMPLES = 0x8CAB;
static const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;
static const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;
static const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;
static const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;
static const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;
static const int GL_FRAMEBUFFER_COMPLETE = 0x8CD5;
static const int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;
static const int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;
static const int GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB;
static const int GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC;
static const int GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD;
static const int GL_MAX_COLOR_ATTACHMENTS = 0x8CDF;
static const int GL_COLOR_ATTACHMENT0 = 0x8CE0;
static const int GL_COLOR_ATTACHMENT1 = 0x8CE1;
static const int GL_COLOR_ATTACHMENT2 = 0x8CE2;
static const int GL_COLOR_ATTACHMENT3 = 0x8CE3;
static const int GL_COLOR_ATTACHMENT4 = 0x8CE4;
static const int GL_COLOR_ATTACHMENT5 = 0x8CE5;
static const int GL_COLOR_ATTACHMENT6 = 0x8CE6;
static const int GL_COLOR_ATTACHMENT7 = 0x8CE7;
static const int GL_COLOR_ATTACHMENT8 = 0x8CE8;
static const int GL_COLOR_ATTACHMENT9 = 0x8CE9;
static const int GL_COLOR_ATTACHMENT10 = 0x8CEA;
static const int GL_COLOR_ATTACHMENT11 = 0x8CEB;
static const int GL_COLOR_ATTACHMENT12 = 0x8CEC;
static const int GL_COLOR_ATTACHMENT13 = 0x8CED;
static const int GL_COLOR_ATTACHMENT14 = 0x8CEE;
static const int GL_COLOR_ATTACHMENT15 = 0x8CEF;
static const int GL_DEPTH_ATTACHMENT = 0x8D00;
static const int GL_STENCIL_ATTACHMENT = 0x8D20;
static const int GL_FRAMEBUFFER = 0x8D40;
static const int GL_RENDERBUFFER = 0x8D41;
static const int GL_RENDERBUFFER_WIDTH = 0x8D42;
static const int GL_RENDERBUFFER_HEIGHT = 0x8D43;
static const int GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;
static const int GL_STENCIL_INDEX1 = 0x8D46;
static const int GL_STENCIL_INDEX4 = 0x8D47;
static const int GL_STENCIL_INDEX8 = 0x8D48;
static const int GL_STENCIL_INDEX16 = 0x8D49;
static const int GL_RENDERBUFFER_RED_SIZE = 0x8D50;
static const int GL_RENDERBUFFER_GREEN_SIZE = 0x8D51;
static const int GL_RENDERBUFFER_BLUE_SIZE = 0x8D52;
static const int GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53;
static const int GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54;
static const int GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55;
static const int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;
static const int GL_MAX_SAMPLES = 0x8D57;
static const int GL_INDEX = 0x8222;
static const int GL_TEXTURE_LUMINANCE_TYPE = 0x8C14;
static const int GL_TEXTURE_INTENSITY_TYPE = 0x8C15;
static const int GL_FRAMEBUFFER_SRGB = 0x8DB9;
static const int GL_LINES_ADJACENCY_ARB = 0x000A;
static const int GL_LINE_STRIP_ADJACENCY_ARB = 0x000B;
static const int GL_TRIANGLES_ADJACENCY_ARB = 0x000C;
static const int GL_TRIANGLE_STRIP_ADJACENCY_ARB = 0x000D;
static const int GL_PROGRAM_POINT_SIZE_ARB = 0x8642;
static const int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x8C29;
static const int GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x8DA7;
static const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x8DA8;
static const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8DA9;
static const int GL_GEOMETRY_SHADER_ARB = 0x8DD9;
static const int GL_GEOMETRY_VERTICES_OUT_ARB = 0x8DDA;
static const int GL_GEOMETRY_INPUT_TYPE_ARB = 0x8DDB;
static const int GL_GEOMETRY_OUTPUT_TYPE_ARB = 0x8DDC;
static const int GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8DDD;
static const int GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8DDE;
static const int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x8DDF;
static const int GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x8DE0;
static const int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x8DE1;
static const int GL_HALF_FLOAT = 0x140B;
static const int GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE;
static const int GL_MAP_READ_BIT = 0x0001;
static const int GL_MAP_WRITE_BIT = 0x0002;
static const int GL_MAP_INVALIDATE_RANGE_BIT = 0x0004;
static const int GL_MAP_INVALIDATE_BUFFER_BIT = 0x0008;
static const int GL_MAP_FLUSH_EXPLICIT_BIT = 0x0010;
static const int GL_MAP_UNSYNCHRONIZED_BIT = 0x0020;
static const int GL_TEXTURE_BUFFER_ARB = 0x8C2A;
static const int GL_MAX_TEXTURE_BUFFER_SIZE_ARB = 0x8C2B;
static const int GL_TEXTURE_BINDING_BUFFER_ARB = 0x8C2C;
static const int GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D;
static const int GL_TEXTURE_BUFFER_FORMAT_ARB = 0x8C2E;
static const int GL_COMPRESSED_RED_RGTC1 = 0x8DBB;
static const int GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC;
static const int GL_COMPRESSED_RG_RGTC2 = 0x8DBD;
static const int GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE;
static const int GL_RG = 0x8227;
static const int GL_RG_INTEGER = 0x8228;
static const int GL_R8 = 0x8229;
static const int GL_R16 = 0x822A;
static const int GL_RG8 = 0x822B;
static const int GL_RG16 = 0x822C;
static const int GL_R16F = 0x822D;
static const int GL_R32F = 0x822E;
static const int GL_RG16F = 0x822F;
static const int GL_RG32F = 0x8230;
static const int GL_R8I = 0x8231;
static const int GL_R8UI = 0x8232;
static const int GL_R16I = 0x8233;
static const int GL_R16UI = 0x8234;
static const int GL_R32I = 0x8235;
static const int GL_R32UI = 0x8236;
static const int GL_RG8I = 0x8237;
static const int GL_RG8UI = 0x8238;
static const int GL_RG16I = 0x8239;
static const int GL_RG16UI = 0x823A;
static const int GL_RG32I = 0x823B;
static const int GL_RG32UI = 0x823C;
static const int GL_VERTEX_ARRAY_BINDING = 0x85B5;
static const int GL_UNIFORM_BUFFER = 0x8A11;
static const int GL_UNIFORM_BUFFER_BINDING = 0x8A28;
static const int GL_UNIFORM_BUFFER_START = 0x8A29;
static const int GL_UNIFORM_BUFFER_SIZE = 0x8A2A;
static const int GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;
static const int GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C;
static const int GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;
static const int GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;
static const int GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;
static const int GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30;
static const int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;
static const int GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32;
static const int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;
static const int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;
static const int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35;
static const int GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36;
static const int GL_UNIFORM_TYPE = 0x8A37;
static const int GL_UNIFORM_SIZE = 0x8A38;
static const int GL_UNIFORM_NAME_LENGTH = 0x8A39;
static const int GL_UNIFORM_BLOCK_INDEX = 0x8A3A;
static const int GL_UNIFORM_OFFSET = 0x8A3B;
static const int GL_UNIFORM_ARRAY_STRIDE = 0x8A3C;
static const int GL_UNIFORM_MATRIX_STRIDE = 0x8A3D;
static const int GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E;
static const int GL_UNIFORM_BLOCK_BINDING = 0x8A3F;
static const int GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40;
static const int GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41;
static const int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;
static const int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;
static const int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;
static const int GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45;
static const int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;
static const int GL_INVALID_INDEX = 0xFFFFFFFFu;
static const int GL_COPY_READ_BUFFER_BINDING = 0x8F36;
static const int GL_COPY_READ_BUFFER = GL_COPY_READ_BUFFER_BINDING;
static const int GL_COPY_WRITE_BUFFER_BINDING = 0x8F37;
static const int GL_COPY_WRITE_BUFFER = GL_COPY_WRITE_BUFFER_BINDING;
static const int GL_DEPTH_CLAMP = 0x864F;
static const int GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C;
static const int GL_FIRST_VERTEX_CONVENTION = 0x8E4D;
static const int GL_LAST_VERTEX_CONVENTION = 0x8E4E;
static const int GL_PROVOKING_VERTEX = 0x8E4F;
static const int GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F;
static const int GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;
static const int GL_OBJECT_TYPE = 0x9112;
static const int GL_SYNC_CONDITION = 0x9113;
static const int GL_SYNC_STATUS = 0x9114;
static const int GL_SYNC_FLAGS = 0x9115;
static const int GL_SYNC_FENCE = 0x9116;
static const int GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117;
static const int GL_UNSIGNALED = 0x9118;
static const int GL_SIGNALED = 0x9119;
static const int GL_ALREADY_SIGNALED = 0x911A;
static const int GL_TIMEOUT_EXPIRED = 0x911B;
static const int GL_CONDITION_SATISFIED = 0x911C;
static const int GL_WAIT_FAILED = 0x911D;
static const int GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001;
static const int GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFFull;
static const int GL_SAMPLE_POSITION = 0x8E50;
static const int GL_SAMPLE_MASK = 0x8E51;
static const int GL_SAMPLE_MASK_VALUE = 0x8E52;
static const int GL_MAX_SAMPLE_MASK_WORDS = 0x8E59;
static const int GL_TEXTURE_2D_MULTISAMPLE = 0x9100;
static const int GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101;
static const int GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102;
static const int GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103;
static const int GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104;
static const int GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105;
static const int GL_TEXTURE_SAMPLES = 0x9106;
static const int GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107;
static const int GL_SAMPLER_2D_MULTISAMPLE = 0x9108;
static const int GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109;
static const int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A;
static const int GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B;
static const int GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C;
static const int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D;
static const int GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E;
static const int GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F;
static const int GL_MAX_INTEGER_SAMPLES = 0x9110;
static const int GL_SAMPLE_SHADING_ARB = 0x8C36;
static const int GL_MIN_SAMPLE_SHADING_VALUE_ARB = 0x8C37;
static const int GL_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x9009;
static const int GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = 0x900A;
static const int GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x900B;
static const int GL_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900C;
static const int GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = 0x900D;
static const int GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900E;
static const int GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900F;
static const int GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5E;
static const int GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5F;
static const int GL_SHADER_INCLUDE_ARB = 0x8DAE;
static const int GL_NAMED_STRING_LENGTH_ARB = 0x8DE9;
static const int GL_NAMED_STRING_TYPE_ARB = 0x8DEA;
static const int GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = 0x8E8C;
static const int GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 0x8E8D;
static const int GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 0x8E8E;
static const int GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 0x8E8F;
static const int GL_SRC1_COLOR = 0x88F9;
static const int GL_ONE_MINUS_SRC1_COLOR = 0x88FA;
static const int GL_ONE_MINUS_SRC1_ALPHA = 0x88FB;
static const int GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC;
static const int GL_ANY_SAMPLES_PASSED = 0x8C2F;
static const int GL_SAMPLER_BINDING = 0x8919;
static const int GL_RGB10_A2UI = 0x906F;
static const int GL_TEXTURE_SWIZZLE_R = 0x8E42;
static const int GL_TEXTURE_SWIZZLE_G = 0x8E43;
static const int GL_TEXTURE_SWIZZLE_B = 0x8E44;
static const int GL_TEXTURE_SWIZZLE_A = 0x8E45;
static const int GL_TEXTURE_SWIZZLE_RGBA = 0x8E46;
static const int GL_TIME_ELAPSED = 0x88BF;
static const int GL_TIMESTAMP = 0x8E28;
static const int GL_INT_2_10_10_10_REV = 0x8D9F;
static const int GL_DRAW_INDIRECT_BUFFER = 0x8F3F;
static const int GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43;
static const int GL_GEOMETRY_SHADER_INVOCATIONS = 0x887F;
static const int GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A;
static const int GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B;
static const int GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C;
static const int GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D;
static const int GL_DOUBLE_VEC2 = 0x8FFC;
static const int GL_DOUBLE_VEC3 = 0x8FFD;
static const int GL_DOUBLE_VEC4 = 0x8FFE;
static const int GL_DOUBLE_MAT2 = 0x8F46;
static const int GL_DOUBLE_MAT3 = 0x8F47;
static const int GL_DOUBLE_MAT4 = 0x8F48;
static const int GL_DOUBLE_MAT2x3 = 0x8F49;
static const int GL_DOUBLE_MAT2x4 = 0x8F4A;
static const int GL_DOUBLE_MAT3x2 = 0x8F4B;
static const int GL_DOUBLE_MAT3x4 = 0x8F4C;
static const int GL_DOUBLE_MAT4x2 = 0x8F4D;
static const int GL_DOUBLE_MAT4x3 = 0x8F4E;
static const int GL_ACTIVE_SUBROUTINES = 0x8DE5;
static const int GL_ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6;
static const int GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47;
static const int GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48;
static const int GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49;
static const int GL_MAX_SUBROUTINES = 0x8DE7;
static const int GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8;
static const int GL_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A;
static const int GL_COMPATIBLE_SUBROUTINES = 0x8E4B;
static const int GL_PATCHES = 0x000E;
static const int GL_PATCH_VERTICES = 0x8E72;
static const int GL_PATCH_DEFAULT_INNER_LEVEL = 0x8E73;
static const int GL_PATCH_DEFAULT_OUTER_LEVEL = 0x8E74;
static const int GL_TESS_CONTROL_OUTPUT_VERTICES = 0x8E75;
static const int GL_TESS_GEN_MODE = 0x8E76;
static const int GL_TESS_GEN_SPACING = 0x8E77;
static const int GL_TESS_GEN_VERTEX_ORDER = 0x8E78;
static const int GL_TESS_GEN_POINT_MODE = 0x8E79;
static const int GL_ISOLINES = 0x8E7A;
static const int GL_FRACTIONAL_ODD = 0x8E7B;
static const int GL_FRACTIONAL_EVEN = 0x8E7C;
static const int GL_MAX_PATCH_VERTICES = 0x8E7D;
static const int GL_MAX_TESS_GEN_LEVEL = 0x8E7E;
static const int GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F;
static const int GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80;
static const int GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81;
static const int GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82;
static const int GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83;
static const int GL_MAX_TESS_PATCH_COMPONENTS = 0x8E84;
static const int GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85;
static const int GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86;
static const int GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89;
static const int GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A;
static const int GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C;
static const int GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D;
static const int GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E;
static const int GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F;
static const int GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0;
static const int GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1;
static const int GL_TESS_EVALUATION_SHADER = 0x8E87;
static const int GL_TESS_CONTROL_SHADER = 0x8E88;
static const int GL_TRANSFORM_FEEDBACK = 0x8E22;
static const int GL_TRANSFORM_FEEDBACK_PAUSED = 0x8E23;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = GL_TRANSFORM_FEEDBACK_PAUSED;
static const int GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = GL_TRANSFORM_FEEDBACK_ACTIVE;
static const int GL_TRANSFORM_FEEDBACK_BINDING = 0x8E25;
static const int GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70;
static const int GL_MAX_VERTEX_STREAMS = 0x8E71;
static const int GL_FIXED = 0x140C;
static const int GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;
static const int GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;
static const int GL_LOW_FLOAT = 0x8DF0;
static const int GL_MEDIUM_FLOAT = 0x8DF1;
static const int GL_HIGH_FLOAT = 0x8DF2;
static const int GL_LOW_INT = 0x8DF3;
static const int GL_MEDIUM_INT = 0x8DF4;
static const int GL_HIGH_INT = 0x8DF5;
static const int GL_SHADER_COMPILER = 0x8DFA;
static const int GL_NUM_SHADER_BINARY_FORMATS = 0x8DF9;
static const int GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;
static const int GL_MAX_VARYING_VECTORS = 0x8DFC;
static const int GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;
static const int GL_RGB565 = 0x8D62;
static const int GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257;
static const int GL_PROGRAM_BINARY_LENGTH = 0x8741;
static const int GL_NUM_PROGRAM_BINARY_FORMATS = 0x87FE;
static const int GL_PROGRAM_BINARY_FORMATS = 0x87FF;
static const int GL_VERTEX_SHADER_BIT = 0x00000001;
static const int GL_FRAGMENT_SHADER_BIT = 0x00000002;
static const int GL_GEOMETRY_SHADER_BIT = 0x00000004;
static const int GL_TESS_CONTROL_SHADER_BIT = 0x00000008;
static const int GL_TESS_EVALUATION_SHADER_BIT = 0x00000010;
static const int GL_ALL_SHADER_BITS = 0xFFFFFFFF;
static const int GL_PROGRAM_SEPARABLE = 0x8258;
static const int GL_ACTIVE_PROGRAM = 0x8259;
static const int GL_PROGRAM_PIPELINE_BINDING = 0x825A;
static const int GL_MAX_VIEWPORTS = 0x825B;
static const int GL_VIEWPORT_SUBPIXEL_BITS = 0x825C;
static const int GL_VIEWPORT_BOUNDS_RANGE = 0x825D;
static const int GL_LAYER_PROVOKING_VERTEX = 0x825E;
static const int GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F;
static const int GL_UNDEFINED_VERTEX = 0x8260;
static const int GL_SYNC_CL_EVENT_ARB = 0x8240;
static const int GL_SYNC_CL_EVENT_COMPLETE_ARB = 0x8241;
static const int GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = 0x8242;
static const int GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = 0x8243;
static const int GL_DEBUG_CALLBACK_FUNCTION_ARB = 0x8244;
static const int GL_DEBUG_CALLBACK_USER_PARAM_ARB = 0x8245;
static const int GL_DEBUG_SOURCE_API_ARB = 0x8246;
static const int GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = 0x8247;
static const int GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = 0x8248;
static const int GL_DEBUG_SOURCE_THIRD_PARTY_ARB = 0x8249;
static const int GL_DEBUG_SOURCE_APPLICATION_ARB = 0x824A;
static const int GL_DEBUG_SOURCE_OTHER_ARB = 0x824B;
static const int GL_DEBUG_TYPE_ERROR_ARB = 0x824C;
static const int GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = 0x824D;
static const int GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = 0x824E;
static const int GL_DEBUG_TYPE_PORTABILITY_ARB = 0x824F;
static const int GL_DEBUG_TYPE_PERFORMANCE_ARB = 0x8250;
static const int GL_DEBUG_TYPE_OTHER_ARB = 0x8251;
static const int GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = 0x9143;
static const int GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = 0x9144;
static const int GL_DEBUG_LOGGED_MESSAGES_ARB = 0x9145;
static const int GL_DEBUG_SEVERITY_HIGH_ARB = 0x9146;
static const int GL_DEBUG_SEVERITY_MEDIUM_ARB = 0x9147;
static const int GL_DEBUG_SEVERITY_LOW_ARB = 0x9148;
static const int GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x00000004;
static const int GL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252;
static const int GL_GUILTY_CONTEXT_RESET_ARB = 0x8253;
static const int GL_INNOCENT_CONTEXT_RESET_ARB = 0x8254;
static const int GL_UNKNOWN_CONTEXT_RESET_ARB = 0x8255;
static const int GL_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256;
static const int GL_NO_RESET_NOTIFICATION_ARB = 0x8261;
static const int GL_UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127;
static const int GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128;
static const int GL_UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129;
static const int GL_UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A;
static const int GL_PACK_COMPRESSED_BLOCK_WIDTH = 0x912B;
static const int GL_PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C;
static const int GL_PACK_COMPRESSED_BLOCK_DEPTH = 0x912D;
static const int GL_PACK_COMPRESSED_BLOCK_SIZE = 0x912E;
static const int GL_NUM_SAMPLE_COUNTS = 0x9380;
static const int GL_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC;
static const int GL_ATOMIC_COUNTER_BUFFER = 0x92C0;
static const int GL_ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1;
static const int GL_ATOMIC_COUNTER_BUFFER_START = 0x92C2;
static const int GL_ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3;
static const int GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4;
static const int GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5;
static const int GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6;
static const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7;
static const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8;
static const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9;
static const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA;
static const int GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB;
static const int GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC;
static const int GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD;
static const int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE;
static const int GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF;
static const int GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0;
static const int GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1;
static const int GL_MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2;
static const int GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3;
static const int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4;
static const int GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5;
static const int GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6;
static const int GL_MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7;
static const int GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8;
static const int GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC;
static const int GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9;
static const int GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA;
static const int GL_UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB;
static const int GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001;
static const int GL_ELEMENT_ARRAY_BARRIER_BIT = 0x00000002;
static const int GL_UNIFORM_BARRIER_BIT = 0x00000004;
static const int GL_TEXTURE_FETCH_BARRIER_BIT = 0x00000008;
static const int GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020;
static const int GL_COMMAND_BARRIER_BIT = 0x00000040;
static const int GL_PIXEL_BUFFER_BARRIER_BIT = 0x00000080;
static const int GL_TEXTURE_UPDATE_BARRIER_BIT = 0x00000100;
static const int GL_BUFFER_UPDATE_BARRIER_BIT = 0x00000200;
static const int GL_FRAMEBUFFER_BARRIER_BIT = 0x00000400;
static const int GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800;
static const int GL_ATOMIC_COUNTER_BARRIER_BIT = 0x00001000;
static const int GL_ALL_BARRIER_BITS = 0xFFFFFFFF;
static const int GL_MAX_IMAGE_UNITS = 0x8F38;
static const int GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39;
static const int GL_IMAGE_BINDING_NAME = 0x8F3A;
static const int GL_IMAGE_BINDING_LEVEL = 0x8F3B;
static const int GL_IMAGE_BINDING_LAYERED = 0x8F3C;
static const int GL_IMAGE_BINDING_LAYER = 0x8F3D;
static const int GL_IMAGE_BINDING_ACCESS = 0x8F3E;
static const int GL_IMAGE_1D = 0x904C;
static const int GL_IMAGE_2D = 0x904D;
static const int GL_IMAGE_3D = 0x904E;
static const int GL_IMAGE_2D_RECT = 0x904F;
static const int GL_IMAGE_CUBE = 0x9050;
static const int GL_IMAGE_BUFFER = 0x9051;
static const int GL_IMAGE_1D_ARRAY = 0x9052;
static const int GL_IMAGE_2D_ARRAY = 0x9053;
static const int GL_IMAGE_CUBE_MAP_ARRAY = 0x9054;
static const int GL_IMAGE_2D_MULTISAMPLE = 0x9055;
static const int GL_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056;
static const int GL_INT_IMAGE_1D = 0x9057;
static const int GL_INT_IMAGE_2D = 0x9058;
static const int GL_INT_IMAGE_3D = 0x9059;
static const int GL_INT_IMAGE_2D_RECT = 0x905A;
static const int GL_INT_IMAGE_CUBE = 0x905B;
static const int GL_INT_IMAGE_BUFFER = 0x905C;
static const int GL_INT_IMAGE_1D_ARRAY = 0x905D;
static const int GL_INT_IMAGE_2D_ARRAY = 0x905E;
static const int GL_INT_IMAGE_CUBE_MAP_ARRAY = 0x905F;
static const int GL_INT_IMAGE_2D_MULTISAMPLE = 0x9060;
static const int GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061;
static const int GL_UNSIGNED_INT_IMAGE_1D = 0x9062;
static const int GL_UNSIGNED_INT_IMAGE_2D = 0x9063;
static const int GL_UNSIGNED_INT_IMAGE_3D = 0x9064;
static const int GL_UNSIGNED_INT_IMAGE_2D_RECT = 0x9065;
static const int GL_UNSIGNED_INT_IMAGE_CUBE = 0x9066;
static const int GL_UNSIGNED_INT_IMAGE_BUFFER = 0x9067;
static const int GL_UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068;
static const int GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069;
static const int GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A;
static const int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B;
static const int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C;
static const int GL_MAX_IMAGE_SAMPLES = 0x906D;
static const int GL_IMAGE_BINDING_FORMAT = 0x906E;
static const int GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7;
static const int GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8;
static const int GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9;
static const int GL_MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA;
static const int GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB;
static const int GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC;
static const int GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD;
static const int GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE;
static const int GL_MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF;
static const int GL_TEXTURE_IMMUTABLE_FORMAT = 0x912F;
static const int GL_ABGR_EXT = 0x8000;
static const int GL_CONSTANT_COLOR_EXT = 0x8001;
static const int GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002;
static const int GL_CONSTANT_ALPHA_EXT = 0x8003;
static const int GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004;
static const int GL_BLEND_COLOR_EXT = 0x8005;
static const int GL_POLYGON_OFFSET_EXT = 0x8037;
static const int GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038;
static const int GL_POLYGON_OFFSET_BIAS_EXT = 0x8039;
static const int GL_ALPHA4_EXT = 0x803B;
static const int GL_ALPHA8_EXT = 0x803C;
static const int GL_ALPHA12_EXT = 0x803D;
static const int GL_ALPHA16_EXT = 0x803E;
static const int GL_LUMINANCE4_EXT = 0x803F;
static const int GL_LUMINANCE8_EXT = 0x8040;
static const int GL_LUMINANCE12_EXT = 0x8041;
static const int GL_LUMINANCE16_EXT = 0x8042;
static const int GL_LUMINANCE4_ALPHA4_EXT = 0x8043;
static const int GL_LUMINANCE6_ALPHA2_EXT = 0x8044;
static const int GL_LUMINANCE8_ALPHA8_EXT = 0x8045;
static const int GL_LUMINANCE12_ALPHA4_EXT = 0x8046;
static const int GL_LUMINANCE12_ALPHA12_EXT = 0x8047;
static const int GL_LUMINANCE16_ALPHA16_EXT = 0x8048;
static const int GL_INTENSITY_EXT = 0x8049;
static const int GL_INTENSITY4_EXT = 0x804A;
static const int GL_INTENSITY8_EXT = 0x804B;
static const int GL_INTENSITY12_EXT = 0x804C;
static const int GL_INTENSITY16_EXT = 0x804D;
static const int GL_RGB2_EXT = 0x804E;
static const int GL_RGB4_EXT = 0x804F;
static const int GL_RGB5_EXT = 0x8050;
static const int GL_RGB8_EXT = 0x8051;
static const int GL_RGB10_EXT = 0x8052;
static const int GL_RGB12_EXT = 0x8053;
static const int GL_RGB16_EXT = 0x8054;
static const int GL_RGBA2_EXT = 0x8055;
static const int GL_RGBA4_EXT = 0x8056;
static const int GL_RGB5_A1_EXT = 0x8057;
static const int GL_RGBA8_EXT = 0x8058;
static const int GL_RGB10_A2_EXT = 0x8059;
static const int GL_RGBA12_EXT = 0x805A;
static const int GL_RGBA16_EXT = 0x805B;
static const int GL_TEXTURE_RED_SIZE_EXT = 0x805C;
static const int GL_TEXTURE_GREEN_SIZE_EXT = 0x805D;
static const int GL_TEXTURE_BLUE_SIZE_EXT = 0x805E;
static const int GL_TEXTURE_ALPHA_SIZE_EXT = 0x805F;
static const int GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060;
static const int GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061;
static const int GL_REPLACE_EXT = 0x8062;
static const int GL_PROXY_TEXTURE_1D_EXT = 0x8063;
static const int GL_PROXY_TEXTURE_2D_EXT = 0x8064;
static const int GL_TEXTURE_TOO_LARGE_EXT = 0x8065;
static const int GL_PACK_SKIP_IMAGES_EXT = 0x806B;
static const int GL_PACK_IMAGE_HEIGHT_EXT = 0x806C;
static const int GL_UNPACK_SKIP_IMAGES_EXT = 0x806D;
static const int GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E;
static const int GL_TEXTURE_3D_EXT = 0x806F;
static const int GL_PROXY_TEXTURE_3D_EXT = 0x8070;
static const int GL_TEXTURE_DEPTH_EXT = 0x8071;
static const int GL_TEXTURE_WRAP_R_EXT = 0x8072;
static const int GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073;
static const int GL_FILTER4_SGIS = 0x8146;
static const int GL_TEXTURE_FILTER4_SIZE_SGIS = 0x8147;
static const int GL_HISTOGRAM_EXT = 0x8024;
static const int GL_PROXY_HISTOGRAM_EXT = 0x8025;
static const int GL_HISTOGRAM_WIDTH_EXT = 0x8026;
static const int GL_HISTOGRAM_FORMAT_EXT = 0x8027;
static const int GL_HISTOGRAM_RED_SIZE_EXT = 0x8028;
static const int GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029;
static const int GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802A;
static const int GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B;
static const int GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C;
static const int GL_HISTOGRAM_SINK_EXT = 0x802D;
static const int GL_MINMAX_EXT = 0x802E;
static const int GL_MINMAX_FORMAT_EXT = 0x802F;
static const int GL_MINMAX_SINK_EXT = 0x8030;
static const int GL_TABLE_TOO_LARGE_EXT = 0x8031;
static const int GL_CONVOLUTION_1D_EXT = 0x8010;
static const int GL_CONVOLUTION_2D_EXT = 0x8011;
static const int GL_SEPARABLE_2D_EXT = 0x8012;
static const int GL_CONVOLUTION_BORDER_MODE_EXT = 0x8013;
static const int GL_CONVOLUTION_FILTER_SCALE_EXT = 0x8014;
static const int GL_CONVOLUTION_FILTER_BIAS_EXT = 0x8015;
static const int GL_REDUCE_EXT = 0x8016;
static const int GL_CONVOLUTION_FORMAT_EXT = 0x8017;
static const int GL_CONVOLUTION_WIDTH_EXT = 0x8018;
static const int GL_CONVOLUTION_HEIGHT_EXT = 0x8019;
static const int GL_MAX_CONVOLUTION_WIDTH_EXT = 0x801A;
static const int GL_MAX_CONVOLUTION_HEIGHT_EXT = 0x801B;
static const int GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C;
static const int GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D;
static const int GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E;
static const int GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F;
static const int GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020;
static const int GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021;
static const int GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022;
static const int GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023;
static const int GL_COLOR_MATRIX_SGI = 0x80B1;
static const int GL_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2;
static const int GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3;
static const int GL_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4;
static const int GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5;
static const int GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6;
static const int GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7;
static const int GL_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8;
static const int GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9;
static const int GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA;
static const int GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB;
static const int GL_COLOR_TABLE_SGI = 0x80D0;
static const int GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1;
static const int GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2;
static const int GL_PROXY_COLOR_TABLE_SGI = 0x80D3;
static const int GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D4;
static const int GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D5;
static const int GL_COLOR_TABLE_SCALE_SGI = 0x80D6;
static const int GL_COLOR_TABLE_BIAS_SGI = 0x80D7;
static const int GL_COLOR_TABLE_FORMAT_SGI = 0x80D8;
static const int GL_COLOR_TABLE_WIDTH_SGI = 0x80D9;
static const int GL_COLOR_TABLE_RED_SIZE_SGI = 0x80DA;
static const int GL_COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB;
static const int GL_COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC;
static const int GL_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD;
static const int GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE;
static const int GL_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF;
static const int GL_PIXEL_TEXTURE_SGIS = 0x8353;
static const int GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354;
static const int GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355;
static const int GL_PIXEL_GROUP_COLOR_SGIS = 0x8356;
static const int GL_PIXEL_TEX_GEN_SGIX = 0x8139;
static const int GL_PIXEL_TEX_GEN_MODE_SGIX = 0x832B;
static const int GL_PACK_SKIP_VOLUMES_SGIS = 0x8130;
static const int GL_PACK_IMAGE_DEPTH_SGIS = 0x8131;
static const int GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132;
static const int GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133;
static const int GL_TEXTURE_4D_SGIS = 0x8134;
static const int GL_PROXY_TEXTURE_4D_SGIS = 0x8135;
static const int GL_TEXTURE_4DSIZE_SGIS = 0x8136;
static const int GL_TEXTURE_WRAP_Q_SGIS = 0x8137;
static const int GL_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138;
static const int GL_TEXTURE_4D_BINDING_SGIS = 0x814F;
static const int GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC;
static const int GL_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD;
static const int GL_CMYK_EXT = 0x800C;
static const int GL_CMYKA_EXT = 0x800D;
static const int GL_PACK_CMYK_HINT_EXT = 0x800E;
static const int GL_UNPACK_CMYK_HINT_EXT = 0x800F;
static const int GL_TEXTURE_PRIORITY_EXT = 0x8066;
static const int GL_TEXTURE_RESIDENT_EXT = 0x8067;
static const int GL_TEXTURE_1D_BINDING_EXT = 0x8068;
static const int GL_TEXTURE_2D_BINDING_EXT = 0x8069;
static const int GL_TEXTURE_3D_BINDING_EXT = 0x806A;
static const int GL_DETAIL_TEXTURE_2D_SGIS = 0x8095;
static const int GL_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096;
static const int GL_LINEAR_DETAIL_SGIS = 0x8097;
static const int GL_LINEAR_DETAIL_ALPHA_SGIS = 0x8098;
static const int GL_LINEAR_DETAIL_COLOR_SGIS = 0x8099;
static const int GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A;
static const int GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B;
static const int GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C;
static const int GL_LINEAR_SHARPEN_SGIS = 0x80AD;
static const int GL_LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE;
static const int GL_LINEAR_SHARPEN_COLOR_SGIS = 0x80AF;
static const int GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0;
static const int GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032;
static const int GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033;
static const int GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034;
static const int GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035;
static const int GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036;
static const int GL_TEXTURE_MIN_LOD_SGIS = 0x813A;
static const int GL_TEXTURE_MAX_LOD_SGIS = 0x813B;
static const int GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C;
static const int GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D;
static const int GL_MULTISAMPLE_SGIS = 0x809D;
static const int GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E;
static const int GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F;
static const int GL_SAMPLE_MASK_SGIS = 0x80A0;
static const int GL_1PASS_SGIS = 0x80A1;
static const int GL_2PASS_0_SGIS = 0x80A2;
static const int GL_2PASS_1_SGIS = 0x80A3;
static const int GL_4PASS_0_SGIS = 0x80A4;
static const int GL_4PASS_1_SGIS = 0x80A5;
static const int GL_4PASS_2_SGIS = 0x80A6;
static const int GL_4PASS_3_SGIS = 0x80A7;
static const int GL_SAMPLE_BUFFERS_SGIS = 0x80A8;
static const int GL_SAMPLES_SGIS = 0x80A9;
static const int GL_SAMPLE_MASK_VALUE_SGIS = 0x80AA;
static const int GL_SAMPLE_MASK_INVERT_SGIS = 0x80AB;
static const int GL_SAMPLE_PATTERN_SGIS = 0x80AC;
static const int GL_RESCALE_NORMAL_EXT = 0x803A;
static const int GL_VERTEX_ARRAY_EXT = 0x8074;
static const int GL_NORMAL_ARRAY_EXT = 0x8075;
static const int GL_COLOR_ARRAY_EXT = 0x8076;
static const int GL_INDEX_ARRAY_EXT = 0x8077;
static const int GL_TEXTURE_COORD_ARRAY_EXT = 0x8078;
static const int GL_EDGE_FLAG_ARRAY_EXT = 0x8079;
static const int GL_VERTEX_ARRAY_SIZE_EXT = 0x807A;
static const int GL_VERTEX_ARRAY_TYPE_EXT = 0x807B;
static const int GL_VERTEX_ARRAY_STRIDE_EXT = 0x807C;
static const int GL_VERTEX_ARRAY_COUNT_EXT = 0x807D;
static const int GL_NORMAL_ARRAY_TYPE_EXT = 0x807E;
static const int GL_NORMAL_ARRAY_STRIDE_EXT = 0x807F;
static const int GL_NORMAL_ARRAY_COUNT_EXT = 0x8080;
static const int GL_COLOR_ARRAY_SIZE_EXT = 0x8081;
static const int GL_COLOR_ARRAY_TYPE_EXT = 0x8082;
static const int GL_COLOR_ARRAY_STRIDE_EXT = 0x8083;
static const int GL_COLOR_ARRAY_COUNT_EXT = 0x8084;
static const int GL_INDEX_ARRAY_TYPE_EXT = 0x8085;
static const int GL_INDEX_ARRAY_STRIDE_EXT = 0x8086;
static const int GL_INDEX_ARRAY_COUNT_EXT = 0x8087;
static const int GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088;
static const int GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089;
static const int GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A;
static const int GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B;
static const int GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C;
static const int GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D;
static const int GL_VERTEX_ARRAY_POINTER_EXT = 0x808E;
static const int GL_NORMAL_ARRAY_POINTER_EXT = 0x808F;
static const int GL_COLOR_ARRAY_POINTER_EXT = 0x8090;
static const int GL_INDEX_ARRAY_POINTER_EXT = 0x8091;
static const int GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092;
static const int GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093;
static const int GL_GENERATE_MIPMAP_SGIS = 0x8191;
static const int GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192;
static const int GL_LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170;
static const int GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171;
static const int GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172;
static const int GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173;
static const int GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174;
static const int GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175;
static const int GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176;
static const int GL_MAX_CLIPMAP_DEPTH_SGIX = 0x8177;
static const int GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178;
static const int GL_NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D;
static const int GL_NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E;
static const int GL_LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F;
static const int GL_TEXTURE_COMPARE_SGIX = 0x819A;
static const int GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B;
static const int GL_TEXTURE_LEQUAL_R_SGIX = 0x819C;
static const int GL_TEXTURE_GEQUAL_R_SGIX = 0x819D;
static const int GL_CLAMP_TO_EDGE_SGIS = 0x812F;
static const int GL_CLAMP_TO_BORDER_SGIS = 0x812D;
static const int GL_FUNC_ADD_EXT = 0x8006;
static const int GL_MIN_EXT = 0x8007;
static const int GL_MAX_EXT = 0x8008;
static const int GL_BLEND_EQUATION_EXT = 0x8009;
static const int GL_FUNC_SUBTRACT_EXT = 0x800A;
static const int GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800B;
static const int GL_INTERLACE_SGIX = 0x8094;
static const int GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E;
static const int GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F;
static const int GL_PIXEL_TILE_WIDTH_SGIX = 0x8140;
static const int GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141;
static const int GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142;
static const int GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143;
static const int GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144;
static const int GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145;
static const int GL_DUAL_ALPHA4_SGIS = 0x8110;
static const int GL_DUAL_ALPHA8_SGIS = 0x8111;
static const int GL_DUAL_ALPHA12_SGIS = 0x8112;
static const int GL_DUAL_ALPHA16_SGIS = 0x8113;
static const int GL_DUAL_LUMINANCE4_SGIS = 0x8114;
static const int GL_DUAL_LUMINANCE8_SGIS = 0x8115;
static const int GL_DUAL_LUMINANCE12_SGIS = 0x8116;
static const int GL_DUAL_LUMINANCE16_SGIS = 0x8117;
static const int GL_DUAL_INTENSITY4_SGIS = 0x8118;
static const int GL_DUAL_INTENSITY8_SGIS = 0x8119;
static const int GL_DUAL_INTENSITY12_SGIS = 0x811A;
static const int GL_DUAL_INTENSITY16_SGIS = 0x811B;
static const int GL_DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C;
static const int GL_DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D;
static const int GL_QUAD_ALPHA4_SGIS = 0x811E;
static const int GL_QUAD_ALPHA8_SGIS = 0x811F;
static const int GL_QUAD_LUMINANCE4_SGIS = 0x8120;
static const int GL_QUAD_LUMINANCE8_SGIS = 0x8121;
static const int GL_QUAD_INTENSITY4_SGIS = 0x8122;
static const int GL_QUAD_INTENSITY8_SGIS = 0x8123;
static const int GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124;
static const int GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125;
static const int GL_SPRITE_SGIX = 0x8148;
static const int GL_SPRITE_MODE_SGIX = 0x8149;
static const int GL_SPRITE_AXIS_SGIX = 0x814A;
static const int GL_SPRITE_TRANSLATION_SGIX = 0x814B;
static const int GL_SPRITE_AXIAL_SGIX = 0x814C;
static const int GL_SPRITE_OBJECT_ALIGNED_SGIX = 0x814D;
static const int GL_SPRITE_EYE_ALIGNED_SGIX = 0x814E;
static const int GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E;
static const int GL_POINT_SIZE_MIN_EXT = 0x8126;
static const int GL_POINT_SIZE_MAX_EXT = 0x8127;
static const int GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128;
static const int GL_DISTANCE_ATTENUATION_EXT = 0x8129;
static const int GL_POINT_SIZE_MIN_SGIS = 0x8126;
static const int GL_POINT_SIZE_MAX_SGIS = 0x8127;
static const int GL_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128;
static const int GL_DISTANCE_ATTENUATION_SGIS = 0x8129;
static const int GL_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180;
static const int GL_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181;
static const int GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179;
static const int GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A;
static const int GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B;
static const int GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C;
static const int GL_FRAMEZOOM_SGIX = 0x818B;
static const int GL_FRAMEZOOM_FACTOR_SGIX = 0x818C;
static const int GL_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D;
static const int GL_TEXTURE_DEFORMATION_BIT_SGIX = 0x00000001;
static const int GL_GEOMETRY_DEFORMATION_BIT_SGIX = 0x00000002;
static const int GL_GEOMETRY_DEFORMATION_SGIX = 0x8194;
static const int GL_TEXTURE_DEFORMATION_SGIX = 0x8195;
static const int GL_DEFORMATIONS_MASK_SGIX = 0x8196;
static const int GL_MAX_DEFORMATION_ORDER_SGIX = 0x8197;
static const int GL_REFERENCE_PLANE_SGIX = 0x817D;
static const int GL_REFERENCE_PLANE_EQUATION_SGIX = 0x817E;
static const int GL_DEPTH_COMPONENT16_SGIX = 0x81A5;
static const int GL_DEPTH_COMPONENT24_SGIX = 0x81A6;
static const int GL_DEPTH_COMPONENT32_SGIX = 0x81A7;
static const int GL_FOG_FUNC_SGIS = 0x812A;
static const int GL_FOG_FUNC_POINTS_SGIS = 0x812B;
static const int GL_MAX_FOG_FUNC_POINTS_SGIS = 0x812C;
static const int GL_FOG_OFFSET_SGIX = 0x8198;
static const int GL_FOG_OFFSET_VALUE_SGIX = 0x8199;
static const int GL_IMAGE_SCALE_X_HP = 0x8155;
static const int GL_IMAGE_SCALE_Y_HP = 0x8156;
static const int GL_IMAGE_TRANSLATE_X_HP = 0x8157;
static const int GL_IMAGE_TRANSLATE_Y_HP = 0x8158;
static const int GL_IMAGE_ROTATE_ANGLE_HP = 0x8159;
static const int GL_IMAGE_ROTATE_ORIGIN_X_HP = 0x815A;
static const int GL_IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B;
static const int GL_IMAGE_MAG_FILTER_HP = 0x815C;
static const int GL_IMAGE_MIN_FILTER_HP = 0x815D;
static const int GL_IMAGE_CUBIC_WEIGHT_HP = 0x815E;
static const int GL_CUBIC_HP = 0x815F;
static const int GL_AVERAGE_HP = 0x8160;
static const int GL_IMAGE_TRANSFORM_2D_HP = 0x8161;
static const int GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162;
static const int GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163;
static const int GL_IGNORE_BORDER_HP = 0x8150;
static const int GL_CONSTANT_BORDER_HP = 0x8151;
static const int GL_REPLICATE_BORDER_HP = 0x8153;
static const int GL_CONVOLUTION_BORDER_COLOR_HP = 0x8154;
static const int GL_TEXTURE_ENV_BIAS_SGIX = 0x80BE;
static const int GL_VERTEX_DATA_HINT_PGI = 0x1A22A;
static const int GL_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B;
static const int GL_MATERIAL_SIDE_HINT_PGI = 0x1A22C;
static const int GL_MAX_VERTEX_HINT_PGI = 0x1A22D;
static const int GL_COLOR3_BIT_PGI = 0x00010000;
static const int GL_COLOR4_BIT_PGI = 0x00020000;
static const int GL_EDGEFLAG_BIT_PGI = 0x00040000;
static const int GL_INDEX_BIT_PGI = 0x00080000;
static const int GL_MAT_AMBIENT_BIT_PGI = 0x00100000;
static const int GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000;
static const int GL_MAT_DIFFUSE_BIT_PGI = 0x00400000;
static const int GL_MAT_EMISSION_BIT_PGI = 0x00800000;
static const int GL_MAT_COLOR_INDEXES_BIT_PGI = 0x01000000;
static const int GL_MAT_SHININESS_BIT_PGI = 0x02000000;
static const int GL_MAT_SPECULAR_BIT_PGI = 0x04000000;
static const int GL_NORMAL_BIT_PGI = 0x08000000;
static const int GL_TEXCOORD1_BIT_PGI = 0x10000000;
static const int GL_TEXCOORD2_BIT_PGI = 0x20000000;
static const int GL_TEXCOORD3_BIT_PGI = 0x40000000;
static const int GL_TEXCOORD4_BIT_PGI = 0x80000000;
static const int GL_VERTEX23_BIT_PGI = 0x00000004;
static const int GL_VERTEX4_BIT_PGI = 0x00000008;
static const int GL_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8;
static const int GL_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD;
static const int GL_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE;
static const int GL_NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202;
static const int GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203;
static const int GL_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204;
static const int GL_ALWAYS_FAST_HINT_PGI = 0x1A20C;
static const int GL_ALWAYS_SOFT_HINT_PGI = 0x1A20D;
static const int GL_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E;
static const int GL_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F;
static const int GL_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210;
static const int GL_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211;
static const int GL_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216;
static const int GL_STRICT_LIGHTING_HINT_PGI = 0x1A217;
static const int GL_STRICT_SCISSOR_HINT_PGI = 0x1A218;
static const int GL_FULL_STIPPLE_HINT_PGI = 0x1A219;
static const int GL_CLIP_NEAR_HINT_PGI = 0x1A220;
static const int GL_CLIP_FAR_HINT_PGI = 0x1A221;
static const int GL_WIDE_LINE_HINT_PGI = 0x1A222;
static const int GL_BACK_NORMALS_HINT_PGI = 0x1A223;
static const int GL_COLOR_INDEX1_EXT = 0x80E2;
static const int GL_COLOR_INDEX2_EXT = 0x80E3;
static const int GL_COLOR_INDEX4_EXT = 0x80E4;
static const int GL_COLOR_INDEX8_EXT = 0x80E5;
static const int GL_COLOR_INDEX12_EXT = 0x80E6;
static const int GL_COLOR_INDEX16_EXT = 0x80E7;
static const int GL_TEXTURE_INDEX_SIZE_EXT = 0x80ED;
static const int GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0;
static const int GL_LIST_PRIORITY_SGIX = 0x8182;
static const int GL_IR_INSTRUMENT1_SGIX = 0x817F;
static const int GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183;
static const int GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E;
static const int GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F;
static const int GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190;
static const int GL_SHADOW_AMBIENT_SGIX = 0x80BF;
static const int GL_INDEX_MATERIAL_EXT = 0x81B8;
static const int GL_INDEX_MATERIAL_PARAMETER_EXT = 0x81B9;
static const int GL_INDEX_MATERIAL_FACE_EXT = 0x81BA;
static const int GL_INDEX_TEST_EXT = 0x81B5;
static const int GL_INDEX_TEST_FUNC_EXT = 0x81B6;
static const int GL_INDEX_TEST_REF_EXT = 0x81B7;
static const int GL_IUI_V2F_EXT = 0x81AD;
static const int GL_IUI_V3F_EXT = 0x81AE;
static const int GL_IUI_N3F_V2F_EXT = 0x81AF;
static const int GL_IUI_N3F_V3F_EXT = 0x81B0;
static const int GL_T2F_IUI_V2F_EXT = 0x81B1;
static const int GL_T2F_IUI_V3F_EXT = 0x81B2;
static const int GL_T2F_IUI_N3F_V2F_EXT = 0x81B3;
static const int GL_T2F_IUI_N3F_V3F_EXT = 0x81B4;
static const int GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8;
static const int GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9;
static const int GL_CULL_VERTEX_EXT = 0x81AA;
static const int GL_CULL_VERTEX_EYE_POSITION_EXT = 0x81AB;
static const int GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC;
static const int GL_YCRCB_422_SGIX = 0x81BB;
static const int GL_YCRCB_444_SGIX = 0x81BC;
static const int GL_FRAGMENT_LIGHTING_SGIX = 0x8400;
static const int GL_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401;
static const int GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402;
static const int GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403;
static const int GL_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404;
static const int GL_MAX_ACTIVE_LIGHTS_SGIX = 0x8405;
static const int GL_CURRENT_RASTER_NORMAL_SGIX = 0x8406;
static const int GL_LIGHT_ENV_MODE_SGIX = 0x8407;
static const int GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408;
static const int GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409;
static const int GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A;
static const int GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B;
static const int GL_FRAGMENT_LIGHT0_SGIX = 0x840C;
static const int GL_FRAGMENT_LIGHT1_SGIX = 0x840D;
static const int GL_FRAGMENT_LIGHT2_SGIX = 0x840E;
static const int GL_FRAGMENT_LIGHT3_SGIX = 0x840F;
static const int GL_FRAGMENT_LIGHT4_SGIX = 0x8410;
static const int GL_FRAGMENT_LIGHT5_SGIX = 0x8411;
static const int GL_FRAGMENT_LIGHT6_SGIX = 0x8412;
static const int GL_FRAGMENT_LIGHT7_SGIX = 0x8413;
static const int GL_RASTER_POSITION_UNCLIPPED_IBM = 0x19262;
static const int GL_TEXTURE_LIGHTING_MODE_HP = 0x8167;
static const int GL_TEXTURE_POST_SPECULAR_HP = 0x8168;
static const int GL_TEXTURE_PRE_SPECULAR_HP = 0x8169;
static const int GL_MAX_ELEMENTS_VERTICES_EXT = 0x80E8;
static const int GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9;
static const int GL_PHONG_WIN = 0x80EA;
static const int GL_PHONG_HINT_WIN = 0x80EB;
static const int GL_FOG_SPECULAR_TEXTURE_WIN = 0x80EC;
static const int GL_FRAGMENT_MATERIAL_EXT = 0x8349;
static const int GL_FRAGMENT_NORMAL_EXT = 0x834A;
static const int GL_FRAGMENT_COLOR_EXT = 0x834C;
static const int GL_ATTENUATION_EXT = 0x834D;
static const int GL_SHADOW_ATTENUATION_EXT = 0x834E;
static const int GL_TEXTURE_APPLICATION_MODE_EXT = 0x834F;
static const int GL_TEXTURE_LIGHT_EXT = 0x8350;
static const int GL_TEXTURE_MATERIAL_FACE_EXT = 0x8351;
static const int GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352;
static const int GL_ALPHA_MIN_SGIX = 0x8320;
static const int GL_ALPHA_MAX_SGIX = 0x8321;
static const int GL_PIXEL_TEX_GEN_Q_CEILING_SGIX = 0x8184;
static const int GL_PIXEL_TEX_GEN_Q_ROUND_SGIX = 0x8185;
static const int GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX = 0x8186;
static const int GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = 0x8187;
static const int GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = 0x8188;
static const int GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX = 0x8189;
static const int GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX = 0x818A;
static const int GL_BGR_EXT = 0x80E0;
static const int GL_BGRA_EXT = 0x80E1;
static const int GL_ASYNC_MARKER_SGIX = 0x8329;
static const int GL_ASYNC_TEX_IMAGE_SGIX = 0x835C;
static const int GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D;
static const int GL_ASYNC_READ_PIXELS_SGIX = 0x835E;
static const int GL_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F;
static const int GL_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360;
static const int GL_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361;
static const int GL_ASYNC_HISTOGRAM_SGIX = 0x832C;
static const int GL_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D;
static const int GL_PARALLEL_ARRAYS_INTEL = 0x83F4;
static const int GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5;
static const int GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6;
static const int GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7;
static const int GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8;
static const int GL_OCCLUSION_TEST_HP = 0x8165;
static const int GL_OCCLUSION_TEST_RESULT_HP = 0x8166;
static const int GL_PIXEL_TRANSFORM_2D_EXT = 0x8330;
static const int GL_PIXEL_MAG_FILTER_EXT = 0x8331;
static const int GL_PIXEL_MIN_FILTER_EXT = 0x8332;
static const int GL_PIXEL_CUBIC_WEIGHT_EXT = 0x8333;
static const int GL_CUBIC_EXT = 0x8334;
static const int GL_AVERAGE_EXT = 0x8335;
static const int GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336;
static const int GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337;
static const int GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338;
static const int GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB;
static const int GL_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8;
static const int GL_SINGLE_COLOR_EXT = 0x81F9;
static const int GL_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA;
static const int GL_COLOR_SUM_EXT = 0x8458;
static const int GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459;
static const int GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A;
static const int GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B;
static const int GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C;
static const int GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D;
static const int GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E;
static const int GL_PERTURB_EXT = 0x85AE;
static const int GL_TEXTURE_NORMAL_EXT = 0x85AF;
static const int GL_FOG_COORDINATE_SOURCE_EXT = 0x8450;
static const int GL_FOG_COORDINATE_EXT = 0x8451;
static const int GL_FRAGMENT_DEPTH_EXT = 0x8452;
static const int GL_CURRENT_FOG_COORDINATE_EXT = 0x8453;
static const int GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454;
static const int GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455;
static const int GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456;
static const int GL_FOG_COORDINATE_ARRAY_EXT = 0x8457;
static const int GL_SCREEN_COORDINATES_REND = 0x8490;
static const int GL_INVERTED_SCREEN_W_REND = 0x8491;
static const int GL_TANGENT_ARRAY_EXT = 0x8439;
static const int GL_BINORMAL_ARRAY_EXT = 0x843A;
static const int GL_CURRENT_TANGENT_EXT = 0x843B;
static const int GL_CURRENT_BINORMAL_EXT = 0x843C;
static const int GL_TANGENT_ARRAY_TYPE_EXT = 0x843E;
static const int GL_TANGENT_ARRAY_STRIDE_EXT = 0x843F;
static const int GL_BINORMAL_ARRAY_TYPE_EXT = 0x8440;
static const int GL_BINORMAL_ARRAY_STRIDE_EXT = 0x8441;
static const int GL_TANGENT_ARRAY_POINTER_EXT = 0x8442;
static const int GL_BINORMAL_ARRAY_POINTER_EXT = 0x8443;
static const int GL_MAP1_TANGENT_EXT = 0x8444;
static const int GL_MAP2_TANGENT_EXT = 0x8445;
static const int GL_MAP1_BINORMAL_EXT = 0x8446;
static const int GL_MAP2_BINORMAL_EXT = 0x8447;
static const int GL_COMBINE_EXT = 0x8570;
static const int GL_COMBINE_RGB_EXT = 0x8571;
static const int GL_COMBINE_ALPHA_EXT = 0x8572;
static const int GL_RGB_SCALE_EXT = 0x8573;
static const int GL_ADD_SIGNED_EXT = 0x8574;
static const int GL_INTERPOLATE_EXT = 0x8575;
static const int GL_CONSTANT_EXT = 0x8576;
static const int GL_PRIMARY_COLOR_EXT = 0x8577;
static const int GL_PREVIOUS_EXT = 0x8578;
static const int GL_SOURCE0_RGB_EXT = 0x8580;
static const int GL_SOURCE1_RGB_EXT = 0x8581;
static const int GL_SOURCE2_RGB_EXT = 0x8582;
static const int GL_SOURCE0_ALPHA_EXT = 0x8588;
static const int GL_SOURCE1_ALPHA_EXT = 0x8589;
static const int GL_SOURCE2_ALPHA_EXT = 0x858A;
static const int GL_OPERAND0_RGB_EXT = 0x8590;
static const int GL_OPERAND1_RGB_EXT = 0x8591;
static const int GL_OPERAND2_RGB_EXT = 0x8592;
static const int GL_OPERAND0_ALPHA_EXT = 0x8598;
static const int GL_OPERAND1_ALPHA_EXT = 0x8599;
static const int GL_OPERAND2_ALPHA_EXT = 0x859A;
static const int GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0;
static const int GL_TRANSFORM_HINT_APPLE = 0x85B1;
static const int GL_FOG_SCALE_SGIX = 0x81FC;
static const int GL_FOG_SCALE_VALUE_SGIX = 0x81FD;
static const int GL_UNPACK_CONSTANT_DATA_SUNX = 0x81D5;
static const int GL_TEXTURE_CONSTANT_DATA_SUNX = 0x81D6;
static const int GL_GLOBAL_ALPHA_SUN = 0x81D9;
static const int GL_GLOBAL_ALPHA_FACTOR_SUN = 0x81DA;
static const int GL_RESTART_SUN = 0x0001;
static const int GL_REPLACE_MIDDLE_SUN = 0x0002;
static const int GL_REPLACE_OLDEST_SUN = 0x0003;
static const int GL_TRIANGLE_LIST_SUN = 0x81D7;
static const int GL_REPLACEMENT_CODE_SUN = 0x81D8;
static const int GL_REPLACEMENT_CODE_ARRAY_SUN = 0x85C0;
static const int GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1;
static const int GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2;
static const int GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3;
static const int GL_R1UI_V3F_SUN = 0x85C4;
static const int GL_R1UI_C4UB_V3F_SUN = 0x85C5;
static const int GL_R1UI_C3F_V3F_SUN = 0x85C6;
static const int GL_R1UI_N3F_V3F_SUN = 0x85C7;
static const int GL_R1UI_C4F_N3F_V3F_SUN = 0x85C8;
static const int GL_R1UI_T2F_V3F_SUN = 0x85C9;
static const int GL_R1UI_T2F_N3F_V3F_SUN = 0x85CA;
static const int GL_R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB;
static const int GL_BLEND_DST_RGB_EXT = 0x80C8;
static const int GL_BLEND_SRC_RGB_EXT = 0x80C9;
static const int GL_BLEND_DST_ALPHA_EXT = 0x80CA;
static const int GL_BLEND_SRC_ALPHA_EXT = 0x80CB;
static const int GL_RED_MIN_CLAMP_INGR = 0x8560;
static const int GL_GREEN_MIN_CLAMP_INGR = 0x8561;
static const int GL_BLUE_MIN_CLAMP_INGR = 0x8562;
static const int GL_ALPHA_MIN_CLAMP_INGR = 0x8563;
static const int GL_RED_MAX_CLAMP_INGR = 0x8564;
static const int GL_GREEN_MAX_CLAMP_INGR = 0x8565;
static const int GL_BLUE_MAX_CLAMP_INGR = 0x8566;
static const int GL_ALPHA_MAX_CLAMP_INGR = 0x8567;
static const int GL_INTERLACE_READ_INGR = 0x8568;
static const int GL_INCR_WRAP_EXT = 0x8507;
static const int GL_DECR_WRAP_EXT = 0x8508;
static const int GL_422_EXT = 0x80CC;
static const int GL_422_REV_EXT = 0x80CD;
static const int GL_422_AVERAGE_EXT = 0x80CE;
static const int GL_422_REV_AVERAGE_EXT = 0x80CF;
static const int GL_NORMAL_MAP_NV = 0x8511;
static const int GL_REFLECTION_MAP_NV = 0x8512;
static const int GL_NORMAL_MAP_EXT = 0x8511;
static const int GL_REFLECTION_MAP_EXT = 0x8512;
static const int GL_TEXTURE_CUBE_MAP_EXT = 0x8513;
static const int GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514;
static const int GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515;
static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516;
static const int GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517;
static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518;
static const int GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519;
static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A;
static const int GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B;
static const int GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C;
static const int GL_WRAP_BORDER_SUN = 0x81D4;
static const int GL_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD;
static const int GL_TEXTURE_FILTER_CONTROL_EXT = 0x8500;
static const int GL_TEXTURE_LOD_BIAS_EXT = 0x8501;
static const int GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;
static const int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;
static const int GL_MODELVIEW0_STACK_DEPTH_EXT = GL_MODELVIEW_STACK_DEPTH;
static const int GL_MODELVIEW1_STACK_DEPTH_EXT = 0x8502;
static const int GL_MODELVIEW0_MATRIX_EXT = GL_MODELVIEW_MATRIX;
static const int GL_MODELVIEW1_MATRIX_EXT = 0x8506;
static const int GL_VERTEX_WEIGHTING_EXT = 0x8509;
static const int GL_MODELVIEW0_EXT = GL_MODELVIEW;
static const int GL_MODELVIEW1_EXT = 0x850A;
static const int GL_CURRENT_VERTEX_WEIGHT_EXT = 0x850B;
static const int GL_VERTEX_WEIGHT_ARRAY_EXT = 0x850C;
static const int GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D;
static const int GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E;
static const int GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F;
static const int GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510;
static const int GL_MAX_SHININESS_NV = 0x8504;
static const int GL_MAX_SPOT_EXPONENT_NV = 0x8505;
static const int GL_VERTEX_ARRAY_RANGE_NV = 0x851D;
static const int GL_VERTEX_ARRAY_RANGE_LENGTH_NV = 0x851E;
static const int GL_VERTEX_ARRAY_RANGE_VALID_NV = 0x851F;
static const int GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = 0x8520;
static const int GL_VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521;
static const int GL_REGISTER_COMBINERS_NV = 0x8522;
static const int GL_VARIABLE_A_NV = 0x8523;
static const int GL_VARIABLE_B_NV = 0x8524;
static const int GL_VARIABLE_C_NV = 0x8525;
static const int GL_VARIABLE_D_NV = 0x8526;
static const int GL_VARIABLE_E_NV = 0x8527;
static const int GL_VARIABLE_F_NV = 0x8528;
static const int GL_VARIABLE_G_NV = 0x8529;
static const int GL_CONSTANT_COLOR0_NV = 0x852A;
static const int GL_CONSTANT_COLOR1_NV = 0x852B;
static const int GL_PRIMARY_COLOR_NV = 0x852C;
static const int GL_SECONDARY_COLOR_NV = 0x852D;
static const int GL_SPARE0_NV = 0x852E;
static const int GL_SPARE1_NV = 0x852F;
static const int GL_DISCARD_NV = 0x8530;
static const int GL_E_TIMES_F_NV = 0x8531;
static const int GL_SPARE0_PLUS_SECONDARY_COLOR_NV = 0x8532;
static const int GL_UNSIGNED_IDENTITY_NV = 0x8536;
static const int GL_UNSIGNED_INVERT_NV = 0x8537;
static const int GL_EXPAND_NORMAL_NV = 0x8538;
static const int GL_EXPAND_NEGATE_NV = 0x8539;
static const int GL_HALF_BIAS_NORMAL_NV = 0x853A;
static const int GL_HALF_BIAS_NEGATE_NV = 0x853B;
static const int GL_SIGNED_IDENTITY_NV = 0x853C;
static const int GL_SIGNED_NEGATE_NV = 0x853D;
static const int GL_SCALE_BY_TWO_NV = 0x853E;
static const int GL_SCALE_BY_FOUR_NV = 0x853F;
static const int GL_SCALE_BY_ONE_HALF_NV = 0x8540;
static const int GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = 0x8541;
static const int GL_COMBINER_INPUT_NV = 0x8542;
static const int GL_COMBINER_MAPPING_NV = 0x8543;
static const int GL_COMBINER_COMPONENT_USAGE_NV = 0x8544;
static const int GL_COMBINER_AB_DOT_PRODUCT_NV = 0x8545;
static const int GL_COMBINER_CD_DOT_PRODUCT_NV = 0x8546;
static const int GL_COMBINER_MUX_SUM_NV = 0x8547;
static const int GL_COMBINER_SCALE_NV = 0x8548;
static const int GL_COMBINER_BIAS_NV = 0x8549;
static const int GL_COMBINER_AB_OUTPUT_NV = 0x854A;
static const int GL_COMBINER_CD_OUTPUT_NV = 0x854B;
static const int GL_COMBINER_SUM_OUTPUT_NV = 0x854C;
static const int GL_MAX_GENERAL_COMBINERS_NV = 0x854D;
static const int GL_NUM_GENERAL_COMBINERS_NV = 0x854E;
static const int GL_COLOR_SUM_CLAMP_NV = 0x854F;
static const int GL_COMBINER0_NV = 0x8550;
static const int GL_COMBINER1_NV = 0x8551;
static const int GL_COMBINER2_NV = 0x8552;
static const int GL_COMBINER3_NV = 0x8553;
static const int GL_COMBINER4_NV = 0x8554;
static const int GL_COMBINER5_NV = 0x8555;
static const int GL_COMBINER6_NV = 0x8556;
static const int GL_COMBINER7_NV = 0x8557;
static const int GL_FOG_DISTANCE_MODE_NV = 0x855A;
static const int GL_EYE_RADIAL_NV = 0x855B;
static const int GL_EYE_PLANE_ABSOLUTE_NV = 0x855C;
static const int GL_EMBOSS_LIGHT_NV = 0x855D;
static const int GL_EMBOSS_CONSTANT_NV = 0x855E;
static const int GL_EMBOSS_MAP_NV = 0x855F;
static const int GL_COMBINE4_NV = 0x8503;
static const int GL_SOURCE3_RGB_NV = 0x8583;
static const int GL_SOURCE3_ALPHA_NV = 0x858B;
static const int GL_OPERAND3_RGB_NV = 0x8593;
static const int GL_OPERAND3_ALPHA_NV = 0x859B;
static const int GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;
static const int GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;
static const int GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;
static const int GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;
static const int GL_CULL_VERTEX_IBM = 103050;
static const int GL_VERTEX_ARRAY_LIST_IBM = 103070;
static const int GL_NORMAL_ARRAY_LIST_IBM = 103071;
static const int GL_COLOR_ARRAY_LIST_IBM = 103072;
static const int GL_INDEX_ARRAY_LIST_IBM = 103073;
static const int GL_TEXTURE_COORD_ARRAY_LIST_IBM = 103074;
static const int GL_EDGE_FLAG_ARRAY_LIST_IBM = 103075;
static const int GL_FOG_COORDINATE_ARRAY_LIST_IBM = 103076;
static const int GL_SECONDARY_COLOR_ARRAY_LIST_IBM = 103077;
static const int GL_VERTEX_ARRAY_LIST_STRIDE_IBM = 103080;
static const int GL_NORMAL_ARRAY_LIST_STRIDE_IBM = 103081;
static const int GL_COLOR_ARRAY_LIST_STRIDE_IBM = 103082;
static const int GL_INDEX_ARRAY_LIST_STRIDE_IBM = 103083;
static const int GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084;
static const int GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085;
static const int GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086;
static const int GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087;
static const int GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0;
static const int GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1;
static const int GL_PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2;
static const int GL_PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3;
static const int GL_PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4;
static const int GL_YCRCB_SGIX = 0x8318;
static const int GL_YCRCBA_SGIX = 0x8319;
static const int GL_DEPTH_PASS_INSTRUMENT_SGIX = 0x8310;
static const int GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = 0x8311;
static const int GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX = 0x8312;
static const int GL_COMPRESSED_RGB_FXT1_3DFX = 0x86B0;
static const int GL_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1;
static const int GL_MULTISAMPLE_3DFX = 0x86B2;
static const int GL_SAMPLE_BUFFERS_3DFX = 0x86B3;
static const int GL_SAMPLES_3DFX = 0x86B4;
static const int GL_MULTISAMPLE_BIT_3DFX = 0x20000000;
static const int GL_MULTISAMPLE_EXT = 0x809D;
static const int GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E;
static const int GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F;
static const int GL_SAMPLE_MASK_EXT = 0x80A0;
static const int GL_1PASS_EXT = 0x80A1;
static const int GL_2PASS_0_EXT = 0x80A2;
static const int GL_2PASS_1_EXT = 0x80A3;
static const int GL_4PASS_0_EXT = 0x80A4;
static const int GL_4PASS_1_EXT = 0x80A5;
static const int GL_4PASS_2_EXT = 0x80A6;
static const int GL_4PASS_3_EXT = 0x80A7;
static const int GL_SAMPLE_BUFFERS_EXT = 0x80A8;
static const int GL_SAMPLES_EXT = 0x80A9;
static const int GL_SAMPLE_MASK_VALUE_EXT = 0x80AA;
static const int GL_SAMPLE_MASK_INVERT_EXT = 0x80AB;
static const int GL_SAMPLE_PATTERN_EXT = 0x80AC;
static const int GL_MULTISAMPLE_BIT_EXT = 0x20000000;
static const int GL_VERTEX_PRECLIP_SGIX = 0x83EE;
static const int GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF;
static const int GL_CONVOLUTION_HINT_SGIX = 0x8316;
static const int GL_PACK_RESAMPLE_SGIX = 0x842C;
static const int GL_UNPACK_RESAMPLE_SGIX = 0x842D;
static const int GL_RESAMPLE_REPLICATE_SGIX = 0x842E;
static const int GL_RESAMPLE_ZERO_FILL_SGIX = 0x842F;
static const int GL_RESAMPLE_DECIMATE_SGIX = 0x8430;
static const int GL_EYE_DISTANCE_TO_POINT_SGIS = 0x81F0;
static const int GL_OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1;
static const int GL_EYE_DISTANCE_TO_LINE_SGIS = 0x81F2;
static const int GL_OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3;
static const int GL_EYE_POINT_SGIS = 0x81F4;
static const int GL_OBJECT_POINT_SGIS = 0x81F5;
static const int GL_EYE_LINE_SGIS = 0x81F6;
static const int GL_OBJECT_LINE_SGIS = 0x81F7;
static const int GL_TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF;
static const int GL_DOT3_RGB_EXT = 0x8740;
static const int GL_DOT3_RGBA_EXT = 0x8741;
static const int GL_MIRROR_CLAMP_ATI = 0x8742;
static const int GL_MIRROR_CLAMP_TO_EDGE_ATI = 0x8743;
static const int GL_ALL_COMPLETED_NV = 0x84F2;
static const int GL_FENCE_STATUS_NV = 0x84F3;
static const int GL_FENCE_CONDITION_NV = 0x84F4;
static const int GL_MIRRORED_REPEAT_IBM = 0x8370;
static const int GL_EVAL_2D_NV = 0x86C0;
static const int GL_EVAL_TRIANGULAR_2D_NV = 0x86C1;
static const int GL_MAP_TESSELLATION_NV = 0x86C2;
static const int GL_MAP_ATTRIB_U_ORDER_NV = 0x86C3;
static const int GL_MAP_ATTRIB_V_ORDER_NV = 0x86C4;
static const int GL_EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5;
static const int GL_EVAL_VERTEX_ATTRIB0_NV = 0x86C6;
static const int GL_EVAL_VERTEX_ATTRIB1_NV = 0x86C7;
static const int GL_EVAL_VERTEX_ATTRIB2_NV = 0x86C8;
static const int GL_EVAL_VERTEX_ATTRIB3_NV = 0x86C9;
static const int GL_EVAL_VERTEX_ATTRIB4_NV = 0x86CA;
static const int GL_EVAL_VERTEX_ATTRIB5_NV = 0x86CB;
static const int GL_EVAL_VERTEX_ATTRIB6_NV = 0x86CC;
static const int GL_EVAL_VERTEX_ATTRIB7_NV = 0x86CD;
static const int GL_EVAL_VERTEX_ATTRIB8_NV = 0x86CE;
static const int GL_EVAL_VERTEX_ATTRIB9_NV = 0x86CF;
static const int GL_EVAL_VERTEX_ATTRIB10_NV = 0x86D0;
static const int GL_EVAL_VERTEX_ATTRIB11_NV = 0x86D1;
static const int GL_EVAL_VERTEX_ATTRIB12_NV = 0x86D2;
static const int GL_EVAL_VERTEX_ATTRIB13_NV = 0x86D3;
static const int GL_EVAL_VERTEX_ATTRIB14_NV = 0x86D4;
static const int GL_EVAL_VERTEX_ATTRIB15_NV = 0x86D5;
static const int GL_MAX_MAP_TESSELLATION_NV = 0x86D6;
static const int GL_MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7;
static const int GL_DEPTH_STENCIL_NV = 0x84F9;
static const int GL_UNSIGNED_INT_24_8_NV = 0x84FA;
static const int GL_PER_STAGE_CONSTANTS_NV = 0x8535;
static const int GL_TEXTURE_RECTANGLE_NV = 0x84F5;
static const int GL_TEXTURE_BINDING_RECTANGLE_NV = 0x84F6;
static const int GL_PROXY_TEXTURE_RECTANGLE_NV = 0x84F7;
static const int GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = 0x84F8;
static const int GL_OFFSET_TEXTURE_RECTANGLE_NV = 0x864C;
static const int GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = 0x864D;
static const int GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = 0x864E;
static const int GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = 0x86D9;
static const int GL_UNSIGNED_INT_S8_S8_8_8_NV = 0x86DA;
static const int GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = 0x86DB;
static const int GL_DSDT_MAG_INTENSITY_NV = 0x86DC;
static const int GL_SHADER_CONSISTENT_NV = 0x86DD;
static const int GL_TEXTURE_SHADER_NV = 0x86DE;
static const int GL_SHADER_OPERATION_NV = 0x86DF;
static const int GL_CULL_MODES_NV = 0x86E0;
static const int GL_OFFSET_TEXTURE_MATRIX_NV = 0x86E1;
static const int GL_OFFSET_TEXTURE_SCALE_NV = 0x86E2;
static const int GL_OFFSET_TEXTURE_BIAS_NV = 0x86E3;
static const int GL_OFFSET_TEXTURE_2D_MATRIX_NV = GL_OFFSET_TEXTURE_MATRIX_NV;
static const int GL_OFFSET_TEXTURE_2D_SCALE_NV = GL_OFFSET_TEXTURE_SCALE_NV;
static const int GL_OFFSET_TEXTURE_2D_BIAS_NV = GL_OFFSET_TEXTURE_BIAS_NV;
static const int GL_PREVIOUS_TEXTURE_INPUT_NV = 0x86E4;
static const int GL_CONST_EYE_NV = 0x86E5;
static const int GL_PASS_THROUGH_NV = 0x86E6;
static const int GL_CULL_FRAGMENT_NV = 0x86E7;
static const int GL_OFFSET_TEXTURE_2D_NV = 0x86E8;
static const int GL_DEPENDENT_AR_TEXTURE_2D_NV = 0x86E9;
static const int GL_DEPENDENT_GB_TEXTURE_2D_NV = 0x86EA;
static const int GL_DOT_PRODUCT_NV = 0x86EC;
static const int GL_DOT_PRODUCT_DEPTH_REPLACE_NV = 0x86ED;
static const int GL_DOT_PRODUCT_TEXTURE_2D_NV = 0x86EE;
static const int GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = 0x86F0;
static const int GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = 0x86F1;
static const int GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = 0x86F2;
static const int GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = 0x86F3;
static const int GL_HILO_NV = 0x86F4;
static const int GL_DSDT_NV = 0x86F5;
static const int GL_DSDT_MAG_NV = 0x86F6;
static const int GL_DSDT_MAG_VIB_NV = 0x86F7;
static const int GL_HILO16_NV = 0x86F8;
static const int GL_SIGNED_HILO_NV = 0x86F9;
static const int GL_SIGNED_HILO16_NV = 0x86FA;
static const int GL_SIGNED_RGBA_NV = 0x86FB;
static const int GL_SIGNED_RGBA8_NV = 0x86FC;
static const int GL_SIGNED_RGB_NV = 0x86FE;
static const int GL_SIGNED_RGB8_NV = 0x86FF;
static const int GL_SIGNED_LUMINANCE_NV = 0x8701;
static const int GL_SIGNED_LUMINANCE8_NV = 0x8702;
static const int GL_SIGNED_LUMINANCE_ALPHA_NV = 0x8703;
static const int GL_SIGNED_LUMINANCE8_ALPHA8_NV = 0x8704;
static const int GL_SIGNED_ALPHA_NV = 0x8705;
static const int GL_SIGNED_ALPHA8_NV = 0x8706;
static const int GL_SIGNED_INTENSITY_NV = 0x8707;
static const int GL_SIGNED_INTENSITY8_NV = 0x8708;
static const int GL_DSDT8_NV = 0x8709;
static const int GL_DSDT8_MAG8_NV = 0x870A;
static const int GL_DSDT8_MAG8_INTENSITY8_NV = 0x870B;
static const int GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = 0x870C;
static const int GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = 0x870D;
static const int GL_HI_SCALE_NV = 0x870E;
static const int GL_LO_SCALE_NV = 0x870F;
static const int GL_DS_SCALE_NV = 0x8710;
static const int GL_DT_SCALE_NV = 0x8711;
static const int GL_MAGNITUDE_SCALE_NV = 0x8712;
static const int GL_VIBRANCE_SCALE_NV = 0x8713;
static const int GL_HI_BIAS_NV = 0x8714;
static const int GL_LO_BIAS_NV = 0x8715;
static const int GL_DS_BIAS_NV = 0x8716;
static const int GL_DT_BIAS_NV = 0x8717;
static const int GL_MAGNITUDE_BIAS_NV = 0x8718;
static const int GL_VIBRANCE_BIAS_NV = 0x8719;
static const int GL_TEXTURE_BORDER_VALUES_NV = 0x871A;
static const int GL_TEXTURE_HI_SIZE_NV = 0x871B;
static const int GL_TEXTURE_LO_SIZE_NV = 0x871C;
static const int GL_TEXTURE_DS_SIZE_NV = 0x871D;
static const int GL_TEXTURE_DT_SIZE_NV = 0x871E;
static const int GL_TEXTURE_MAG_SIZE_NV = 0x871F;
static const int GL_DOT_PRODUCT_TEXTURE_3D_NV = 0x86EF;
static const int GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = 0x8533;
static const int GL_VERTEX_PROGRAM_NV = 0x8620;
static const int GL_VERTEX_STATE_PROGRAM_NV = 0x8621;
static const int GL_ATTRIB_ARRAY_SIZE_NV = 0x8623;
static const int GL_ATTRIB_ARRAY_STRIDE_NV = 0x8624;
static const int GL_ATTRIB_ARRAY_TYPE_NV = 0x8625;
static const int GL_CURRENT_ATTRIB_NV = 0x8626;
static const int GL_PROGRAM_LENGTH_NV = 0x8627;
static const int GL_PROGRAM_STRING_NV = 0x8628;
static const int GL_MODELVIEW_PROJECTION_NV = 0x8629;
static const int GL_IDENTITY_NV = 0x862A;
static const int GL_INVERSE_NV = 0x862B;
static const int GL_TRANSPOSE_NV = 0x862C;
static const int GL_INVERSE_TRANSPOSE_NV = 0x862D;
static const int GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = 0x862E;
static const int GL_MAX_TRACK_MATRICES_NV = 0x862F;
static const int GL_MATRIX0_NV = 0x8630;
static const int GL_MATRIX1_NV = 0x8631;
static const int GL_MATRIX2_NV = 0x8632;
static const int GL_MATRIX3_NV = 0x8633;
static const int GL_MATRIX4_NV = 0x8634;
static const int GL_MATRIX5_NV = 0x8635;
static const int GL_MATRIX6_NV = 0x8636;
static const int GL_MATRIX7_NV = 0x8637;
static const int GL_CURRENT_MATRIX_STACK_DEPTH_NV = 0x8640;
static const int GL_CURRENT_MATRIX_NV = 0x8641;
static const int GL_VERTEX_PROGRAM_POINT_SIZE_NV = 0x8642;
static const int GL_VERTEX_PROGRAM_TWO_SIDE_NV = 0x8643;
static const int GL_PROGRAM_PARAMETER_NV = 0x8644;
static const int GL_ATTRIB_ARRAY_POINTER_NV = 0x8645;
static const int GL_PROGRAM_TARGET_NV = 0x8646;
static const int GL_PROGRAM_RESIDENT_NV = 0x8647;
static const int GL_TRACK_MATRIX_NV = 0x8648;
static const int GL_TRACK_MATRIX_TRANSFORM_NV = 0x8649;
static const int GL_VERTEX_PROGRAM_BINDING_NV = 0x864A;
static const int GL_PROGRAM_ERROR_POSITION_NV = 0x864B;
static const int GL_VERTEX_ATTRIB_ARRAY0_NV = 0x8650;
static const int GL_VERTEX_ATTRIB_ARRAY1_NV = 0x8651;
static const int GL_VERTEX_ATTRIB_ARRAY2_NV = 0x8652;
static const int GL_VERTEX_ATTRIB_ARRAY3_NV = 0x8653;
static const int GL_VERTEX_ATTRIB_ARRAY4_NV = 0x8654;
static const int GL_VERTEX_ATTRIB_ARRAY5_NV = 0x8655;
static const int GL_VERTEX_ATTRIB_ARRAY6_NV = 0x8656;
static const int GL_VERTEX_ATTRIB_ARRAY7_NV = 0x8657;
static const int GL_VERTEX_ATTRIB_ARRAY8_NV = 0x8658;
static const int GL_VERTEX_ATTRIB_ARRAY9_NV = 0x8659;
static const int GL_VERTEX_ATTRIB_ARRAY10_NV = 0x865A;
static const int GL_VERTEX_ATTRIB_ARRAY11_NV = 0x865B;
static const int GL_VERTEX_ATTRIB_ARRAY12_NV = 0x865C;
static const int GL_VERTEX_ATTRIB_ARRAY13_NV = 0x865D;
static const int GL_VERTEX_ATTRIB_ARRAY14_NV = 0x865E;
static const int GL_VERTEX_ATTRIB_ARRAY15_NV = 0x865F;
static const int GL_MAP1_VERTEX_ATTRIB0_4_NV = 0x8660;
static const int GL_MAP1_VERTEX_ATTRIB1_4_NV = 0x8661;
static const int GL_MAP1_VERTEX_ATTRIB2_4_NV = 0x8662;
static const int GL_MAP1_VERTEX_ATTRIB3_4_NV = 0x8663;
static const int GL_MAP1_VERTEX_ATTRIB4_4_NV = 0x8664;
static const int GL_MAP1_VERTEX_ATTRIB5_4_NV = 0x8665;
static const int GL_MAP1_VERTEX_ATTRIB6_4_NV = 0x8666;
static const int GL_MAP1_VERTEX_ATTRIB7_4_NV = 0x8667;
static const int GL_MAP1_VERTEX_ATTRIB8_4_NV = 0x8668;
static const int GL_MAP1_VERTEX_ATTRIB9_4_NV = 0x8669;
static const int GL_MAP1_VERTEX_ATTRIB10_4_NV = 0x866A;
static const int GL_MAP1_VERTEX_ATTRIB11_4_NV = 0x866B;
static const int GL_MAP1_VERTEX_ATTRIB12_4_NV = 0x866C;
static const int GL_MAP1_VERTEX_ATTRIB13_4_NV = 0x866D;
static const int GL_MAP1_VERTEX_ATTRIB14_4_NV = 0x866E;
static const int GL_MAP1_VERTEX_ATTRIB15_4_NV = 0x866F;
static const int GL_MAP2_VERTEX_ATTRIB0_4_NV = 0x8670;
static const int GL_MAP2_VERTEX_ATTRIB1_4_NV = 0x8671;
static const int GL_MAP2_VERTEX_ATTRIB2_4_NV = 0x8672;
static const int GL_MAP2_VERTEX_ATTRIB3_4_NV = 0x8673;
static const int GL_MAP2_VERTEX_ATTRIB4_4_NV = 0x8674;
static const int GL_MAP2_VERTEX_ATTRIB5_4_NV = 0x8675;
static const int GL_MAP2_VERTEX_ATTRIB6_4_NV = 0x8676;
static const int GL_MAP2_VERTEX_ATTRIB7_4_NV = 0x8677;
static const int GL_MAP2_VERTEX_ATTRIB8_4_NV = 0x8678;
static const int GL_MAP2_VERTEX_ATTRIB9_4_NV = 0x8679;
static const int GL_MAP2_VERTEX_ATTRIB10_4_NV = 0x867A;
static const int GL_MAP2_VERTEX_ATTRIB11_4_NV = 0x867B;
static const int GL_MAP2_VERTEX_ATTRIB12_4_NV = 0x867C;
static const int GL_MAP2_VERTEX_ATTRIB13_4_NV = 0x867D;
static const int GL_MAP2_VERTEX_ATTRIB14_4_NV = 0x867E;
static const int GL_MAP2_VERTEX_ATTRIB15_4_NV = 0x867F;
static const int GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369;
static const int GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A;
static const int GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B;
static const int GL_SCALEBIAS_HINT_SGIX = 0x8322;
static const int GL_INTERLACE_OML = 0x8980;
static const int GL_INTERLACE_READ_OML = 0x8981;
static const int GL_FORMAT_SUBSAMPLE_24_24_OML = 0x8982;
static const int GL_FORMAT_SUBSAMPLE_244_244_OML = 0x8983;
static const int GL_PACK_RESAMPLE_OML = 0x8984;
static const int GL_UNPACK_RESAMPLE_OML = 0x8985;
static const int GL_RESAMPLE_REPLICATE_OML = 0x8986;
static const int GL_RESAMPLE_ZERO_FILL_OML = 0x8987;
static const int GL_RESAMPLE_AVERAGE_OML = 0x8988;
static const int GL_RESAMPLE_DECIMATE_OML = 0x8989;
static const int GL_DEPTH_STENCIL_TO_RGBA_NV = 0x886E;
static const int GL_DEPTH_STENCIL_TO_BGRA_NV = 0x886F;
static const int GL_BUMP_ROT_MATRIX_ATI = 0x8775;
static const int GL_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776;
static const int GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777;
static const int GL_BUMP_TEX_UNITS_ATI = 0x8778;
static const int GL_DUDV_ATI = 0x8779;
static const int GL_DU8DV8_ATI = 0x877A;
static const int GL_BUMP_ENVMAP_ATI = 0x877B;
static const int GL_BUMP_TARGET_ATI = 0x877C;
static const int GL_FRAGMENT_SHADER_ATI = 0x8920;
static const int GL_REG_0_ATI = 0x8921;
static const int GL_REG_1_ATI = 0x8922;
static const int GL_REG_2_ATI = 0x8923;
static const int GL_REG_3_ATI = 0x8924;
static const int GL_REG_4_ATI = 0x8925;
static const int GL_REG_5_ATI = 0x8926;
static const int GL_REG_6_ATI = 0x8927;
static const int GL_REG_7_ATI = 0x8928;
static const int GL_REG_8_ATI = 0x8929;
static const int GL_REG_9_ATI = 0x892A;
static const int GL_REG_10_ATI = 0x892B;
static const int GL_REG_11_ATI = 0x892C;
static const int GL_REG_12_ATI = 0x892D;
static const int GL_REG_13_ATI = 0x892E;
static const int GL_REG_14_ATI = 0x892F;
static const int GL_REG_15_ATI = 0x8930;
static const int GL_REG_16_ATI = 0x8931;
static const int GL_REG_17_ATI = 0x8932;
static const int GL_REG_18_ATI = 0x8933;
static const int GL_REG_19_ATI = 0x8934;
static const int GL_REG_20_ATI = 0x8935;
static const int GL_REG_21_ATI = 0x8936;
static const int GL_REG_22_ATI = 0x8937;
static const int GL_REG_23_ATI = 0x8938;
static const int GL_REG_24_ATI = 0x8939;
static const int GL_REG_25_ATI = 0x893A;
static const int GL_REG_26_ATI = 0x893B;
static const int GL_REG_27_ATI = 0x893C;
static const int GL_REG_28_ATI = 0x893D;
static const int GL_REG_29_ATI = 0x893E;
static const int GL_REG_30_ATI = 0x893F;
static const int GL_REG_31_ATI = 0x8940;
static const int GL_CON_0_ATI = 0x8941;
static const int GL_CON_1_ATI = 0x8942;
static const int GL_CON_2_ATI = 0x8943;
static const int GL_CON_3_ATI = 0x8944;
static const int GL_CON_4_ATI = 0x8945;
static const int GL_CON_5_ATI = 0x8946;
static const int GL_CON_6_ATI = 0x8947;
static const int GL_CON_7_ATI = 0x8948;
static const int GL_CON_8_ATI = 0x8949;
static const int GL_CON_9_ATI = 0x894A;
static const int GL_CON_10_ATI = 0x894B;
static const int GL_CON_11_ATI = 0x894C;
static const int GL_CON_12_ATI = 0x894D;
static const int GL_CON_13_ATI = 0x894E;
static const int GL_CON_14_ATI = 0x894F;
static const int GL_CON_15_ATI = 0x8950;
static const int GL_CON_16_ATI = 0x8951;
static const int GL_CON_17_ATI = 0x8952;
static const int GL_CON_18_ATI = 0x8953;
static const int GL_CON_19_ATI = 0x8954;
static const int GL_CON_20_ATI = 0x8955;
static const int GL_CON_21_ATI = 0x8956;
static const int GL_CON_22_ATI = 0x8957;
static const int GL_CON_23_ATI = 0x8958;
static const int GL_CON_24_ATI = 0x8959;
static const int GL_CON_25_ATI = 0x895A;
static const int GL_CON_26_ATI = 0x895B;
static const int GL_CON_27_ATI = 0x895C;
static const int GL_CON_28_ATI = 0x895D;
static const int GL_CON_29_ATI = 0x895E;
static const int GL_CON_30_ATI = 0x895F;
static const int GL_CON_31_ATI = 0x8960;
static const int GL_MOV_ATI = 0x8961;
static const int GL_ADD_ATI = 0x8963;
static const int GL_MUL_ATI = 0x8964;
static const int GL_SUB_ATI = 0x8965;
static const int GL_DOT3_ATI = 0x8966;
static const int GL_DOT4_ATI = 0x8967;
static const int GL_MAD_ATI = 0x8968;
static const int GL_LERP_ATI = 0x8969;
static const int GL_CND_ATI = 0x896A;
static const int GL_CND0_ATI = 0x896B;
static const int GL_DOT2_ADD_ATI = 0x896C;
static const int GL_SECONDARY_INTERPOLATOR_ATI = 0x896D;
static const int GL_NUM_FRAGMENT_REGISTERS_ATI = 0x896E;
static const int GL_NUM_FRAGMENT_CONSTANTS_ATI = 0x896F;
static const int GL_NUM_PASSES_ATI = 0x8970;
static const int GL_NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971;
static const int GL_NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972;
static const int GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973;
static const int GL_NUM_LOOPBACK_COMPONENTS_ATI = 0x8974;
static const int GL_COLOR_ALPHA_PAIRING_ATI = 0x8975;
static const int GL_SWIZZLE_STR_ATI = 0x8976;
static const int GL_SWIZZLE_STQ_ATI = 0x8977;
static const int GL_SWIZZLE_STR_DR_ATI = 0x8978;
static const int GL_SWIZZLE_STQ_DQ_ATI = 0x8979;
static const int GL_SWIZZLE_STRQ_ATI = 0x897A;
static const int GL_SWIZZLE_STRQ_DQ_ATI = 0x897B;
static const int GL_RED_BIT_ATI = 0x00000001;
static const int GL_GREEN_BIT_ATI = 0x00000002;
static const int GL_BLUE_BIT_ATI = 0x00000004;
static const int GL_2X_BIT_ATI = 0x00000001;
static const int GL_4X_BIT_ATI = 0x00000002;
static const int GL_8X_BIT_ATI = 0x00000004;
static const int GL_HALF_BIT_ATI = 0x00000008;
static const int GL_QUARTER_BIT_ATI = 0x00000010;
static const int GL_EIGHTH_BIT_ATI = 0x00000020;
static const int GL_SATURATE_BIT_ATI = 0x00000040;
static const int GL_COMP_BIT_ATI = 0x00000002;
static const int GL_NEGATE_BIT_ATI = 0x00000004;
static const int GL_BIAS_BIT_ATI = 0x00000008;
static const int GL_PN_TRIANGLES_ATI = 0x87F0;
static const int GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1;
static const int GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2;
static const int GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3;
static const int GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4;
static const int GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5;
static const int GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6;
static const int GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7;
static const int GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8;
static const int GL_STATIC_ATI = 0x8760;
static const int GL_DYNAMIC_ATI = 0x8761;
static const int GL_PRESERVE_ATI = 0x8762;
static const int GL_DISCARD_ATI = 0x8763;
static const int GL_OBJECT_BUFFER_SIZE_ATI = 0x8764;
static const int GL_OBJECT_BUFFER_USAGE_ATI = 0x8765;
static const int GL_ARRAY_OBJECT_BUFFER_ATI = 0x8766;
static const int GL_ARRAY_OBJECT_OFFSET_ATI = 0x8767;
static const int GL_VERTEX_SHADER_EXT = 0x8780;
static const int GL_VERTEX_SHADER_BINDING_EXT = 0x8781;
static const int GL_OP_INDEX_EXT = 0x8782;
static const int GL_OP_NEGATE_EXT = 0x8783;
static const int GL_OP_DOT3_EXT = 0x8784;
static const int GL_OP_DOT4_EXT = 0x8785;
static const int GL_OP_MUL_EXT = 0x8786;
static const int GL_OP_ADD_EXT = 0x8787;
static const int GL_OP_MADD_EXT = 0x8788;
static const int GL_OP_FRAC_EXT = 0x8789;
static const int GL_OP_MAX_EXT = 0x878A;
static const int GL_OP_MIN_EXT = 0x878B;
static const int GL_OP_SET_GE_EXT = 0x878C;
static const int GL_OP_SET_LT_EXT = 0x878D;
static const int GL_OP_CLAMP_EXT = 0x878E;
static const int GL_OP_FLOOR_EXT = 0x878F;
static const int GL_OP_ROUND_EXT = 0x8790;
static const int GL_OP_EXP_BASE_2_EXT = 0x8791;
static const int GL_OP_LOG_BASE_2_EXT = 0x8792;
static const int GL_OP_POWER_EXT = 0x8793;
static const int GL_OP_RECIP_EXT = 0x8794;
static const int GL_OP_RECIP_SQRT_EXT = 0x8795;
static const int GL_OP_SUB_EXT = 0x8796;
static const int GL_OP_CROSS_PRODUCT_EXT = 0x8797;
static const int GL_OP_MULTIPLY_MATRIX_EXT = 0x8798;
static const int GL_OP_MOV_EXT = 0x8799;
static const int GL_OUTPUT_VERTEX_EXT = 0x879A;
static const int GL_OUTPUT_COLOR0_EXT = 0x879B;
static const int GL_OUTPUT_COLOR1_EXT = 0x879C;
static const int GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D;
static const int GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E;
static const int GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F;
static const int GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0;
static const int GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1;
static const int GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2;
static const int GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3;
static const int GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4;
static const int GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5;
static const int GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6;
static const int GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7;
static const int GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8;
static const int GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9;
static const int GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA;
static const int GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB;
static const int GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC;
static const int GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD;
static const int GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE;
static const int GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF;
static const int GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0;
static const int GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1;
static const int GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2;
static const int GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3;
static const int GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4;
static const int GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5;
static const int GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6;
static const int GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7;
static const int GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8;
static const int GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9;
static const int GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA;
static const int GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB;
static const int GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC;
static const int GL_OUTPUT_FOG_EXT = 0x87BD;
static const int GL_SCALAR_EXT = 0x87BE;
static const int GL_VECTOR_EXT = 0x87BF;
static const int GL_MATRIX_EXT = 0x87C0;
static const int GL_VARIANT_EXT = 0x87C1;
static const int GL_INVARIANT_EXT = 0x87C2;
static const int GL_LOCAL_CONSTANT_EXT = 0x87C3;
static const int GL_LOCAL_EXT = 0x87C4;
static const int GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5;
static const int GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6;
static const int GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7;
static const int GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8;
static const int GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9;
static const int GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA;
static const int GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB;
static const int GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC;
static const int GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD;
static const int GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE;
static const int GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF;
static const int GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0;
static const int GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1;
static const int GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2;
static const int GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3;
static const int GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4;
static const int GL_X_EXT = 0x87D5;
static const int GL_Y_EXT = 0x87D6;
static const int GL_Z_EXT = 0x87D7;
static const int GL_W_EXT = 0x87D8;
static const int GL_NEGATIVE_X_EXT = 0x87D9;
static const int GL_NEGATIVE_Y_EXT = 0x87DA;
static const int GL_NEGATIVE_Z_EXT = 0x87DB;
static const int GL_NEGATIVE_W_EXT = 0x87DC;
static const int GL_ZERO_EXT = 0x87DD;
static const int GL_ONE_EXT = 0x87DE;
static const int GL_NEGATIVE_ONE_EXT = 0x87DF;
static const int GL_NORMALIZED_RANGE_EXT = 0x87E0;
static const int GL_FULL_RANGE_EXT = 0x87E1;
static const int GL_CURRENT_VERTEX_EXT = 0x87E2;
static const int GL_MVP_MATRIX_EXT = 0x87E3;
static const int GL_VARIANT_VALUE_EXT = 0x87E4;
static const int GL_VARIANT_DATATYPE_EXT = 0x87E5;
static const int GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6;
static const int GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7;
static const int GL_VARIANT_ARRAY_EXT = 0x87E8;
static const int GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9;
static const int GL_INVARIANT_VALUE_EXT = 0x87EA;
static const int GL_INVARIANT_DATATYPE_EXT = 0x87EB;
static const int GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC;
static const int GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED;
static const int GL_MAX_VERTEX_STREAMS_ATI = 0x876B;
static const int GL_VERTEX_STREAM0_ATI = 0x876C;
static const int GL_VERTEX_STREAM1_ATI = 0x876D;
static const int GL_VERTEX_STREAM2_ATI = 0x876E;
static const int GL_VERTEX_STREAM3_ATI = 0x876F;
static const int GL_VERTEX_STREAM4_ATI = 0x8770;
static const int GL_VERTEX_STREAM5_ATI = 0x8771;
static const int GL_VERTEX_STREAM6_ATI = 0x8772;
static const int GL_VERTEX_STREAM7_ATI = 0x8773;
static const int GL_VERTEX_SOURCE_ATI = 0x8774;
static const int GL_ELEMENT_ARRAY_ATI = 0x8768;
static const int GL_ELEMENT_ARRAY_TYPE_ATI = 0x8769;
static const int GL_ELEMENT_ARRAY_POINTER_ATI = 0x876A;
static const int GL_QUAD_MESH_SUN = 0x8614;
static const int GL_TRIANGLE_MESH_SUN = 0x8615;
static const int GL_SLICE_ACCUM_SUN = 0x85CC;
static const int GL_MULTISAMPLE_FILTER_HINT_NV = 0x8534;
static const int GL_DEPTH_CLAMP_NV = 0x864F;
static const int GL_PIXEL_COUNTER_BITS_NV = 0x8864;
static const int GL_CURRENT_OCCLUSION_QUERY_ID_NV = 0x8865;
static const int GL_PIXEL_COUNT_NV = 0x8866;
static const int GL_PIXEL_COUNT_AVAILABLE_NV = 0x8867;
static const int GL_POINT_SPRITE_NV = 0x8861;
static const int GL_COORD_REPLACE_NV = 0x8862;
static const int GL_POINT_SPRITE_R_MODE_NV = 0x8863;
static const int GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = 0x8850;
static const int GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = 0x8851;
static const int GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8852;
static const int GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = 0x8853;
static const int GL_OFFSET_HILO_TEXTURE_2D_NV = 0x8854;
static const int GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = 0x8855;
static const int GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = 0x8856;
static const int GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8857;
static const int GL_DEPENDENT_HILO_TEXTURE_2D_NV = 0x8858;
static const int GL_DEPENDENT_RGB_TEXTURE_3D_NV = 0x8859;
static const int GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = 0x885A;
static const int GL_DOT_PRODUCT_PASS_THROUGH_NV = 0x885B;
static const int GL_DOT_PRODUCT_TEXTURE_1D_NV = 0x885C;
static const int GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = 0x885D;
static const int GL_HILO8_NV = 0x885E;
static const int GL_SIGNED_HILO8_NV = 0x885F;
static const int GL_FORCE_BLUE_TO_ONE_NV = 0x8860;
static const int GL_STENCIL_TEST_TWO_SIDE_EXT = 0x8910;
static const int GL_ACTIVE_STENCIL_FACE_EXT = 0x8911;
static const int GL_TEXT_FRAGMENT_SHADER_ATI = 0x8200;
static const int GL_UNPACK_CLIENT_STORAGE_APPLE = 0x85B2;
static const int GL_ELEMENT_ARRAY_APPLE = 0x8A0C;
static const int GL_ELEMENT_ARRAY_TYPE_APPLE = 0x8A0D;
static const int GL_ELEMENT_ARRAY_POINTER_APPLE = 0x8A0E;
static const int GL_DRAW_PIXELS_APPLE = 0x8A0A;
static const int GL_FENCE_APPLE = 0x8A0B;
static const int GL_VERTEX_ARRAY_BINDING_APPLE = 0x85B5;
static const int GL_VERTEX_ARRAY_RANGE_APPLE = 0x851D;
static const int GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E;
static const int GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F;
static const int GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521;
static const int GL_STORAGE_CLIENT_APPLE = 0x85B4;
static const int GL_STORAGE_CACHED_APPLE = 0x85BE;
static const int GL_STORAGE_SHARED_APPLE = 0x85BF;
static const int GL_YCBCR_422_APPLE = 0x85B9;
static const int GL_UNSIGNED_SHORT_8_8_APPLE = 0x85BA;
static const int GL_UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB;
static const int GL_RGB_S3TC = 0x83A0;
static const int GL_RGB4_S3TC = 0x83A1;
static const int GL_RGBA_S3TC = 0x83A2;
static const int GL_RGBA4_S3TC = 0x83A3;
static const int GL_MAX_DRAW_BUFFERS_ATI = 0x8824;
static const int GL_DRAW_BUFFER0_ATI = 0x8825;
static const int GL_DRAW_BUFFER1_ATI = 0x8826;
static const int GL_DRAW_BUFFER2_ATI = 0x8827;
static const int GL_DRAW_BUFFER3_ATI = 0x8828;
static const int GL_DRAW_BUFFER4_ATI = 0x8829;
static const int GL_DRAW_BUFFER5_ATI = 0x882A;
static const int GL_DRAW_BUFFER6_ATI = 0x882B;
static const int GL_DRAW_BUFFER7_ATI = 0x882C;
static const int GL_DRAW_BUFFER8_ATI = 0x882D;
static const int GL_DRAW_BUFFER9_ATI = 0x882E;
static const int GL_DRAW_BUFFER10_ATI = 0x882F;
static const int GL_DRAW_BUFFER11_ATI = 0x8830;
static const int GL_DRAW_BUFFER12_ATI = 0x8831;
static const int GL_DRAW_BUFFER13_ATI = 0x8832;
static const int GL_DRAW_BUFFER14_ATI = 0x8833;
static const int GL_DRAW_BUFFER15_ATI = 0x8834;
static const int GL_TYPE_RGBA_FLOAT_ATI = 0x8820;
static const int GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835;
static const int GL_MODULATE_ADD_ATI = 0x8744;
static const int GL_MODULATE_SIGNED_ADD_ATI = 0x8745;
static const int GL_MODULATE_SUBTRACT_ATI = 0x8746;
static const int GL_RGBA_FLOAT32_ATI = 0x8814;
static const int GL_RGB_FLOAT32_ATI = 0x8815;
static const int GL_ALPHA_FLOAT32_ATI = 0x8816;
static const int GL_INTENSITY_FLOAT32_ATI = 0x8817;
static const int GL_LUMINANCE_FLOAT32_ATI = 0x8818;
static const int GL_LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819;
static const int GL_RGBA_FLOAT16_ATI = 0x881A;
static const int GL_RGB_FLOAT16_ATI = 0x881B;
static const int GL_ALPHA_FLOAT16_ATI = 0x881C;
static const int GL_INTENSITY_FLOAT16_ATI = 0x881D;
static const int GL_LUMINANCE_FLOAT16_ATI = 0x881E;
static const int GL_LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F;
static const int GL_FLOAT_R_NV = 0x8880;
static const int GL_FLOAT_RG_NV = 0x8881;
static const int GL_FLOAT_RGB_NV = 0x8882;
static const int GL_FLOAT_RGBA_NV = 0x8883;
static const int GL_FLOAT_R16_NV = 0x8884;
static const int GL_FLOAT_R32_NV = 0x8885;
static const int GL_FLOAT_RG16_NV = 0x8886;
static const int GL_FLOAT_RG32_NV = 0x8887;
static const int GL_FLOAT_RGB16_NV = 0x8888;
static const int GL_FLOAT_RGB32_NV = 0x8889;
static const int GL_FLOAT_RGBA16_NV = 0x888A;
static const int GL_FLOAT_RGBA32_NV = 0x888B;
static const int GL_TEXTURE_FLOAT_COMPONENTS_NV = 0x888C;
static const int GL_FLOAT_CLEAR_COLOR_VALUE_NV = 0x888D;
static const int GL_FLOAT_RGBA_MODE_NV = 0x888E;
static const int GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = 0x8868;
static const int GL_FRAGMENT_PROGRAM_NV = 0x8870;
static const int GL_MAX_TEXTURE_COORDS_NV = 0x8871;
static const int GL_MAX_TEXTURE_IMAGE_UNITS_NV = 0x8872;
static const int GL_FRAGMENT_PROGRAM_BINDING_NV = 0x8873;
static const int GL_PROGRAM_ERROR_STRING_NV = 0x8874;
static const int GL_HALF_FLOAT_NV = 0x140B;
static const int GL_WRITE_PIXEL_DATA_RANGE_NV = 0x8878;
static const int GL_READ_PIXEL_DATA_RANGE_NV = 0x8879;
static const int GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = 0x887A;
static const int GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = 0x887B;
static const int GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C;
static const int GL_READ_PIXEL_DATA_RANGE_POINTER_NV = 0x887D;
static const int GL_PRIMITIVE_RESTART_NV = 0x8558;
static const int GL_PRIMITIVE_RESTART_INDEX_NV = 0x8559;
static const int GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = 0x888F;
static const int GL_STENCIL_BACK_FUNC_ATI = 0x8800;
static const int GL_STENCIL_BACK_FAIL_ATI = 0x8801;
static const int GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802;
static const int GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803;
static const int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A;
static const int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B;
static const int GL_DEPTH_BOUNDS_TEST_EXT = 0x8890;
static const int GL_DEPTH_BOUNDS_EXT = 0x8891;
static const int GL_MIRROR_CLAMP_EXT = 0x8742;
static const int GL_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743;
static const int GL_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912;
static const int GL_BLEND_EQUATION_RGB_EXT = 0x8009;
static const int GL_BLEND_EQUATION_ALPHA_EXT = 0x883D;
static const int GL_PACK_INVERT_MESA = 0x8758;
static const int GL_UNSIGNED_SHORT_8_8_MESA = 0x85BA;
static const int GL_UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB;
static const int GL_YCBCR_MESA = 0x8757;
static const int GL_PIXEL_PACK_BUFFER_EXT = 0x88EB;
static const int GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC;
static const int GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED;
static const int GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF;
static const int GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = 0x88F4;
static const int GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5;
static const int GL_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6;
static const int GL_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7;
static const int GL_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8;
static const int GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506;
static const int GL_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8;
static const int GL_FRAMEBUFFER_BINDING_EXT = 0x8CA6;
static const int GL_RENDERBUFFER_BINDING_EXT = 0x8CA7;
static const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0;
static const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1;
static const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2;
static const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3;
static const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4;
static const int GL_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5;
static const int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6;
static const int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7;
static const int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9;
static const int GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA;
static const int GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB;
static const int GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC;
static const int GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD;
static const int GL_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF;
static const int GL_COLOR_ATTACHMENT0_EXT = 0x8CE0;
static const int GL_COLOR_ATTACHMENT1_EXT = 0x8CE1;
static const int GL_COLOR_ATTACHMENT2_EXT = 0x8CE2;
static const int GL_COLOR_ATTACHMENT3_EXT = 0x8CE3;
static const int GL_COLOR_ATTACHMENT4_EXT = 0x8CE4;
static const int GL_COLOR_ATTACHMENT5_EXT = 0x8CE5;
static const int GL_COLOR_ATTACHMENT6_EXT = 0x8CE6;
static const int GL_COLOR_ATTACHMENT7_EXT = 0x8CE7;
static const int GL_COLOR_ATTACHMENT8_EXT = 0x8CE8;
static const int GL_COLOR_ATTACHMENT9_EXT = 0x8CE9;
static const int GL_COLOR_ATTACHMENT10_EXT = 0x8CEA;
static const int GL_COLOR_ATTACHMENT11_EXT = 0x8CEB;
static const int GL_COLOR_ATTACHMENT12_EXT = 0x8CEC;
static const int GL_COLOR_ATTACHMENT13_EXT = 0x8CED;
static const int GL_COLOR_ATTACHMENT14_EXT = 0x8CEE;
static const int GL_COLOR_ATTACHMENT15_EXT = 0x8CEF;
static const int GL_DEPTH_ATTACHMENT_EXT = 0x8D00;
static const int GL_STENCIL_ATTACHMENT_EXT = 0x8D20;
static const int GL_FRAMEBUFFER_EXT = 0x8D40;
static const int GL_RENDERBUFFER_EXT = 0x8D41;
static const int GL_RENDERBUFFER_WIDTH_EXT = 0x8D42;
static const int GL_RENDERBUFFER_HEIGHT_EXT = 0x8D43;
static const int GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44;
static const int GL_STENCIL_INDEX1_EXT = 0x8D46;
static const int GL_STENCIL_INDEX4_EXT = 0x8D47;
static const int GL_STENCIL_INDEX8_EXT = 0x8D48;
static const int GL_STENCIL_INDEX16_EXT = 0x8D49;
static const int GL_RENDERBUFFER_RED_SIZE_EXT = 0x8D50;
static const int GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51;
static const int GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52;
static const int GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53;
static const int GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54;
static const int GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55;
static const int GL_DEPTH_STENCIL_EXT = 0x84F9;
static const int GL_UNSIGNED_INT_24_8_EXT = 0x84FA;
static const int GL_DEPTH24_STENCIL8_EXT = 0x88F0;
static const int GL_TEXTURE_STENCIL_SIZE_EXT = 0x88F1;
static const int GL_STENCIL_TAG_BITS_EXT = 0x88F2;
static const int GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3;
static const int GL_SRGB_EXT = 0x8C40;
static const int GL_SRGB8_EXT = 0x8C41;
static const int GL_SRGB_ALPHA_EXT = 0x8C42;
static const int GL_SRGB8_ALPHA8_EXT = 0x8C43;
static const int GL_SLUMINANCE_ALPHA_EXT = 0x8C44;
static const int GL_SLUMINANCE8_ALPHA8_EXT = 0x8C45;
static const int GL_SLUMINANCE_EXT = 0x8C46;
static const int GL_SLUMINANCE8_EXT = 0x8C47;
static const int GL_COMPRESSED_SRGB_EXT = 0x8C48;
static const int GL_COMPRESSED_SRGB_ALPHA_EXT = 0x8C49;
static const int GL_COMPRESSED_SLUMINANCE_EXT = 0x8C4A;
static const int GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B;
static const int GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C;
static const int GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D;
static const int GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E;
static const int GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F;
static const int GL_READ_FRAMEBUFFER_EXT = 0x8CA8;
static const int GL_DRAW_FRAMEBUFFER_EXT = 0x8CA9;
static const int GL_DRAW_FRAMEBUFFER_BINDING_EXT = GL_FRAMEBUFFER_BINDING_EXT;
static const int GL_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA;
static const int GL_RENDERBUFFER_SAMPLES_EXT = 0x8CAB;
static const int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56;
static const int GL_MAX_SAMPLES_EXT = 0x8D57;
static const int GL_TEXTURE_1D_STACK_MESAX = 0x8759;
static const int GL_TEXTURE_2D_STACK_MESAX = 0x875A;
static const int GL_PROXY_TEXTURE_1D_STACK_MESAX = 0x875B;
static const int GL_PROXY_TEXTURE_2D_STACK_MESAX = 0x875C;
static const int GL_TEXTURE_1D_STACK_BINDING_MESAX = 0x875D;
static const int GL_TEXTURE_2D_STACK_BINDING_MESAX = 0x875E;
static const int GL_TIME_ELAPSED_EXT = 0x88BF;
static const int GL_BUFFER_SERIALIZED_MODIFY_APPLE = 0x8A12;
static const int GL_BUFFER_FLUSHING_UNMAP_APPLE = 0x8A13;
static const int GL_MIN_PROGRAM_TEXEL_OFFSET_NV = 0x8904;
static const int GL_MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905;
static const int GL_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906;
static const int GL_PROGRAM_RESULT_COMPONENTS_NV = 0x8907;
static const int GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908;
static const int GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909;
static const int GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5;
static const int GL_MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6;
static const int GL_LINES_ADJACENCY_EXT = 0x000A;
static const int GL_LINE_STRIP_ADJACENCY_EXT = 0x000B;
static const int GL_TRIANGLES_ADJACENCY_EXT = 0x000C;
static const int GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D;
static const int GL_GEOMETRY_PROGRAM_NV = 0x8C26;
static const int GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27;
static const int GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28;
static const int GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA;
static const int GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB;
static const int GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC;
static const int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29;
static const int GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7;
static const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8;
static const int GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9;
static const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4;
static const int GL_PROGRAM_POINT_SIZE_EXT = 0x8642;
static const int GL_GEOMETRY_SHADER_EXT = 0x8DD9;
static const int GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD;
static const int GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE;
static const int GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B;
static const int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF;
static const int GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0;
static const int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1;
static const int GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD;
static const int GL_SAMPLER_1D_ARRAY_EXT = 0x8DC0;
static const int GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1;
static const int GL_SAMPLER_BUFFER_EXT = 0x8DC2;
static const int GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3;
static const int GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4;
static const int GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5;
static const int GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6;
static const int GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7;
static const int GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8;
static const int GL_INT_SAMPLER_1D_EXT = 0x8DC9;
static const int GL_INT_SAMPLER_2D_EXT = 0x8DCA;
static const int GL_INT_SAMPLER_3D_EXT = 0x8DCB;
static const int GL_INT_SAMPLER_CUBE_EXT = 0x8DCC;
static const int GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD;
static const int GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE;
static const int GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF;
static const int GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0;
static const int GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1;
static const int GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2;
static const int GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3;
static const int GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4;
static const int GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5;
static const int GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6;
static const int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7;
static const int GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8;
static const int GL_R11F_G11F_B10F_EXT = 0x8C3A;
static const int GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B;
static const int GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C;
static const int GL_TEXTURE_1D_ARRAY_EXT = 0x8C18;
static const int GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19;
static const int GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A;
static const int GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B;
static const int GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C;
static const int GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D;
static const int GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF;
static const int GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E;
static const int GL_TEXTURE_BUFFER_EXT = 0x8C2A;
static const int GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B;
static const int GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C;
static const int GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D;
static const int GL_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E;
static const int GL_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70;
static const int GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71;
static const int GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72;
static const int GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73;
static const int GL_COMPRESSED_RED_RGTC1_EXT = 0x8DBB;
static const int GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC;
static const int GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD;
static const int GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE;
static const int GL_RGB9_E5_EXT = 0x8C3D;
static const int GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E;
static const int GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F;
static const int GL_DEPTH_COMPONENT32F_NV = 0x8DAB;
static const int GL_DEPTH32F_STENCIL8_NV = 0x8DAC;
static const int GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD;
static const int GL_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF;
static const int GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = 0x8CAB;
static const int GL_RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10;
static const int GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11;
static const int GL_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12;
static const int GL_FRAMEBUFFER_SRGB_EXT = 0x8DB9;
static const int GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA;
static const int GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0;
static const int GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1;
static const int GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA2;
static const int GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3;
static const int GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4;
static const int GL_BACK_PRIMARY_COLOR_NV = 0x8C77;
static const int GL_BACK_SECONDARY_COLOR_NV = 0x8C78;
static const int GL_TEXTURE_COORD_NV = 0x8C79;
static const int GL_CLIP_DISTANCE_NV = 0x8C7A;
static const int GL_VERTEX_ID_NV = 0x8C7B;
static const int GL_PRIMITIVE_ID_NV = 0x8C7C;
static const int GL_GENERIC_ATTRIB_NV = 0x8C7D;
static const int GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F;
static const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80;
static const int GL_ACTIVE_VARYINGS_NV = 0x8C81;
static const int GL_ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82;
static const int GL_TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85;
static const int GL_TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86;
static const int GL_PRIMITIVES_GENERATED_NV = 0x8C87;
static const int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88;
static const int GL_RASTERIZER_DISCARD_NV = 0x8C89;
static const int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV = 0x8C8A;
static const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B;
static const int GL_INTERLEAVED_ATTRIBS_NV = 0x8C8C;
static const int GL_SEPARATE_ATTRIBS_NV = 0x8C8D;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F;
static const int GL_LAYER_NV = 0x8DAA;
static const int GL_NEXT_BUFFER_NV = -2;
static const int GL_SKIP_COMPONENTS4_NV = -3;
static const int GL_SKIP_COMPONENTS3_NV = -4;
static const int GL_SKIP_COMPONENTS2_NV = -5;
static const int GL_SKIP_COMPONENTS1_NV = -6;
static const int GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2;
static const int GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3;
static const int GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4;
static const int GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED;
static const int GL_UNIFORM_BUFFER_EXT = 0x8DEE;
static const int GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF;
static const int GL_RGBA32UI_EXT = 0x8D70;
static const int GL_RGB32UI_EXT = 0x8D71;
static const int GL_ALPHA32UI_EXT = 0x8D72;
static const int GL_INTENSITY32UI_EXT = 0x8D73;
static const int GL_LUMINANCE32UI_EXT = 0x8D74;
static const int GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75;
static const int GL_RGBA16UI_EXT = 0x8D76;
static const int GL_RGB16UI_EXT = 0x8D77;
static const int GL_ALPHA16UI_EXT = 0x8D78;
static const int GL_INTENSITY16UI_EXT = 0x8D79;
static const int GL_LUMINANCE16UI_EXT = 0x8D7A;
static const int GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B;
static const int GL_RGBA8UI_EXT = 0x8D7C;
static const int GL_RGB8UI_EXT = 0x8D7D;
static const int GL_ALPHA8UI_EXT = 0x8D7E;
static const int GL_INTENSITY8UI_EXT = 0x8D7F;
static const int GL_LUMINANCE8UI_EXT = 0x8D80;
static const int GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81;
static const int GL_RGBA32I_EXT = 0x8D82;
static const int GL_RGB32I_EXT = 0x8D83;
static const int GL_ALPHA32I_EXT = 0x8D84;
static const int GL_INTENSITY32I_EXT = 0x8D85;
static const int GL_LUMINANCE32I_EXT = 0x8D86;
static const int GL_LUMINANCE_ALPHA32I_EXT = 0x8D87;
static const int GL_RGBA16I_EXT = 0x8D88;
static const int GL_RGB16I_EXT = 0x8D89;
static const int GL_ALPHA16I_EXT = 0x8D8A;
static const int GL_INTENSITY16I_EXT = 0x8D8B;
static const int GL_LUMINANCE16I_EXT = 0x8D8C;
static const int GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D;
static const int GL_RGBA8I_EXT = 0x8D8E;
static const int GL_RGB8I_EXT = 0x8D8F;
static const int GL_ALPHA8I_EXT = 0x8D90;
static const int GL_INTENSITY8I_EXT = 0x8D91;
static const int GL_LUMINANCE8I_EXT = 0x8D92;
static const int GL_LUMINANCE_ALPHA8I_EXT = 0x8D93;
static const int GL_RED_INTEGER_EXT = 0x8D94;
static const int GL_GREEN_INTEGER_EXT = 0x8D95;
static const int GL_BLUE_INTEGER_EXT = 0x8D96;
static const int GL_ALPHA_INTEGER_EXT = 0x8D97;
static const int GL_RGB_INTEGER_EXT = 0x8D98;
static const int GL_RGBA_INTEGER_EXT = 0x8D99;
static const int GL_BGR_INTEGER_EXT = 0x8D9A;
static const int GL_BGRA_INTEGER_EXT = 0x8D9B;
static const int GL_LUMINANCE_INTEGER_EXT = 0x8D9C;
static const int GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D;
static const int GL_RGBA_INTEGER_MODE_EXT = 0x8D9E;
static const int GL_QUERY_WAIT_NV = 0x8E13;
static const int GL_QUERY_NO_WAIT_NV = 0x8E14;
static const int GL_QUERY_BY_REGION_WAIT_NV = 0x8E15;
static const int GL_QUERY_BY_REGION_NO_WAIT_NV = 0x8E16;
static const int GL_FRAME_NV = 0x8E26;
static const int GL_FIELDS_NV = 0x8E27;
static const int GL_CURRENT_TIME_NV = 0x8E28;
static const int GL_NUM_FILL_STREAMS_NV = 0x8E29;
static const int GL_PRESENT_TIME_NV = 0x8E2A;
static const int GL_PRESENT_DURATION_NV = 0x8E2B;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F;
static const int GL_INTERLEAVED_ATTRIBS_EXT = 0x8C8C;
static const int GL_SEPARATE_ATTRIBS_EXT = 0x8C8D;
static const int GL_PRIMITIVES_GENERATED_EXT = 0x8C87;
static const int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88;
static const int GL_RASTERIZER_DISCARD_EXT = 0x8C89;
static const int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A;
static const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B;
static const int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80;
static const int GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F;
static const int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76;
static const int GL_PROGRAM_MATRIX_EXT = 0x8E2D;
static const int GL_TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E;
static const int GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F;
static const int GL_TEXTURE_SWIZZLE_R_EXT = 0x8E42;
static const int GL_TEXTURE_SWIZZLE_G_EXT = 0x8E43;
static const int GL_TEXTURE_SWIZZLE_B_EXT = 0x8E44;
static const int GL_TEXTURE_SWIZZLE_A_EXT = 0x8E45;
static const int GL_TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46;
static const int GL_SAMPLE_POSITION_NV = 0x8E50;
static const int GL_SAMPLE_MASK_NV = 0x8E51;
static const int GL_SAMPLE_MASK_VALUE_NV = 0x8E52;
static const int GL_TEXTURE_BINDING_RENDERBUFFER_NV = 0x8E53;
static const int GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = 0x8E54;
static const int GL_TEXTURE_RENDERBUFFER_NV = 0x8E55;
static const int GL_SAMPLER_RENDERBUFFER_NV = 0x8E56;
static const int GL_INT_SAMPLER_RENDERBUFFER_NV = 0x8E57;
static const int GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58;
static const int GL_MAX_SAMPLE_MASK_WORDS_NV = 0x8E59;
static const int GL_TRANSFORM_FEEDBACK_NV = 0x8E22;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = 0x8E23;
static const int GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = 0x8E24;
static const int GL_TRANSFORM_FEEDBACK_BINDING_NV = 0x8E25;
static const int GL_VBO_FREE_MEMORY_ATI = 0x87FB;
static const int GL_TEXTURE_FREE_MEMORY_ATI = 0x87FC;
static const int GL_RENDERBUFFER_FREE_MEMORY_ATI = 0x87FD;
static const int GL_COUNTER_TYPE_AMD = 0x8BC0;
static const int GL_COUNTER_RANGE_AMD = 0x8BC1;
static const int GL_UNSIGNED_INT64_AMD = 0x8BC2;
static const int GL_PERCENTAGE_AMD = 0x8BC3;
static const int GL_PERFMON_RESULT_AVAILABLE_AMD = 0x8BC4;
static const int GL_PERFMON_RESULT_SIZE_AMD = 0x8BC5;
static const int GL_PERFMON_RESULT_AMD = 0x8BC6;
static const int GL_SAMPLER_BUFFER_AMD = 0x9001;
static const int GL_INT_SAMPLER_BUFFER_AMD = 0x9002;
static const int GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = 0x9003;
static const int GL_TESSELLATION_MODE_AMD = 0x9004;
static const int GL_TESSELLATION_FACTOR_AMD = 0x9005;
static const int GL_DISCRETE_AMD = 0x9006;
static const int GL_CONTINUOUS_AMD = 0x9007;
static const int GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C;
static const int GL_FIRST_VERTEX_CONVENTION_EXT = 0x8E4D;
static const int GL_LAST_VERTEX_CONVENTION_EXT = 0x8E4E;
static const int GL_PROVOKING_VERTEX_EXT = 0x8E4F;
static const int GL_ALPHA_SNORM = 0x9010;
static const int GL_LUMINANCE_SNORM = 0x9011;
static const int GL_LUMINANCE_ALPHA_SNORM = 0x9012;
static const int GL_INTENSITY_SNORM = 0x9013;
static const int GL_ALPHA8_SNORM = 0x9014;
static const int GL_LUMINANCE8_SNORM = 0x9015;
static const int GL_LUMINANCE8_ALPHA8_SNORM = 0x9016;
static const int GL_INTENSITY8_SNORM = 0x9017;
static const int GL_ALPHA16_SNORM = 0x9018;
static const int GL_LUMINANCE16_SNORM = 0x9019;
static const int GL_LUMINANCE16_ALPHA16_SNORM = 0x901A;
static const int GL_INTENSITY16_SNORM = 0x901B;
static const int GL_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7;
static const int GL_TEXTURE_RANGE_POINTER_APPLE = 0x85B8;
static const int GL_TEXTURE_STORAGE_HINT_APPLE = 0x85BC;
static const int GL_STORAGE_PRIVATE_APPLE = 0x85BD;
static const int GL_HALF_APPLE = 0x140B;
static const int GL_RGBA_FLOAT32_APPLE = 0x8814;
static const int GL_RGB_FLOAT32_APPLE = 0x8815;
static const int GL_ALPHA_FLOAT32_APPLE = 0x8816;
static const int GL_INTENSITY_FLOAT32_APPLE = 0x8817;
static const int GL_LUMINANCE_FLOAT32_APPLE = 0x8818;
static const int GL_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819;
static const int GL_RGBA_FLOAT16_APPLE = 0x881A;
static const int GL_RGB_FLOAT16_APPLE = 0x881B;
static const int GL_ALPHA_FLOAT16_APPLE = 0x881C;
static const int GL_INTENSITY_FLOAT16_APPLE = 0x881D;
static const int GL_LUMINANCE_FLOAT16_APPLE = 0x881E;
static const int GL_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F;
static const int GL_COLOR_FLOAT_APPLE = 0x8A0F;
static const int GL_VERTEX_ATTRIB_MAP1_APPLE = 0x8A00;
static const int GL_VERTEX_ATTRIB_MAP2_APPLE = 0x8A01;
static const int GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02;
static const int GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03;
static const int GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04;
static const int GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05;
static const int GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06;
static const int GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07;
static const int GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08;
static const int GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09;
static const int GL_AUX_DEPTH_STENCIL_APPLE = 0x8A14;
static const int GL_BUFFER_OBJECT_APPLE = 0x85B3;
static const int GL_RELEASED_APPLE = 0x8A19;
static const int GL_VOLATILE_APPLE = 0x8A1A;
static const int GL_RETAINED_APPLE = 0x8A1B;
static const int GL_UNDEFINED_APPLE = 0x8A1C;
static const int GL_PURGEABLE_APPLE = 0x8A1D;
static const int GL_PACK_ROW_BYTES_APPLE = 0x8A15;
static const int GL_UNPACK_ROW_BYTES_APPLE = 0x8A16;
static const int GL_RGB_422_APPLE = 0x8A1F;
static const int GL_VIDEO_BUFFER_NV = 0x9020;
static const int GL_VIDEO_BUFFER_BINDING_NV = 0x9021;
static const int GL_FIELD_UPPER_NV = 0x9022;
static const int GL_FIELD_LOWER_NV = 0x9023;
static const int GL_NUM_VIDEO_CAPTURE_STREAMS_NV = 0x9024;
static const int GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = 0x9025;
static const int GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = 0x9026;
static const int GL_LAST_VIDEO_CAPTURE_STATUS_NV = 0x9027;
static const int GL_VIDEO_BUFFER_PITCH_NV = 0x9028;
static const int GL_VIDEO_COLOR_CONVERSION_MATRIX_NV = 0x9029;
static const int GL_VIDEO_COLOR_CONVERSION_MAX_NV = 0x902A;
static const int GL_VIDEO_COLOR_CONVERSION_MIN_NV = 0x902B;
static const int GL_VIDEO_COLOR_CONVERSION_OFFSET_NV = 0x902C;
static const int GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV = 0x902D;
static const int GL_PARTIAL_SUCCESS_NV = 0x902E;
static const int GL_SUCCESS_NV = 0x902F;
static const int GL_FAILURE_NV = 0x9030;
static const int GL_YCBYCR8_422_NV = 0x9031;
static const int GL_YCBAYCR8A_4224_NV = 0x9032;
static const int GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = 0x9033;
static const int GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = 0x9034;
static const int GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = 0x9035;
static const int GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = 0x9036;
static const int GL_Z4Y12Z4CB12Z4CR12_444_NV = 0x9037;
static const int GL_VIDEO_CAPTURE_FRAME_WIDTH_NV = 0x9038;
static const int GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV = 0x9039;
static const int GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = 0x903A;
static const int GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = 0x903B;
static const int GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = 0x903C;
static const int GL_ACTIVE_PROGRAM_EXT = 0x8B8D;
static const int GL_BUFFER_GPU_ADDRESS_NV = 0x8F1D;
static const int GL_GPU_ADDRESS_NV = 0x8F34;
static const int GL_MAX_SHADER_BUFFER_ADDRESS_NV = 0x8F35;
static const int GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = 0x8F1E;
static const int GL_ELEMENT_ARRAY_UNIFIED_NV = 0x8F1F;
static const int GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = 0x8F20;
static const int GL_VERTEX_ARRAY_ADDRESS_NV = 0x8F21;
static const int GL_NORMAL_ARRAY_ADDRESS_NV = 0x8F22;
static const int GL_COLOR_ARRAY_ADDRESS_NV = 0x8F23;
static const int GL_INDEX_ARRAY_ADDRESS_NV = 0x8F24;
static const int GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = 0x8F25;
static const int GL_EDGE_FLAG_ARRAY_ADDRESS_NV = 0x8F26;
static const int GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = 0x8F27;
static const int GL_FOG_COORD_ARRAY_ADDRESS_NV = 0x8F28;
static const int GL_ELEMENT_ARRAY_ADDRESS_NV = 0x8F29;
static const int GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = 0x8F2A;
static const int GL_VERTEX_ARRAY_LENGTH_NV = 0x8F2B;
static const int GL_NORMAL_ARRAY_LENGTH_NV = 0x8F2C;
static const int GL_COLOR_ARRAY_LENGTH_NV = 0x8F2D;
static const int GL_INDEX_ARRAY_LENGTH_NV = 0x8F2E;
static const int GL_TEXTURE_COORD_ARRAY_LENGTH_NV = 0x8F2F;
static const int GL_EDGE_FLAG_ARRAY_LENGTH_NV = 0x8F30;
static const int GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = 0x8F31;
static const int GL_FOG_COORD_ARRAY_LENGTH_NV = 0x8F32;
static const int GL_ELEMENT_ARRAY_LENGTH_NV = 0x8F33;
static const int GL_DRAW_INDIRECT_UNIFIED_NV = 0x8F40;
static const int GL_DRAW_INDIRECT_ADDRESS_NV = 0x8F41;
static const int GL_DRAW_INDIRECT_LENGTH_NV = 0x8F42;
static const int GL_MAX_IMAGE_UNITS_EXT = 0x8F38;
static const int GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = 0x8F39;
static const int GL_IMAGE_BINDING_NAME_EXT = 0x8F3A;
static const int GL_IMAGE_BINDING_LEVEL_EXT = 0x8F3B;
static const int GL_IMAGE_BINDING_LAYERED_EXT = 0x8F3C;
static const int GL_IMAGE_BINDING_LAYER_EXT = 0x8F3D;
static const int GL_IMAGE_BINDING_ACCESS_EXT = 0x8F3E;
static const int GL_IMAGE_1D_EXT = 0x904C;
static const int GL_IMAGE_2D_EXT = 0x904D;
static const int GL_IMAGE_3D_EXT = 0x904E;
static const int GL_IMAGE_2D_RECT_EXT = 0x904F;
static const int GL_IMAGE_CUBE_EXT = 0x9050;
static const int GL_IMAGE_BUFFER_EXT = 0x9051;
static const int GL_IMAGE_1D_ARRAY_EXT = 0x9052;
static const int GL_IMAGE_2D_ARRAY_EXT = 0x9053;
static const int GL_IMAGE_CUBE_MAP_ARRAY_EXT = 0x9054;
static const int GL_IMAGE_2D_MULTISAMPLE_EXT = 0x9055;
static const int GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9056;
static const int GL_INT_IMAGE_1D_EXT = 0x9057;
static const int GL_INT_IMAGE_2D_EXT = 0x9058;
static const int GL_INT_IMAGE_3D_EXT = 0x9059;
static const int GL_INT_IMAGE_2D_RECT_EXT = 0x905A;
static const int GL_INT_IMAGE_CUBE_EXT = 0x905B;
static const int GL_INT_IMAGE_BUFFER_EXT = 0x905C;
static const int GL_INT_IMAGE_1D_ARRAY_EXT = 0x905D;
static const int GL_INT_IMAGE_2D_ARRAY_EXT = 0x905E;
static const int GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x905F;
static const int GL_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x9060;
static const int GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9061;
static const int GL_UNSIGNED_INT_IMAGE_1D_EXT = 0x9062;
static const int GL_UNSIGNED_INT_IMAGE_2D_EXT = 0x9063;
static const int GL_UNSIGNED_INT_IMAGE_3D_EXT = 0x9064;
static const int GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = 0x9065;
static const int GL_UNSIGNED_INT_IMAGE_CUBE_EXT = 0x9066;
static const int GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = 0x9067;
static const int GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = 0x9068;
static const int GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = 0x9069;
static const int GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x906A;
static const int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x906B;
static const int GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C;
static const int GL_MAX_IMAGE_SAMPLES_EXT = 0x906D;
static const int GL_IMAGE_BINDING_FORMAT_EXT = 0x906E;
static const int GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = 0x00000001;
static const int GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = 0x00000002;
static const int GL_UNIFORM_BARRIER_BIT_EXT = 0x00000004;
static const int GL_TEXTURE_FETCH_BARRIER_BIT_EXT = 0x00000008;
static const int GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = 0x00000020;
static const int GL_COMMAND_BARRIER_BIT_EXT = 0x00000040;
static const int GL_PIXEL_BUFFER_BARRIER_BIT_EXT = 0x00000080;
static const int GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = 0x00000100;
static const int GL_BUFFER_UPDATE_BARRIER_BIT_EXT = 0x00000200;
static const int GL_FRAMEBUFFER_BARRIER_BIT_EXT = 0x00000400;
static const int GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = 0x00000800;
static const int GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = 0x00001000;
static const int GL_ALL_BARRIER_BITS_EXT = 0xFFFFFFFF;
static const int GL_DOUBLE_VEC2_EXT = 0x8FFC;
static const int GL_DOUBLE_VEC3_EXT = 0x8FFD;
static const int GL_DOUBLE_VEC4_EXT = 0x8FFE;
static const int GL_DOUBLE_MAT2_EXT = 0x8F46;
static const int GL_DOUBLE_MAT3_EXT = 0x8F47;
static const int GL_DOUBLE_MAT4_EXT = 0x8F48;
static const int GL_DOUBLE_MAT2x3_EXT = 0x8F49;
static const int GL_DOUBLE_MAT2x4_EXT = 0x8F4A;
static const int GL_DOUBLE_MAT3x2_EXT = 0x8F4B;
static const int GL_DOUBLE_MAT3x4_EXT = 0x8F4C;
static const int GL_DOUBLE_MAT4x2_EXT = 0x8F4D;
static const int GL_DOUBLE_MAT4x3_EXT = 0x8F4E;
static const int GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = 0x8E5A;
static const int GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5B;
static const int GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5C;
static const int GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = 0x8E5D;
static const int GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5E;
static const int GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5F;
static const int GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = 0x8F44;
static const int GL_MAX_PROGRAM_SUBROUTINE_NUM_NV = 0x8F45;
static const int GL_INT64_NV = 0x140E;
static const int GL_UNSIGNED_INT64_NV = 0x140F;
static const int GL_INT8_NV = 0x8FE0;
static const int GL_INT8_VEC2_NV = 0x8FE1;
static const int GL_INT8_VEC3_NV = 0x8FE2;
static const int GL_INT8_VEC4_NV = 0x8FE3;
static const int GL_INT16_NV = 0x8FE4;
static const int GL_INT16_VEC2_NV = 0x8FE5;
static const int GL_INT16_VEC3_NV = 0x8FE6;
static const int GL_INT16_VEC4_NV = 0x8FE7;
static const int GL_INT64_VEC2_NV = 0x8FE9;
static const int GL_INT64_VEC3_NV = 0x8FEA;
static const int GL_INT64_VEC4_NV = 0x8FEB;
static const int GL_UNSIGNED_INT8_NV = 0x8FEC;
static const int GL_UNSIGNED_INT8_VEC2_NV = 0x8FED;
static const int GL_UNSIGNED_INT8_VEC3_NV = 0x8FEE;
static const int GL_UNSIGNED_INT8_VEC4_NV = 0x8FEF;
static const int GL_UNSIGNED_INT16_NV = 0x8FF0;
static const int GL_UNSIGNED_INT16_VEC2_NV = 0x8FF1;
static const int GL_UNSIGNED_INT16_VEC3_NV = 0x8FF2;
static const int GL_UNSIGNED_INT16_VEC4_NV = 0x8FF3;
static const int GL_UNSIGNED_INT64_VEC2_NV = 0x8FF5;
static const int GL_UNSIGNED_INT64_VEC3_NV = 0x8FF6;
static const int GL_UNSIGNED_INT64_VEC4_NV = 0x8FF7;
static const int GL_FLOAT16_NV = 0x8FF8;
static const int GL_FLOAT16_VEC2_NV = 0x8FF9;
static const int GL_FLOAT16_VEC3_NV = 0x8FFA;
static const int GL_FLOAT16_VEC4_NV = 0x8FFB;
static const int GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = 0x00000010;
static const int GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = 0x86D8;
static const int GL_TESS_CONTROL_PROGRAM_NV = 0x891E;
static const int GL_TESS_EVALUATION_PROGRAM_NV = 0x891F;
static const int GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = 0x8C74;
static const int GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = 0x8C75;
static const int GL_COVERAGE_SAMPLES_NV = 0x80A9;
static const int GL_COLOR_SAMPLES_NV = 0x8E20;
static const int GL_DATA_BUFFER_AMD = 0x9151;
static const int GL_PERFORMANCE_MONITOR_AMD = 0x9152;
static const int GL_QUERY_OBJECT_AMD = 0x9153;
static const int GL_VERTEX_ARRAY_OBJECT_AMD = 0x9154;
static const int GL_SAMPLER_OBJECT_AMD = 0x9155;
static const int GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = 0x9144;
static const int GL_DEBUG_LOGGED_MESSAGES_AMD = 0x9145;
static const int GL_DEBUG_SEVERITY_HIGH_AMD = 0x9146;
static const int GL_DEBUG_SEVERITY_MEDIUM_AMD = 0x9147;
static const int GL_DEBUG_SEVERITY_LOW_AMD = 0x9148;
static const int GL_DEBUG_CATEGORY_API_ERROR_AMD = 0x9149;
static const int GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = 0x914A;
static const int GL_DEBUG_CATEGORY_DEPRECATION_AMD = 0x914B;
static const int GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = 0x914C;
static const int GL_DEBUG_CATEGORY_PERFORMANCE_AMD = 0x914D;
static const int GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = 0x914E;
static const int GL_DEBUG_CATEGORY_APPLICATION_AMD = 0x914F;
static const int GL_DEBUG_CATEGORY_OTHER_AMD = 0x9150;
static const int GL_SURFACE_STATE_NV = 0x86EB;
static const int GL_SURFACE_REGISTERED_NV = 0x86FD;
static const int GL_SURFACE_MAPPED_NV = 0x8700;
static const int GL_WRITE_DISCARD_NV = 0x88BE;
static const int GL_DEPTH_CLAMP_NEAR_AMD = 0x901E;
static const int GL_DEPTH_CLAMP_FAR_AMD = 0x901F;
static const int GL_TEXTURE_SRGB_DECODE_EXT = 0x8A48;
static const int GL_DECODE_EXT = 0x8A49;
static const int GL_SKIP_DECODE_EXT = 0x8A4A;
static const int GL_TEXTURE_COVERAGE_SAMPLES_NV = 0x9045;
static const int GL_TEXTURE_COLOR_SAMPLES_NV = 0x9046;
static const int GL_FACTOR_MIN_AMD = 0x901C;
static const int GL_FACTOR_MAX_AMD = 0x901D;
static const int GL_SUBSAMPLE_DISTANCE_AMD = 0x883F;
static const int GL_SYNC_X11_FENCE_EXT = 0x90E1;
static const int GL_SCALED_RESOLVE_FASTEST_EXT = 0x90BA;
static const int GL_SCALED_RESOLVE_NICEST_EXT = 0x90BB;
static const int GL_PATH_FORMAT_SVG_NV = 0x9070;
static const int GL_PATH_FORMAT_PS_NV = 0x9071;
static const int GL_STANDARD_FONT_NAME_NV = 0x9072;
static const int GL_SYSTEM_FONT_NAME_NV = 0x9073;
static const int GL_FILE_NAME_NV = 0x9074;
static const int GL_PATH_STROKE_WIDTH_NV = 0x9075;
static const int GL_PATH_END_CAPS_NV = 0x9076;
static const int GL_PATH_INITIAL_END_CAP_NV = 0x9077;
static const int GL_PATH_TERMINAL_END_CAP_NV = 0x9078;
static const int GL_PATH_JOIN_STYLE_NV = 0x9079;
static const int GL_PATH_MITER_LIMIT_NV = 0x907A;
static const int GL_PATH_DASH_CAPS_NV = 0x907B;
static const int GL_PATH_INITIAL_DASH_CAP_NV = 0x907C;
static const int GL_PATH_TERMINAL_DASH_CAP_NV = 0x907D;
static const int GL_PATH_DASH_OFFSET_NV = 0x907E;
static const int GL_PATH_CLIENT_LENGTH_NV = 0x907F;
static const int GL_PATH_FILL_MODE_NV = 0x9080;
static const int GL_PATH_FILL_MASK_NV = 0x9081;
static const int GL_PATH_FILL_COVER_MODE_NV = 0x9082;
static const int GL_PATH_STROKE_COVER_MODE_NV = 0x9083;
static const int GL_PATH_STROKE_MASK_NV = 0x9084;
static const int GL_PATH_SAMPLE_QUALITY_NV = 0x9085;
static const int GL_PATH_STROKE_BOUND_NV = 0x9086;
static const int GL_PATH_STROKE_OVERSAMPLE_COUNT_NV = 0x9087;
static const int GL_COUNT_UP_NV = 0x9088;
static const int GL_COUNT_DOWN_NV = 0x9089;
static const int GL_PATH_OBJECT_BOUNDING_BOX_NV = 0x908A;
static const int GL_CONVEX_HULL_NV = 0x908B;
static const int GL_MULTI_HULLS_NV = 0x908C;
static const int GL_BOUNDING_BOX_NV = 0x908D;
static const int GL_TRANSLATE_X_NV = 0x908E;
static const int GL_TRANSLATE_Y_NV = 0x908F;
static const int GL_TRANSLATE_2D_NV = 0x9090;
static const int GL_TRANSLATE_3D_NV = 0x9091;
static const int GL_AFFINE_2D_NV = 0x9092;
static const int GL_PROJECTIVE_2D_NV = 0x9093;
static const int GL_AFFINE_3D_NV = 0x9094;
static const int GL_PROJECTIVE_3D_NV = 0x9095;
static const int GL_TRANSPOSE_AFFINE_2D_NV = 0x9096;
static const int GL_TRANSPOSE_PROJECTIVE_2D_NV = 0x9097;
static const int GL_TRANSPOSE_AFFINE_3D_NV = 0x9098;
static const int GL_TRANSPOSE_PROJECTIVE_3D_NV = 0x9099;
static const int GL_UTF8_NV = 0x909A;
static const int GL_UTF16_NV = 0x909B;
static const int GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = 0x909C;
static const int GL_PATH_COMMAND_COUNT_NV = 0x909D;
static const int GL_PATH_COORD_COUNT_NV = 0x909E;
static const int GL_PATH_DASH_ARRAY_COUNT_NV = 0x909F;
static const int GL_PATH_COMPUTED_LENGTH_NV = 0x90A0;
static const int GL_PATH_FILL_BOUNDING_BOX_NV = 0x90A1;
static const int GL_PATH_STROKE_BOUNDING_BOX_NV = 0x90A2;
static const int GL_SQUARE_NV = 0x90A3;
static const int GL_ROUND_NV = 0x90A4;
static const int GL_TRIANGULAR_NV = 0x90A5;
static const int GL_BEVEL_NV = 0x90A6;
static const int GL_MITER_REVERT_NV = 0x90A7;
static const int GL_MITER_TRUNCATE_NV = 0x90A8;
static const int GL_SKIP_MISSING_GLYPH_NV = 0x90A9;
static const int GL_USE_MISSING_GLYPH_NV = 0x90AA;
static const int GL_PATH_ERROR_POSITION_NV = 0x90AB;
static const int GL_PATH_FOG_GEN_MODE_NV = 0x90AC;
static const int GL_ACCUM_ADJACENT_PAIRS_NV = 0x90AD;
static const int GL_ADJACENT_PAIRS_NV = 0x90AE;
static const int GL_FIRST_TO_REST_NV = 0x90AF;
static const int GL_PATH_GEN_MODE_NV = 0x90B0;
static const int GL_PATH_GEN_COEFF_NV = 0x90B1;
static const int GL_PATH_GEN_COLOR_FORMAT_NV = 0x90B2;
static const int GL_PATH_GEN_COMPONENTS_NV = 0x90B3;
static const int GL_PATH_STENCIL_FUNC_NV = 0x90B7;
static const int GL_PATH_STENCIL_REF_NV = 0x90B8;
static const int GL_PATH_STENCIL_VALUE_MASK_NV = 0x90B9;
static const int GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = 0x90BD;
static const int GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = 0x90BE;
static const int GL_PATH_COVER_DEPTH_FUNC_NV = 0x90BF;
static const int GL_PATH_DASH_OFFSET_RESET_NV = 0x90B4;
static const int GL_MOVE_TO_RESETS_NV = 0x90B5;
static const int GL_MOVE_TO_CONTINUES_NV = 0x90B6;
static const int GL_CLOSE_PATH_NV = 0x00;
static const int GL_MOVE_TO_NV = 0x02;
static const int GL_RELATIVE_MOVE_TO_NV = 0x03;
static const int GL_LINE_TO_NV = 0x04;
static const int GL_RELATIVE_LINE_TO_NV = 0x05;
static const int GL_HORIZONTAL_LINE_TO_NV = 0x06;
static const int GL_RELATIVE_HORIZONTAL_LINE_TO_NV = 0x07;
static const int GL_VERTICAL_LINE_TO_NV = 0x08;
static const int GL_RELATIVE_VERTICAL_LINE_TO_NV = 0x09;
static const int GL_QUADRATIC_CURVE_TO_NV = 0x0A;
static const int GL_RELATIVE_QUADRATIC_CURVE_TO_NV = 0x0B;
static const int GL_CUBIC_CURVE_TO_NV = 0x0C;
static const int GL_RELATIVE_CUBIC_CURVE_TO_NV = 0x0D;
static const int GL_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0E;
static const int GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0F;
static const int GL_SMOOTH_CUBIC_CURVE_TO_NV = 0x10;
static const int GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = 0x11;
static const int GL_SMALL_CCW_ARC_TO_NV = 0x12;
static const int GL_RELATIVE_SMALL_CCW_ARC_TO_NV = 0x13;
static const int GL_SMALL_CW_ARC_TO_NV = 0x14;
static const int GL_RELATIVE_SMALL_CW_ARC_TO_NV = 0x15;
static const int GL_LARGE_CCW_ARC_TO_NV = 0x16;
static const int GL_RELATIVE_LARGE_CCW_ARC_TO_NV = 0x17;
static const int GL_LARGE_CW_ARC_TO_NV = 0x18;
static const int GL_RELATIVE_LARGE_CW_ARC_TO_NV = 0x19;
static const int GL_RESTART_PATH_NV = 0xF0;
static const int GL_DUP_FIRST_CUBIC_CURVE_TO_NV = 0xF2;
static const int GL_DUP_LAST_CUBIC_CURVE_TO_NV = 0xF4;
static const int GL_RECT_NV = 0xF6;
static const int GL_CIRCULAR_CCW_ARC_TO_NV = 0xF8;
static const int GL_CIRCULAR_CW_ARC_TO_NV = 0xFA;
static const int GL_CIRCULAR_TANGENT_ARC_TO_NV = 0xFC;
static const int GL_ARC_TO_NV = 0xFE;
static const int GL_RELATIVE_ARC_TO_NV = 0xFF;
static const int GL_BOLD_BIT_NV = 0x01;
static const int GL_ITALIC_BIT_NV = 0x02;
static const int GL_GLYPH_WIDTH_BIT_NV = 0x01;
static const int GL_GLYPH_HEIGHT_BIT_NV = 0x02;
static const int GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = 0x04;
static const int GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = 0x08;
static const int GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = 0x10;
static const int GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = 0x20;
static const int GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = 0x40;
static const int GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = 0x80;
static const int GL_GLYPH_HAS_KERNING_NV = 0x100;
static const int GL_FONT_X_MIN_BOUNDS_NV = 0x00010000;
static const int GL_FONT_Y_MIN_BOUNDS_NV = 0x00020000;
static const int GL_FONT_X_MAX_BOUNDS_NV = 0x00040000;
static const int GL_FONT_Y_MAX_BOUNDS_NV = 0x00080000;
static const int GL_FONT_UNITS_PER_EM_NV = 0x00100000;
static const int GL_FONT_ASCENDER_NV = 0x00200000;
static const int GL_FONT_DESCENDER_NV = 0x00400000;
static const int GL_FONT_HEIGHT_NV = 0x00800000;
static const int GL_FONT_MAX_ADVANCE_WIDTH_NV = 0x01000000;
static const int GL_FONT_MAX_ADVANCE_HEIGHT_NV = 0x02000000;
static const int GL_FONT_UNDERLINE_POSITION_NV = 0x04000000;
static const int GL_FONT_UNDERLINE_THICKNESS_NV = 0x08000000;
static const int GL_FONT_HAS_KERNING_NV = 0x10000000;
static const int GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = 0x9160;
static const int GL_SET_AMD = 0x874A;
static const int GL_REPLACE_VALUE_AMD = 0x874B;
static const int GL_STENCIL_OP_VALUE_AMD = 0x874C;
static const int GL_STENCIL_BACK_OP_VALUE_AMD = 0x874D;
static const int GL_VERSION_1_2_DEPRECATED = 1;
static const int GL_VERSION_1_3_DEPRECATED = 1;
static const int GL_VERSION_1_4 = 1;
static const int GL_VERSION_1_4_DEPRECATED = 1;
static const int GL_VERSION_1_5 = 1;
static const int GL_VERSION_2_0 = 1;
static const int GL_VERSION_2_1 = 1;
static const int GL_VERSION_3_0 = 1;
static const int GL_VERSION_3_1 = 1;
static const int GL_VERSION_3_2 = 1;
static const int GL_VERSION_3_3 = 1;
static const int GL_VERSION_4_0 = 1;
static const int GL_VERSION_4_1 = 1;
static const int GL_VERSION_4_2 = 1;
static const int GL_ARB_multitexture = 1;
static const int GL_ARB_transpose_matrix = 1;
static const int GL_ARB_multisample = 1;
static const int GL_ARB_texture_env_add = 1;
static const int GL_ARB_texture_cube_map = 1;
static const int GL_ARB_texture_compression = 1;
static const int GL_ARB_texture_border_clamp = 1;
static const int GL_ARB_point_parameters = 1;
static const int GL_ARB_vertex_blend = 1;
static const int GL_ARB_matrix_palette = 1;
static const int GL_ARB_texture_env_combine = 1;
static const int GL_ARB_texture_env_crossbar = 1;
static const int GL_ARB_texture_env_dot3 = 1;
static const int GL_ARB_texture_mirrored_repeat = 1;
static const int GL_ARB_depth_texture = 1;
static const int GL_ARB_shadow = 1;
static const int GL_ARB_shadow_ambient = 1;
static const int GL_ARB_window_pos = 1;
static const int GL_ARB_vertex_program = 1;
static const int GL_ARB_fragment_program = 1;
static const int GL_ARB_vertex_buffer_object = 1;
static const int GL_ARB_occlusion_query = 1;
static const int GL_ARB_shader_objects = 1;
static const int GL_ARB_vertex_shader = 1;
static const int GL_ARB_fragment_shader = 1;
static const int GL_ARB_shading_language_100 = 1;
static const int GL_ARB_texture_non_power_of_two = 1;
static const int GL_ARB_point_sprite = 1;
static const int GL_ARB_fragment_program_shadow = 1;
static const int GL_ARB_draw_buffers = 1;
static const int GL_ARB_texture_rectangle = 1;
static const int GL_ARB_color_buffer_float = 1;
static const int GL_ARB_half_float_pixel = 1;
static const int GL_ARB_texture_float = 1;
static const int GL_ARB_pixel_buffer_object = 1;
static const int GL_ARB_depth_buffer_float = 1;
static const int GL_ARB_draw_instanced = 1;
static const int GL_ARB_framebuffer_object = 1;
static const int GL_ARB_framebuffer_sRGB = 1;
static const int GL_ARB_geometry_shader4 = 1;
static const int GL_ARB_half_float_vertex = 1;
static const int GL_ARB_instanced_arrays = 1;
static const int GL_ARB_map_buffer_range = 1;
static const int GL_ARB_texture_buffer_object = 1;
static const int GL_ARB_texture_compression_rgtc = 1;
static const int GL_ARB_texture_rg = 1;
static const int GL_ARB_vertex_array_object = 1;
static const int GL_ARB_uniform_buffer_object = 1;
static const int GL_ARB_compatibility = 1;
static const int GL_ARB_copy_buffer = 1;
static const int GL_ARB_shader_texture_lod = 1;
static const int GL_ARB_depth_clamp = 1;
static const int GL_ARB_draw_elements_base_vertex = 1;
static const int GL_ARB_fragment_coord_conventions = 1;
static const int GL_ARB_provoking_vertex = 1;
static const int GL_ARB_seamless_cube_map = 1;
static const int GL_ARB_sync = 1;
static const int GL_ARB_texture_multisample = 1;
static const int GL_ARB_vertex_array_bgra = 1;
static const int GL_ARB_draw_buffers_blend = 1;
static const int GL_ARB_sample_shading = 1;
static const int GL_ARB_texture_cube_map_array = 1;
static const int GL_ARB_texture_gather = 1;
static const int GL_ARB_texture_query_lod = 1;
static const int GL_ARB_shading_language_include = 1;
static const int GL_ARB_texture_compression_bptc = 1;
static const int GL_ARB_blend_func_extended = 1;
static const int GL_ARB_explicit_attrib_location = 1;
static const int GL_ARB_occlusion_query2 = 1;
static const int GL_ARB_sampler_objects = 1;
static const int GL_ARB_shader_bit_encoding = 1;
static const int GL_ARB_texture_rgb10_a2ui = 1;
static const int GL_ARB_texture_swizzle = 1;
static const int GL_ARB_timer_query = 1;
static const int GL_ARB_vertex_type_2_10_10_10_rev = 1;
static const int GL_ARB_draw_indirect = 1;
static const int GL_ARB_gpu_shader5 = 1;
static const int GL_ARB_gpu_shader_fp64 = 1;
static const int GL_ARB_shader_subroutine = 1;
static const int GL_ARB_tessellation_shader = 1;
static const int GL_ARB_texture_buffer_object_rgb32 = 1;
static const int GL_ARB_transform_feedback2 = 1;
static const int GL_ARB_transform_feedback3 = 1;
static const int GL_ARB_ES2_compatibility = 1;
static const int GL_ARB_get_program_binary = 1;
static const int GL_ARB_separate_shader_objects = 1;
static const int GL_ARB_vertex_attrib_64bit = 1;
static const int GL_ARB_viewport_array = 1;
static const int GL_ARB_cl_event = 1;
static const int GL_ARB_debug_output = 1;
static const int GL_ARB_robustness = 1;
static const int GL_ARB_shader_stencil_export = 1;
static const int GL_ARB_base_instance = 1;
static const int GL_ARB_shading_language_420pack = 1;
static const int GL_ARB_transform_feedback_instanced = 1;
static const int GL_ARB_compressed_texture_pixel_storage = 1;
static const int GL_ARB_conservative_depth = 1;
static const int GL_ARB_internalformat_query = 1;
static const int GL_ARB_map_buffer_alignment = 1;
static const int GL_ARB_shader_atomic_counters = 1;
static const int GL_ARB_shader_image_load_store = 1;
static const int GL_ARB_shading_language_packing = 1;
static const int GL_ARB_texture_storage = 1;
static const int GL_EXT_abgr = 1;
static const int GL_EXT_blend_color = 1;
static const int GL_EXT_polygon_offset = 1;
static const int GL_EXT_texture = 1;
static const int GL_EXT_texture3D = 1;
static const int GL_SGIS_texture_filter4 = 1;
static const int GL_EXT_subtexture = 1;
static const int GL_EXT_copy_texture = 1;
static const int GL_EXT_histogram = 1;
static const int GL_EXT_convolution = 1;
static const int GL_SGI_color_matrix = 1;
static const int GL_SGI_color_table = 1;
static const int GL_SGIX_pixel_texture = 1;
static const int GL_SGIS_pixel_texture = 1;
static const int GL_SGIS_texture4D = 1;
static const int GL_SGI_texture_color_table = 1;
static const int GL_EXT_cmyka = 1;
static const int GL_EXT_texture_object = 1;
static const int GL_SGIS_detail_texture = 1;
static const int GL_SGIS_sharpen_texture = 1;
static const int GL_EXT_packed_pixels = 1;
static const int GL_SGIS_texture_lod = 1;
static const int GL_SGIS_multisample = 1;
static const int GL_EXT_rescale_normal = 1;
static const int GL_EXT_vertex_array = 1;
static const int GL_EXT_misc_attribute = 1;
static const int GL_SGIS_generate_mipmap = 1;
static const int GL_SGIX_clipmap = 1;
static const int GL_SGIX_shadow = 1;
static const int GL_SGIS_texture_edge_clamp = 1;
static const int GL_SGIS_texture_border_clamp = 1;
static const int GL_EXT_blend_minmax = 1;
static const int GL_EXT_blend_subtract = 1;
static const int GL_EXT_blend_logic_op = 1;
static const int GL_SGIX_interlace = 1;
static const int GL_SGIX_pixel_tiles = 1;
static const int GL_SGIX_texture_select = 1;
static const int GL_SGIX_sprite = 1;
static const int GL_SGIX_texture_multi_buffer = 1;
static const int GL_EXT_point_parameters = 1;
static const int GL_SGIS_point_parameters = 1;
static const int GL_SGIX_instruments = 1;
static const int GL_SGIX_texture_scale_bias = 1;
static const int GL_SGIX_framezoom = 1;
static const int GL_SGIX_tag_sample_buffer = 1;
static const int GL_SGIX_polynomial_ffd = 1;
static const int GL_SGIX_reference_plane = 1;
static const int GL_SGIX_flush_raster = 1;
static const int GL_SGIX_depth_texture = 1;
static const int GL_SGIS_fog_function = 1;
static const int GL_SGIX_fog_offset = 1;
static const int GL_HP_image_transform = 1;
static const int GL_HP_convolution_border_modes = 1;
static const int GL_SGIX_texture_add_env = 1;
static const int GL_EXT_color_subtable = 1;
static const int GL_PGI_vertex_hints = 1;
static const int GL_PGI_misc_hints = 1;
static const int GL_EXT_paletted_texture = 1;
static const int GL_EXT_clip_volume_hint = 1;
static const int GL_SGIX_list_priority = 1;
static const int GL_SGIX_ir_instrument1 = 1;
static const int GL_SGIX_calligraphic_fragment = 1;
static const int GL_SGIX_texture_lod_bias = 1;
static const int GL_SGIX_shadow_ambient = 1;
static const int GL_EXT_index_texture = 1;
static const int GL_EXT_index_material = 1;
static const int GL_EXT_index_func = 1;
static const int GL_EXT_index_array_formats = 1;
static const int GL_EXT_compiled_vertex_array = 1;
static const int GL_EXT_cull_vertex = 1;
static const int GL_SGIX_ycrcb = 1;
static const int GL_SGIX_fragment_lighting = 1;
static const int GL_IBM_rasterpos_clip = 1;
static const int GL_HP_texture_lighting = 1;
static const int GL_EXT_draw_range_elements = 1;
static const int GL_WIN_phong_shading = 1;
static const int GL_WIN_specular_fog = 1;
static const int GL_EXT_light_texture = 1;
static const int GL_SGIX_blend_alpha_minmax = 1;
static const int GL_EXT_bgra = 1;
static const int GL_SGIX_async = 1;
static const int GL_SGIX_async_pixel = 1;
static const int GL_SGIX_async_histogram = 1;
static const int GL_INTEL_parallel_arrays = 1;
static const int GL_HP_occlusion_test = 1;
static const int GL_EXT_pixel_transform = 1;
static const int GL_EXT_pixel_transform_color_table = 1;
static const int GL_EXT_shared_texture_palette = 1;
static const int GL_EXT_separate_specular_color = 1;
static const int GL_EXT_secondary_color = 1;
static const int GL_EXT_texture_perturb_normal = 1;
static const int GL_EXT_multi_draw_arrays = 1;
static const int GL_EXT_fog_coord = 1;
static const int GL_REND_screen_coordinates = 1;
static const int GL_EXT_coordinate_frame = 1;
static const int GL_EXT_texture_env_combine = 1;
static const int GL_APPLE_specular_vector = 1;
static const int GL_APPLE_transform_hint = 1;
static const int GL_SGIX_fog_scale = 1;
static const int GL_SUNX_constant_data = 1;
static const int GL_SUN_global_alpha = 1;
static const int GL_SUN_triangle_list = 1;
static const int GL_SUN_vertex = 1;
static const int GL_EXT_blend_func_separate = 1;
static const int GL_INGR_blend_func_separate = 1;
static const int GL_INGR_color_clamp = 1;
static const int GL_INGR_interlace_read = 1;
static const int GL_EXT_stencil_wrap = 1;
static const int GL_EXT_422_pixels = 1;
static const int GL_NV_texgen_reflection = 1;
static const int GL_SUN_convolution_border_modes = 1;
static const int GL_EXT_texture_env_add = 1;
static const int GL_EXT_texture_lod_bias = 1;
static const int GL_EXT_texture_filter_anisotropic = 1;
static const int GL_EXT_vertex_weighting = 1;
static const int GL_NV_light_max_exponent = 1;
static const int GL_NV_vertex_array_range = 1;
static const int GL_NV_register_combiners = 1;
static const int GL_NV_fog_distance = 1;
static const int GL_NV_texgen_emboss = 1;
static const int GL_NV_blend_square = 1;
static const int GL_NV_texture_env_combine4 = 1;
static const int GL_MESA_resize_buffers = 1;
static const int GL_MESA_window_pos = 1;
static const int GL_IBM_cull_vertex = 1;
static const int GL_IBM_multimode_draw_arrays = 1;
static const int GL_IBM_vertex_array_lists = 1;
static const int GL_SGIX_subsample = 1;
static const int GL_SGIX_ycrcba = 1;
static const int GL_SGIX_ycrcb_subsample = 1;
static const int GL_SGIX_depth_pass_instrument = 1;
static const int GL_3DFX_texture_compression_FXT1 = 1;
static const int GL_3DFX_multisample = 1;
static const int GL_3DFX_tbuffer = 1;
static const int GL_EXT_multisample = 1;
static const int GL_SGIX_vertex_preclip = 1;
static const int GL_SGIX_convolution_accuracy = 1;
static const int GL_SGIX_resample = 1;
static const int GL_SGIS_point_line_texgen = 1;
static const int GL_SGIS_texture_color_mask = 1;
static const int GL_SGIX_igloo_interface = 1;
static const int GL_EXT_texture_env_dot3 = 1;
static const int GL_ATI_texture_mirror_once = 1;
static const int GL_NV_fence = 1;
static const int GL_NV_evaluators = 1;
static const int GL_NV_packed_depth_stencil = 1;
static const int GL_NV_register_combiners2 = 1;
static const int GL_NV_texture_compression_vtc = 1;
static const int GL_NV_texture_rectangle = 1;
static const int GL_NV_texture_shader = 1;
static const int GL_NV_texture_shader2 = 1;
static const int GL_NV_vertex_array_range2 = 1;
static const int GL_NV_vertex_program = 1;
static const int GL_SGIX_texture_coordinate_clamp = 1;
static const int GL_SGIX_scalebias_hint = 1;
static const int GL_OML_interlace = 1;
static const int GL_OML_subsample = 1;
static const int GL_OML_resample = 1;
static const int GL_NV_copy_depth_to_color = 1;
static const int GL_ATI_envmap_bumpmap = 1;
static const int GL_ATI_fragment_shader = 1;
static const int GL_ATI_pn_triangles = 1;
static const int GL_ATI_vertex_array_object = 1;
static const int GL_EXT_vertex_shader = 1;
static const int GL_ATI_vertex_streams = 1;
static const int GL_ATI_element_array = 1;
static const int GL_SUN_mesh_array = 1;
static const int GL_SUN_slice_accum = 1;
static const int GL_NV_multisample_filter_hint = 1;
static const int GL_NV_depth_clamp = 1;
static const int GL_NV_occlusion_query = 1;
static const int GL_NV_point_sprite = 1;
static const int GL_NV_texture_shader3 = 1;
static const int GL_NV_vertex_program1_1 = 1;
static const int GL_EXT_shadow_funcs = 1;
static const int GL_EXT_stencil_two_side = 1;
static const int GL_ATI_text_fragment_shader = 1;
static const int GL_APPLE_client_storage = 1;
static const int GL_APPLE_element_array = 1;
static const int GL_APPLE_fence = 1;
static const int GL_APPLE_vertex_array_object = 1;
static const int GL_APPLE_vertex_array_range = 1;
static const int GL_APPLE_ycbcr_422 = 1;
static const int GL_S3_s3tc = 1;
static const int GL_ATI_draw_buffers = 1;
static const int GL_ATI_pixel_format_float = 1;
static const int GL_ATI_texture_env_combine3 = 1;
static const int GL_ATI_texture_float = 1;
static const int GL_NV_float_buffer = 1;
static const int GL_NV_fragment_program = 1;
static const int GL_NV_half_float = 1;
static const int GL_NV_pixel_data_range = 1;
static const int GL_NV_primitive_restart = 1;
static const int GL_NV_texture_expand_normal = 1;
static const int GL_NV_vertex_program2 = 1;
static const int GL_ATI_map_object_buffer = 1;
static const int GL_ATI_separate_stencil = 1;
static const int GL_ATI_vertex_attrib_array_object = 1;
static const int GL_OES_read_format = 1;
static const int GL_EXT_depth_bounds_test = 1;
static const int GL_EXT_texture_mirror_clamp = 1;
static const int GL_EXT_blend_equation_separate = 1;
static const int GL_MESA_pack_invert = 1;
static const int GL_MESA_ycbcr_texture = 1;
static const int GL_EXT_pixel_buffer_object = 1;
static const int GL_NV_fragment_program_option = 1;
static const int GL_NV_fragment_program2 = 1;
static const int GL_NV_vertex_program2_option = 1;
static const int GL_NV_vertex_program3 = 1;
static const int GL_EXT_framebuffer_object = 1;
static const int GL_GREMEDY_string_marker = 1;
static const int GL_EXT_packed_depth_stencil = 1;
static const int GL_EXT_stencil_clear_tag = 1;
static const int GL_EXT_texture_sRGB = 1;
static const int GL_EXT_framebuffer_blit = 1;
static const int GL_EXT_framebuffer_multisample = 1;
static const int GL_MESAX_texture_stack = 1;
static const int GL_EXT_timer_query = 1;
static const int GL_EXT_gpu_program_parameters = 1;
static const int GL_APPLE_flush_buffer_range = 1;
static const int GL_NV_gpu_program4 = 1;
static const int GL_NV_geometry_program4 = 1;
static const int GL_EXT_geometry_shader4 = 1;
static const int GL_NV_vertex_program4 = 1;
static const int GL_EXT_gpu_shader4 = 1;
static const int GL_EXT_draw_instanced = 1;
static const int GL_EXT_packed_float = 1;
static const int GL_EXT_texture_array = 1;
static const int GL_EXT_texture_buffer_object = 1;
static const int GL_EXT_texture_compression_latc = 1;
static const int GL_EXT_texture_compression_rgtc = 1;
static const int GL_EXT_texture_shared_exponent = 1;
static const int GL_NV_depth_buffer_float = 1;
static const int GL_NV_fragment_program4 = 1;
static const int GL_NV_framebuffer_multisample_coverage = 1;
static const int GL_EXT_framebuffer_sRGB = 1;
static const int GL_NV_geometry_shader4 = 1;
static const int GL_NV_parameter_buffer_object = 1;
static const int GL_EXT_draw_buffers2 = 1;
static const int GL_NV_transform_feedback = 1;
static const int GL_EXT_bindable_uniform = 1;
static const int GL_EXT_texture_integer = 1;
static const int GL_GREMEDY_frame_terminator = 1;
static const int GL_NV_conditional_render = 1;
static const int GL_NV_present_video = 1;
static const int GL_EXT_transform_feedback = 1;
static const int GL_EXT_direct_state_access = 1;
static const int GL_EXT_vertex_array_bgra = 1;
static const int GL_EXT_texture_swizzle = 1;
static const int GL_NV_explicit_multisample = 1;
static const int GL_NV_transform_feedback2 = 1;
static const int GL_ATI_meminfo = 1;
static const int GL_AMD_performance_monitor = 1;
static const int GL_AMD_texture_texture4 = 1;
static const int GL_AMD_vertex_shader_tesselator = 1;
static const int GL_EXT_provoking_vertex = 1;
static const int GL_EXT_texture_snorm = 1;
static const int GL_AMD_draw_buffers_blend = 1;
static const int GL_APPLE_texture_range = 1;
static const int GL_APPLE_float_pixels = 1;
static const int GL_APPLE_vertex_program_evaluators = 1;
static const int GL_APPLE_aux_depth_stencil = 1;
static const int GL_APPLE_object_purgeable = 1;
static const int GL_APPLE_row_bytes = 1;
static const int GL_APPLE_rgb_422 = 1;
static const int GL_NV_video_capture = 1;
static const int GL_NV_copy_image = 1;
static const int GL_EXT_separate_shader_objects = 1;
static const int GL_NV_parameter_buffer_object2 = 1;
static const int GL_NV_shader_buffer_load = 1;
static const int GL_NV_vertex_buffer_unified_memory = 1;
static const int GL_NV_texture_barrier = 1;
static const int GL_AMD_shader_stencil_export = 1;
static const int GL_AMD_seamless_cubemap_per_texture = 1;
static const int GL_AMD_conservative_depth = 1;
static const int GL_EXT_shader_image_load_store = 1;
static const int GL_EXT_vertex_attrib_64bit = 1;
static const int GL_NV_gpu_program5 = 1;
static const int GL_NV_gpu_shader5 = 1;
static const int GL_NV_shader_buffer_store = 1;
static const int GL_NV_tessellation_program5 = 1;
static const int GL_NV_vertex_attrib_integer_64bit = 1;
static const int GL_NV_multisample_coverage = 1;
static const int GL_AMD_name_gen_delete = 1;
static const int GL_AMD_debug_output = 1;
static const int GL_NV_vdpau_interop = 1;
static const int GL_AMD_transform_feedback3_lines_triangles = 1;
static const int GL_AMD_depth_clamp_separate = 1;
static const int GL_EXT_texture_sRGB_decode = 1;
static const int GL_NV_texture_multisample = 1;
static const int GL_AMD_blend_minmax_factor = 1;
static const int GL_AMD_sample_positions = 1;
static const int GL_EXT_x11_sync_object = 1;
static const int GL_AMD_multi_draw_indirect = 1;
static const int GL_EXT_framebuffer_multisample_blit_scaled = 1;
static const int GL_NV_path_rendering = 1;
static const int GL_AMD_pinned_memory = 1;
static const int GL_AMD_stencil_operation_extended = 1;
static const int GL_AMD_vertex_shader_viewport_index = 1;
static const int GL_AMD_vertex_shader_layer = 1;
static const int GL_NV_bindless_texture = 1;
static const int GL_NV_shader_atomic_float = 1;

/************************************************* FUNCTIONS *************************************************/

extern void glClearIndex( GLfloat c );
extern void glClearColor( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha );
extern void glClear( GLbitfield mask );
extern void glIndexMask( GLuint mask );
extern void glColorMask( GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha );
extern void glAlphaFunc( GLenum func, GLclampf ref );
extern void glBlendFunc( GLenum sfactor, GLenum dfactor );
extern void glLogicOp( GLenum opcode );
extern void glCullFace( GLenum mode );
extern void glFrontFace( GLenum mode );
extern void glPointSize( GLfloat size );
extern void glLineWidth( GLfloat width );
extern void glLineStipple( GLint factor, GLushort pattern );
extern void glPolygonMode( GLenum face, GLenum mode );
extern void glPolygonOffset( GLfloat factor, GLfloat units );
extern void glPolygonStipple( const GLubyte *mask );
extern void glGetPolygonStipple( GLubyte *mask );
extern void glEdgeFlag( GLboolean flag );
extern void glEdgeFlagv( const GLboolean *flag );
extern void glScissor( GLint x, GLint y, GLsizei width, GLsizei height);
extern void glClipPlane( GLenum plane, const GLdouble *equation );
extern void glGetClipPlane( GLenum plane, GLdouble *equation );
extern void glDrawBuffer( GLenum mode );
extern void glReadBuffer( GLenum mode );
extern void glEnable( GLenum cap );
extern void glDisable( GLenum cap );
extern GLboolean glIsEnabled( GLenum cap );
extern void glEnableClientState( GLenum cap );
extern void glDisableClientState( GLenum cap );
extern void glGetBooleanv( GLenum pname, GLboolean *params );
extern void glGetDoublev( GLenum pname, GLdouble *params );
extern void glGetFloatv( GLenum pname, GLfloat *params );
extern void glGetIntegerv( GLenum pname, GLint *params );
extern void glPushAttrib( GLbitfield mask );
extern void glPopAttrib( void );
extern void glPushClientAttrib( GLbitfield mask );
extern void glPopClientAttrib( void );
extern GLint glRenderMode( GLenum mode );
extern GLenum glGetError( void );
extern const GLubyte* glGetString( GLenum name );
extern void glFinish( void );
extern void glFlush( void );
extern void glHint( GLenum target, GLenum mode );


extern void glClearDepth( GLclampd depth );
extern void glDepthFunc( GLenum func );
extern void glDepthMask( GLboolean flag );
extern void glDepthRange( GLclampd near_val, GLclampd far_val );


extern void glClearAccum( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
extern void glAccum( GLenum op, GLfloat value );


extern void glMatrixMode( GLenum mode );
extern void glOrtho( GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val );
extern void glFrustum( GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val );
extern void glViewport( GLint x, GLint y, GLsizei width, GLsizei height );
extern void glPushMatrix( void );
extern void glPopMatrix( void );
extern void glLoadIdentity( void );
extern void glLoadMatrixd( const GLdouble *m );
extern void glLoadMatrixf( const GLfloat *m );
extern void glMultMatrixd( const GLdouble *m );
extern void glMultMatrixf( const GLfloat *m );
extern void glRotated( GLdouble angle, GLdouble x, GLdouble y, GLdouble z );
extern void glRotatef( GLfloat angle, GLfloat x, GLfloat y, GLfloat z );
extern void glScaled( GLdouble x, GLdouble y, GLdouble z );
extern void glScalef( GLfloat x, GLfloat y, GLfloat z );
extern void glTranslated( GLdouble x, GLdouble y, GLdouble z );
extern void glTranslatef( GLfloat x, GLfloat y, GLfloat z );


extern GLboolean glIsList( GLuint list );
extern void glDeleteLists( GLuint list, GLsizei range );
extern GLuint glGenLists( GLsizei range );
extern void glNewList( GLuint list, GLenum mode );
extern void glEndList( void );
extern void glCallList( GLuint list );
extern void glCallLists( GLsizei n, GLenum type, const GLvoid *lists );
extern void glListBase( GLuint base );


extern void glBegin( GLenum mode );
extern void glEnd( void );
extern void glVertex2d( GLdouble x, GLdouble y );
extern void glVertex2f( GLfloat x, GLfloat y );
extern void glVertex2i( GLint x, GLint y );
extern void glVertex2s( GLshort x, GLshort y );
extern void glVertex3d( GLdouble x, GLdouble y, GLdouble z );
extern void glVertex3f( GLfloat x, GLfloat y, GLfloat z );
extern void glVertex3i( GLint x, GLint y, GLint z );
extern void glVertex3s( GLshort x, GLshort y, GLshort z );
extern void glVertex4d( GLdouble x, GLdouble y, GLdouble z, GLdouble w );
extern void glVertex4f( GLfloat x, GLfloat y, GLfloat z, GLfloat w );
extern void glVertex4i( GLint x, GLint y, GLint z, GLint w );
extern void glVertex4s( GLshort x, GLshort y, GLshort z, GLshort w );
extern void glVertex2dv( const GLdouble *v );
extern void glVertex2fv( const GLfloat *v );
extern void glVertex2iv( const GLint *v );
extern void glVertex2sv( const GLshort *v );
extern void glVertex3dv( const GLdouble *v );
extern void glVertex3fv( const GLfloat *v );
extern void glVertex3iv( const GLint *v );
extern void glVertex3sv( const GLshort *v );
extern void glVertex4dv( const GLdouble *v );
extern void glVertex4fv( const GLfloat *v );
extern void glVertex4iv( const GLint *v );
extern void glVertex4sv( const GLshort *v );
extern void glNormal3b( GLbyte nx, GLbyte ny, GLbyte nz );
extern void glNormal3d( GLdouble nx, GLdouble ny, GLdouble nz );
extern void glNormal3f( GLfloat nx, GLfloat ny, GLfloat nz );
extern void glNormal3i( GLint nx, GLint ny, GLint nz );
extern void glNormal3s( GLshort nx, GLshort ny, GLshort nz );
extern void glNormal3bv( const GLbyte *v );
extern void glNormal3dv( const GLdouble *v );
extern void glNormal3fv( const GLfloat *v );
extern void glNormal3iv( const GLint *v );
extern void glNormal3sv( const GLshort *v );
extern void glIndexd( GLdouble c );
extern void glIndexf( GLfloat c );
extern void glIndexi( GLint c );
extern void glIndexs( GLshort c );
extern void glIndexub( GLubyte c );
extern void glIndexdv( const GLdouble *c );
extern void glIndexfv( const GLfloat *c );
extern void glIndexiv( const GLint *c );
extern void glIndexsv( const GLshort *c );
extern void glIndexubv( const GLubyte *c );
extern void glColor3b( GLbyte red, GLbyte green, GLbyte blue );
extern void glColor3d( GLdouble red, GLdouble green, GLdouble blue );
extern void glColor3f( GLfloat red, GLfloat green, GLfloat blue );
extern void glColor3i( GLint red, GLint green, GLint blue );
extern void glColor3s( GLshort red, GLshort green, GLshort blue );
extern void glColor3ub( GLubyte red, GLubyte green, GLubyte blue );
extern void glColor3ui( GLuint red, GLuint green, GLuint blue );
extern void glColor3us( GLushort red, GLushort green, GLushort blue );
extern void glColor4b( GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha );
extern void glColor4d( GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha );
extern void glColor4f( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
extern void glColor4i( GLint red, GLint green, GLint blue, GLint alpha );
extern void glColor4s( GLshort red, GLshort green, GLshort blue, GLshort alpha );
extern void glColor4ub( GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha );
extern void glColor4ui( GLuint red, GLuint green, GLuint blue, GLuint alpha );
extern void glColor4us( GLushort red, GLushort green, GLushort blue, GLushort alpha );
extern void glColor3bv( const GLbyte *v );
extern void glColor3dv( const GLdouble *v );
extern void glColor3fv( const GLfloat *v );
extern void glColor3iv( const GLint *v );
extern void glColor3sv( const GLshort *v );
extern void glColor3ubv( const GLubyte *v );
extern void glColor3uiv( const GLuint *v );
extern void glColor3usv( const GLushort *v );
extern void glColor4bv( const GLbyte *v );
extern void glColor4dv( const GLdouble *v );
extern void glColor4fv( const GLfloat *v );
extern void glColor4iv( const GLint *v );
extern void glColor4sv( const GLshort *v );
extern void glColor4ubv( const GLubyte *v );
extern void glColor4uiv( const GLuint *v );
extern void glColor4usv( const GLushort *v );
extern void glTexCoord1d( GLdouble s );
extern void glTexCoord1f( GLfloat s );
extern void glTexCoord1i( GLint s );
extern void glTexCoord1s( GLshort s );
extern void glTexCoord2d( GLdouble s, GLdouble t );
extern void glTexCoord2f( GLfloat s, GLfloat t );
extern void glTexCoord2i( GLint s, GLint t );
extern void glTexCoord2s( GLshort s, GLshort t );
extern void glTexCoord3d( GLdouble s, GLdouble t, GLdouble r );
extern void glTexCoord3f( GLfloat s, GLfloat t, GLfloat r );
extern void glTexCoord3i( GLint s, GLint t, GLint r );
extern void glTexCoord3s( GLshort s, GLshort t, GLshort r );
extern void glTexCoord4d( GLdouble s, GLdouble t, GLdouble r, GLdouble q );
extern void glTexCoord4f( GLfloat s, GLfloat t, GLfloat r, GLfloat q );
extern void glTexCoord4i( GLint s, GLint t, GLint r, GLint q );
extern void glTexCoord4s( GLshort s, GLshort t, GLshort r, GLshort q );
extern void glTexCoord1dv( const GLdouble *v );
extern void glTexCoord1fv( const GLfloat *v );
extern void glTexCoord1iv( const GLint *v );
extern void glTexCoord1sv( const GLshort *v );
extern void glTexCoord2dv( const GLdouble *v );
extern void glTexCoord2fv( const GLfloat *v );
extern void glTexCoord2iv( const GLint *v );
extern void glTexCoord2sv( const GLshort *v );
extern void glTexCoord3dv( const GLdouble *v );
extern void glTexCoord3fv( const GLfloat *v );
extern void glTexCoord3iv( const GLint *v );
extern void glTexCoord3sv( const GLshort *v );
extern void glTexCoord4dv( const GLdouble *v );
extern void glTexCoord4fv( const GLfloat *v );
extern void glTexCoord4iv( const GLint *v );
extern void glTexCoord4sv( const GLshort *v );
extern void glRasterPos2d( GLdouble x, GLdouble y );
extern void glRasterPos2f( GLfloat x, GLfloat y );
extern void glRasterPos2i( GLint x, GLint y );
extern void glRasterPos2s( GLshort x, GLshort y );
extern void glRasterPos3d( GLdouble x, GLdouble y, GLdouble z );
extern void glRasterPos3f( GLfloat x, GLfloat y, GLfloat z );
extern void glRasterPos3i( GLint x, GLint y, GLint z );
extern void glRasterPos3s( GLshort x, GLshort y, GLshort z );
extern void glRasterPos4d( GLdouble x, GLdouble y, GLdouble z, GLdouble w );
extern void glRasterPos4f( GLfloat x, GLfloat y, GLfloat z, GLfloat w );
extern void glRasterPos4i( GLint x, GLint y, GLint z, GLint w );
extern void glRasterPos4s( GLshort x, GLshort y, GLshort z, GLshort w );
extern void glRasterPos2dv( const GLdouble *v );
extern void glRasterPos2fv( const GLfloat *v );
extern void glRasterPos2iv( const GLint *v );
extern void glRasterPos2sv( const GLshort *v );
extern void glRasterPos3dv( const GLdouble *v );
extern void glRasterPos3fv( const GLfloat *v );
extern void glRasterPos3iv( const GLint *v );
extern void glRasterPos3sv( const GLshort *v );
extern void glRasterPos4dv( const GLdouble *v );
extern void glRasterPos4fv( const GLfloat *v );
extern void glRasterPos4iv( const GLint *v );
extern void glRasterPos4sv( const GLshort *v );
extern void glRectd( GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2 );
extern void glRectf( GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2 );
extern void glRecti( GLint x1, GLint y1, GLint x2, GLint y2 );
extern void glRects( GLshort x1, GLshort y1, GLshort x2, GLshort y2 );
extern void glRectdv( const GLdouble *v1, const GLdouble *v2 );
extern void glRectfv( const GLfloat *v1, const GLfloat *v2 );
extern void glRectiv( const GLint *v1, const GLint *v2 );
extern void glRectsv( const GLshort *v1, const GLshort *v2 );


extern void glShadeModel( GLenum mode );
extern void glLightf( GLenum light, GLenum pname, GLfloat param );
extern void glLighti( GLenum light, GLenum pname, GLint param );
extern void glLightfv( GLenum light, GLenum pname, const GLfloat *params );
extern void glLightiv( GLenum light, GLenum pname, const GLint *params );
extern void glGetLightfv( GLenum light, GLenum pname, GLfloat *params );
extern void glGetLightiv( GLenum light, GLenum pname, GLint *params );
extern void glLightModelf( GLenum pname, GLfloat param );
extern void glLightModeli( GLenum pname, GLint param );
extern void glLightModelfv( GLenum pname, const GLfloat *params );
extern void glLightModeliv( GLenum pname, const GLint *params );
extern void glMaterialf( GLenum face, GLenum pname, GLfloat param );
extern void glMateriali( GLenum face, GLenum pname, GLint param );
extern void glMaterialfv( GLenum face, GLenum pname, const GLfloat *params );
extern void glMaterialiv( GLenum face, GLenum pname, const GLint *params );
extern void glGetMaterialfv( GLenum face, GLenum pname, GLfloat *params );
extern void glGetMaterialiv( GLenum face, GLenum pname, GLint *params );
extern void glColorMaterial( GLenum face, GLenum mode );


extern void glPixelZoom( GLfloat xfactor, GLfloat yfactor );
extern void glPixelStoref( GLenum pname, GLfloat param );
extern void glPixelStorei( GLenum pname, GLint param );
extern void glPixelTransferf( GLenum pname, GLfloat param );
extern void glPixelTransferi( GLenum pname, GLint param );
extern void glPixelMapfv( GLenum map, GLint mapsize, const GLfloat *values );
extern void glPixelMapuiv( GLenum map, GLint mapsize, const GLuint *values );
extern void glPixelMapusv( GLenum map, GLint mapsize, const GLushort *values );
extern void glGetPixelMapfv( GLenum map, GLfloat *values );
extern void glGetPixelMapuiv( GLenum map, GLuint *values );
extern void glGetPixelMapusv( GLenum map, GLushort *values );
extern void glBitmap( GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap );
extern void glReadPixels( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels );
extern void glDrawPixels( GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels );
extern void glCopyPixels( GLint x, GLint y, GLsizei width, GLsizei height, GLenum type );


extern void glStencilFunc( GLenum func, GLint ref, GLuint mask );
extern void glStencilMask( GLuint mask );
extern void glStencilOp( GLenum fail, GLenum zfail, GLenum zpass );
extern void glClearStencil( GLint s );


extern void glTexGend( GLenum coord, GLenum pname, GLdouble param );
extern void glTexGenf( GLenum coord, GLenum pname, GLfloat param );
extern void glTexGeni( GLenum coord, GLenum pname, GLint param );
extern void glTexGendv( GLenum coord, GLenum pname, const GLdouble *params );
extern void glTexGenfv( GLenum coord, GLenum pname, const GLfloat *params );
extern void glTexGeniv( GLenum coord, GLenum pname, const GLint *params );
extern void glGetTexGendv( GLenum coord, GLenum pname, GLdouble *params );
extern void glGetTexGenfv( GLenum coord, GLenum pname, GLfloat *params );
extern void glGetTexGeniv( GLenum coord, GLenum pname, GLint *params );
extern void glTexEnvf( GLenum target, GLenum pname, GLfloat param );
extern void glTexEnvi( GLenum target, GLenum pname, GLint param );
extern void glTexEnvfv( GLenum target, GLenum pname, const GLfloat *params );
extern void glTexEnviv( GLenum target, GLenum pname, const GLint *params );
extern void glGetTexEnvfv( GLenum target, GLenum pname, GLfloat *params );
extern void glGetTexEnviv( GLenum target, GLenum pname, GLint *params );
extern void glTexParameterf( GLenum target, GLenum pname, GLfloat param );
extern void glTexParameteri( GLenum target, GLenum pname, GLint param );
extern void glTexParameterfv( GLenum target, GLenum pname, const GLfloat *params );
extern void glTexParameteriv( GLenum target, GLenum pname, const GLint *params );
extern void glGetTexParameterfv( GLenum target, GLenum pname, GLfloat *params);
extern void glGetTexParameteriv( GLenum target, GLenum pname, GLint *params );
extern void glGetTexLevelParameterfv( GLenum target, GLint level, GLenum pname, GLfloat *params );
extern void glGetTexLevelParameteriv( GLenum target, GLint level, GLenum pname, GLint *params );
extern void glTexImage1D( GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels );
extern void glTexImage2D( GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels );
extern void glGetTexImage( GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels );


extern void glMap1d( GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points );
extern void glMap1f( GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points );
extern void glMap2d( GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points );
extern void glMap2f( GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points );
extern void glGetMapdv( GLenum target, GLenum query, GLdouble *v );
extern void glGetMapfv( GLenum target, GLenum query, GLfloat *v );
extern void glGetMapiv( GLenum target, GLenum query, GLint *v );
extern void glEvalCoord1d( GLdouble u );
extern void glEvalCoord1f( GLfloat u );
extern void glEvalCoord1dv( const GLdouble *u );
extern void glEvalCoord1fv( const GLfloat *u );
extern void glEvalCoord2d( GLdouble u, GLdouble v );
extern void glEvalCoord2f( GLfloat u, GLfloat v );
extern void glEvalCoord2dv( const GLdouble *u );
extern void glEvalCoord2fv( const GLfloat *u );
extern void glMapGrid1d( GLint un, GLdouble u1, GLdouble u2 );
extern void glMapGrid1f( GLint un, GLfloat u1, GLfloat u2 );
extern void glMapGrid2d( GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2 );
extern void glMapGrid2f( GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2 );
extern void glEvalPoint1( GLint i );
extern void glEvalPoint2( GLint i, GLint j );
extern void glEvalMesh1( GLenum mode, GLint i1, GLint i2 );
extern void glEvalMesh2( GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2 );


extern void glFogf( GLenum pname, GLfloat param );
extern void glFogi( GLenum pname, GLint param );
extern void glFogfv( GLenum pname, const GLfloat *params );
extern void glFogiv( GLenum pname, const GLint *params );


extern void glFeedbackBuffer( GLsizei size, GLenum type, GLfloat *buffer );
extern void glPassThrough( GLfloat token );
extern void glSelectBuffer( GLsizei size, GLuint *buffer );
extern void glInitNames( void );
extern void glLoadName( GLuint name );
extern void glPushName( GLuint name );
extern void glPopName( void );




extern void glGenTextures( GLsizei n, GLuint *textures );
extern void glDeleteTextures( GLsizei n, const GLuint *textures);
extern void glBindTexture( GLenum target, GLuint texture );
extern void glPrioritizeTextures( GLsizei n, const GLuint *textures, const GLclampf *priorities );
extern GLboolean glAreTexturesResident( GLsizei n, const GLuint *textures, GLboolean *residences );
extern GLboolean glIsTexture( GLuint texture );

extern void glTexSubImage1D( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels );
extern void glTexSubImage2D( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels );
extern void glCopyTexImage1D( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
extern void glCopyTexImage2D( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );
extern void glCopyTexSubImage1D( GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
extern void glCopyTexSubImage2D( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );

extern void glVertexPointer( GLint size, GLenum type, GLsizei stride, const GLvoid *ptr );
extern void glNormalPointer( GLenum type, GLsizei stride, const GLvoid *ptr );
extern void glColorPointer( GLint size, GLenum type, GLsizei stride, const GLvoid *ptr );
extern void glIndexPointer( GLenum type, GLsizei stride, const GLvoid *ptr );
extern void glTexCoordPointer( GLint size, GLenum type, GLsizei stride, const GLvoid *ptr );
extern void glEdgeFlagPointer( GLsizei stride, const GLvoid *ptr );
extern void glGetPointerv( GLenum pname, GLvoid **params );
extern void glArrayElement( GLint i );
extern void glDrawArrays( GLenum mode, GLint first, GLsizei count );
extern void glDrawElements( GLenum mode, GLsizei count, GLenum type, const GLvoid *indices );
extern void glInterleavedArrays( GLenum format, GLsizei stride, const GLvoid *pointer );

/************************************************* GLEXT TYPEDEFS *************************************************/

typedef void (*GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);
typedef void (*GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);

typedef void (*PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (*PFNGLBLENDEQUATIONPROC) (GLenum mode);
typedef void (*PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
typedef void (*PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

typedef void (*PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
typedef void (*PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (*PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (*PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
typedef void (*PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
typedef void (*PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (*PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
typedef void (*PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
typedef void (*PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
typedef void (*PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (*PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
typedef void (*PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (*PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
typedef void (*PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
typedef void (*PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
typedef void (*PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
typedef void (*PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
typedef void (*PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (*PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (*PFNGLRESETHISTOGRAMPROC) (GLenum target);
typedef void (*PFNGLRESETMINMAXPROC) (GLenum target);

typedef void (*PFNGLACTIVETEXTUREPROC) (GLenum texture);
typedef void (*PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
typedef void (*PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);

typedef void (*PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);
typedef void (*PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
typedef void (*PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);
typedef void (*PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
typedef void (*PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);
typedef void (*PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);
typedef void (*PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);
typedef void (*PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
typedef void (*PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);
typedef void (*PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
typedef void (*PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);
typedef void (*PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
typedef void (*PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);
typedef void (*PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
typedef void (*PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);
typedef void (*PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
typedef void (*PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);
typedef void (*PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (*PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);
typedef void (*PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (*PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);
typedef void (*PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
typedef void (*PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);
typedef void (*PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (*PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);
typedef void (*PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (*PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);
typedef void (*PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (*PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);
typedef void (*PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (*PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);
typedef void (*PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (*PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);
typedef void (*PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);
typedef void (*PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);
typedef void (*PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);
typedef void (*PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);

typedef void (*PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (*PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (*PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount);
typedef void (*PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
typedef void (*PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
typedef void (*PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);
typedef void (*PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);

typedef void (*PFNGLFOGCOORDFPROC) (GLfloat coord);
typedef void (*PFNGLFOGCOORDFVPROC) (const GLfloat *coord);
typedef void (*PFNGLFOGCOORDDPROC) (GLdouble coord);
typedef void (*PFNGLFOGCOORDDVPROC) (const GLdouble *coord);
typedef void (*PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (*PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);
typedef void (*PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (*PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);
typedef void (*PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (*PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);
typedef void (*PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);
typedef void (*PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);
typedef void (*PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
typedef void (*PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);
typedef void (*PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (*PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);
typedef void (*PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
typedef void (*PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);
typedef void (*PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
typedef void (*PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);
typedef void (*PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);
typedef void (*PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);
typedef void (*PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);
typedef void (*PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);
typedef void (*PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);
typedef void (*PFNGLWINDOWPOS2IVPROC) (const GLint *v);
typedef void (*PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);
typedef void (*PFNGLWINDOWPOS2SVPROC) (const GLshort *v);
typedef void (*PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);
typedef void (*PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);
typedef void (*PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);
typedef void (*PFNGLWINDOWPOS3IVPROC) (const GLint *v);
typedef void (*PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);
typedef void (*PFNGLWINDOWPOS3SVPROC) (const GLshort *v);

typedef void (*PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);
typedef void (*PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);
typedef GLboolean (*PFNGLISQUERYPROC) (GLuint id);
typedef void (*PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);
typedef void (*PFNGLENDQUERYPROC) (GLenum target);
typedef void (*PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (*PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);
typedef void (*PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);
typedef void (*PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);
typedef void (*PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);
typedef GLboolean (*PFNGLISBUFFERPROC) (GLuint buffer);
typedef void (*PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
typedef void (*PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
typedef void (*PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);
typedef GLvoid* (*PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);
typedef GLboolean (*PFNGLUNMAPBUFFERPROC) (GLenum target);
typedef void (*PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);

typedef void (*PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);
typedef void (*PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);
typedef void (*PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (*PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (*PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);
typedef void (*PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);
typedef void (*PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);
typedef void (*PFNGLCOMPILESHADERPROC) (GLuint shader);
typedef GLuint (*PFNGLCREATEPROGRAMPROC) (void);
typedef GLuint (*PFNGLCREATESHADERPROC) (GLenum type);
typedef void (*PFNGLDELETEPROGRAMPROC) (GLuint program);
typedef void (*PFNGLDELETESHADERPROC) (GLuint shader);
typedef void (*PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);
typedef void (*PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);
typedef void (*PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);
typedef void (*PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void (*PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void (*PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);
typedef GLint (*PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);
typedef void (*PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);
typedef void (*PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (*PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);
typedef void (*PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void (*PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
typedef GLint (*PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);
typedef void (*PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);
typedef void (*PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);
typedef void (*PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (*PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (*PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
typedef GLboolean (*PFNGLISPROGRAMPROC) (GLuint program);
typedef GLboolean (*PFNGLISSHADERPROC) (GLuint shader);
typedef void (*PFNGLLINKPROGRAMPROC) (GLuint program);
typedef void (*PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);
typedef void (*PFNGLUSEPROGRAMPROC) (GLuint program);
typedef void (*PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);
typedef void (*PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);
typedef void (*PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (*PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (*PFNGLUNIFORM1IPROC) (GLint location, GLint v0);
typedef void (*PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);
typedef void (*PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (*PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (*PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLVALIDATEPROGRAMPROC) (GLuint program);
typedef void (*PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);
typedef void (*PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);
typedef void (*PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);
typedef void (*PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (*PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (*PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);
typedef void (*PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (*PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);
typedef void (*PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (*PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);
typedef void (*PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);
typedef void (*PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);
typedef void (*PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (*PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);
typedef void (*PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);
typedef void (*PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);

typedef void (*PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

typedef void (*PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (*PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);
typedef void (*PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);
typedef void (*PFNGLENABLEIPROC) (GLenum target, GLuint index);
typedef void (*PFNGLDISABLEIPROC) (GLenum target, GLuint index);
typedef GLboolean (*PFNGLISENABLEDIPROC) (GLenum target, GLuint index);
typedef void (*PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);
typedef void (*PFNGLENDTRANSFORMFEEDBACKPROC) (void);
typedef void (*PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (*PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (*PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar* const *varyings, GLenum bufferMode);
typedef void (*PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
typedef void (*PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);
typedef void (*PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);
typedef void (*PFNGLENDCONDITIONALRENDERPROC) (void);
typedef void (*PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (*PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);
typedef void (*PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);
typedef void (*PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);
typedef void (*PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);
typedef void (*PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (*PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);
typedef void (*PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);
typedef void (*PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (*PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (*PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);
typedef void (*PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);
typedef void (*PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);
typedef void (*PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);
typedef void (*PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);
typedef GLint (*PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);
typedef void (*PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);
typedef void (*PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);
typedef void (*PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (*PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (*PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);
typedef void (*PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);
typedef void (*PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);
typedef void (*PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);
typedef void (*PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);
typedef void (*PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte * (*PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);

typedef void (*PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (*PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
typedef void (*PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (*PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);

typedef void (*PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);
typedef void (*PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);
typedef void (*PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);

typedef void (*PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);

typedef void (*PFNGLMINSAMPLESHADINGPROC) (GLfloat value);
typedef void (*PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);
typedef void (*PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (*PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (*PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);

typedef void (*PFNGLACTIVETEXTUREARBPROC) (GLenum texture);
typedef void (*PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
typedef void (*PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
typedef void (*PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (*PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
typedef void (*PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (*PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
typedef void (*PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
typedef void (*PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
typedef void (*PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
typedef void (*PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
typedef void (*PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (*PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
typedef void (*PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (*PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
typedef void (*PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
typedef void (*PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
typedef void (*PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
typedef void (*PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (*PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (*PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (*PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (*PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
typedef void (*PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
typedef void (*PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (*PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
typedef void (*PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (*PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
typedef void (*PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (*PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
typedef void (*PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (*PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
typedef void (*PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (*PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);

typedef void (*PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);
typedef void (*PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);
typedef void (*PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);
typedef void (*PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);







typedef void (*PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);

typedef void (*PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (*PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);

typedef void (*PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);
typedef void (*PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);

typedef void (*PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);
typedef void (*PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);
typedef void (*PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);
typedef void (*PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);
typedef void (*PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);
typedef void (*PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);
typedef void (*PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);
typedef void (*PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);
typedef void (*PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLVERTEXBLENDARBPROC) (GLint count);

typedef void (*PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);
typedef void (*PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
typedef void (*PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
typedef void (*PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
typedef void (*PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);

typedef void (*PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);
typedef void (*PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);
typedef void (*PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);
typedef void (*PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);
typedef void (*PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);
typedef void (*PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);
typedef void (*PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);
typedef void (*PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);
typedef void (*PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);
typedef void (*PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);
typedef void (*PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);
typedef void (*PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);
typedef void (*PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);
typedef void (*PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);

typedef void (*PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);
typedef void (*PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);
typedef void (*PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);
typedef void (*PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (*PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (*PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);
typedef void (*PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (*PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);
typedef void (*PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (*PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);
typedef void (*PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);
typedef void (*PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);
typedef void (*PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (*PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);
typedef void (*PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);
typedef void (*PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
typedef void (*PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);
typedef void (*PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);
typedef void (*PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);
typedef void (*PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);
typedef void (*PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);
typedef void (*PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);
typedef void (*PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);
typedef void (*PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);
typedef void (*PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);
typedef void (*PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);
typedef void (*PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);
typedef void (*PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);
typedef void (*PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);
typedef void (*PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);
typedef void (*PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (*PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (*PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
typedef GLboolean (*PFNGLISPROGRAMARBPROC) (GLuint program);

typedef void (*PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);
typedef void (*PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);
typedef void (*PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);
typedef GLboolean (*PFNGLISBUFFERARBPROC) (GLuint buffer);
typedef void (*PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);
typedef void (*PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);
typedef void (*PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);
typedef GLvoid* (*PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);
typedef GLboolean (*PFNGLUNMAPBUFFERARBPROC) (GLenum target);
typedef void (*PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);

typedef void (*PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);
typedef void (*PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);
typedef GLboolean (*PFNGLISQUERYARBPROC) (GLuint id);
typedef void (*PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);
typedef void (*PFNGLENDQUERYARBPROC) (GLenum target);
typedef void (*PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (*PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);

typedef void (*PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);
typedef GLhandleARB (*PFNGLGETHANDLEARBPROC) (GLenum pname);
typedef void (*PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);
typedef GLhandleARB (*PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);
typedef void (*PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);
typedef void (*PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);
typedef GLhandleARB (*PFNGLCREATEPROGRAMOBJECTARBPROC) (void);
typedef void (*PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);
typedef void (*PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);
typedef void (*PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);
typedef void (*PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);
typedef void (*PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);
typedef void (*PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);
typedef void (*PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (*PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (*PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);
typedef void (*PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);
typedef void (*PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (*PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (*PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);
typedef void (*PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
typedef void (*PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
typedef GLint (*PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);
typedef void (*PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
typedef void (*PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);
typedef void (*PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);
typedef void (*PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);

typedef void (*PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);
typedef void (*PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
typedef GLint (*PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);

typedef void (*PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);

typedef void (*PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);

typedef void (*PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (*PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);

typedef GLboolean (*PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);
typedef void (*PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
typedef void (*PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
typedef void (*PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
typedef void (*PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef GLboolean (*PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);
typedef void (*PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
typedef void (*PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
typedef void (*PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
typedef GLenum (*PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
typedef void (*PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (*PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (*PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (*PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (*PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void (*PFNGLGENERATEMIPMAPPROC) (GLenum target);
typedef void (*PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);

typedef void (*PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
typedef void (*PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (*PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (*PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);

typedef void (*PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);

typedef GLvoid* (*PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (*PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);







typedef void (*PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);

typedef void (*PFNGLBINDVERTEXARRAYPROC) (GLuint array);
typedef void (*PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);
typedef void (*PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);
typedef GLboolean (*PFNGLISVERTEXARRAYPROC) (GLuint array);

typedef void (*PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar* const *uniformNames, GLuint *uniformIndices);
typedef void (*PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
typedef void (*PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
typedef GLuint (*PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);
typedef void (*PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
typedef void (*PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
typedef void (*PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);

typedef void (*PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

typedef void (*PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
typedef void (*PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
typedef void (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex);
typedef void (*PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, const GLint *basevertex);

typedef void (*PFNGLPROVOKINGVERTEXPROC) (GLenum mode);

typedef GLsync (*PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);
typedef GLboolean (*PFNGLISSYNCPROC) (GLsync sync);
typedef void (*PFNGLDELETESYNCPROC) (GLsync sync);
typedef GLenum (*PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (*PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (*PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
typedef void (*PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);

typedef void (*PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (*PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (*PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);
typedef void (*PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);

typedef void (*PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);
typedef void (*PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (*PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (*PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);







typedef void (*PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);

typedef void (*PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
typedef void (*PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);
typedef void (*PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar* *path, const GLint *length);
typedef GLboolean (*PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);
typedef void (*PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
typedef void (*PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);

typedef void (*PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
typedef GLint (*PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);

typedef void (*PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);
typedef void (*PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);
typedef GLboolean (*PFNGLISSAMPLERPROC) (GLuint sampler);
typedef void (*PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);
typedef void (*PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);
typedef void (*PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);
typedef void (*PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);
typedef void (*PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);
typedef void (*PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);
typedef void (*PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);
typedef void (*PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);
typedef void (*PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);
typedef void (*PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);

typedef void (*PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);
typedef void (*PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);
typedef void (*PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);

typedef void (*PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);
typedef void (*PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
typedef void (*PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);
typedef void (*PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
typedef void (*PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);
typedef void (*PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
typedef void (*PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
typedef void (*PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
typedef void (*PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
typedef void (*PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
typedef void (*PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
typedef void (*PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
typedef void (*PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
typedef void (*PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
typedef void (*PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (*PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (*PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (*PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (*PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (*PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (*PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
typedef void (*PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
typedef void (*PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);
typedef void (*PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
typedef void (*PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);
typedef void (*PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);
typedef void (*PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);
typedef void (*PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);
typedef void (*PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
typedef void (*PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
typedef void (*PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (*PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (*PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (*PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (*PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (*PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void (*PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (*PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);

typedef void (*PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const GLvoid *indirect);
typedef void (*PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const GLvoid *indirect);

typedef void (*PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);
typedef void (*PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
typedef void (*PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);

typedef GLint (*PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
typedef GLuint (*PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
typedef void (*PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
typedef void (*PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
typedef void (*PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
typedef void (*PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
typedef void (*PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
typedef void (*PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);

typedef void (*PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);
typedef void (*PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);

typedef void (*PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);
typedef void (*PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);
typedef void (*PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);
typedef GLboolean (*PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);
typedef void (*PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);
typedef void (*PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);
typedef void (*PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);

typedef void (*PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);
typedef void (*PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);
typedef void (*PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);
typedef void (*PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);

typedef void (*PFNGLRELEASESHADERCOMPILERPROC) (void);
typedef void (*PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
typedef void (*PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
typedef void (*PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
typedef void (*PFNGLCLEARDEPTHFPROC) (GLfloat d);

typedef void (*PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);
typedef void (*PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);
typedef void (*PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);

typedef void (*PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (*PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);
typedef GLuint (*PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar* const *strings);
typedef void (*PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (*PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);
typedef void (*PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);
typedef GLboolean (*PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (*PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);
typedef void (*PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);
typedef void (*PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);
typedef void (*PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);
typedef void (*PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);
typedef void (*PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (*PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (*PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (*PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (*PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (*PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (*PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (*PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (*PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (*PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (*PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (*PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (*PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);
typedef void (*PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);

typedef void (*PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);
typedef void (*PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (*PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);

typedef void (*PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
typedef void (*PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (*PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
typedef void (*PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (*PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
typedef void (*PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
typedef void (*PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
typedef void (*PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);







typedef GLsync (*PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);

typedef void (*PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
typedef void (*PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
typedef void (*PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const GLvoid *userParam);
typedef GLuint (*PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);

typedef GLenum (*PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);
typedef void (*PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
typedef void (*PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
typedef void (*PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
typedef void (*PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
typedef void (*PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
typedef void (*PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
typedef void (*PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
typedef void (*PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
typedef void (*PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
typedef void (*PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
typedef void (*PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
typedef void (*PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
typedef void (*PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
typedef void (*PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
typedef void (*PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
typedef void (*PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
typedef void (*PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
typedef void (*PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
typedef void (*PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);

typedef void (*PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount, GLuint baseinstance);
typedef void (*PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount, GLuint baseinstance);
typedef void (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount, GLint basevertex, GLuint baseinstance);

typedef void (*PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei primcount);
typedef void (*PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei primcount);

typedef void (*PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);

typedef void (*PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);

typedef void (*PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (*PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);

typedef void (*PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (*PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (*PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (*PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

typedef void (*PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);







typedef void (*PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);

typedef void (*PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);

typedef void (*PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);
typedef void (*PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);

typedef void (*PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);

typedef void (*PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (*PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (*PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (*PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

typedef void (*PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
typedef void (*PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
typedef void (*PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (*PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (*PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);
typedef void (*PFNGLRESETMINMAXEXTPROC) (GLenum target);

typedef void (*PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
typedef void (*PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
typedef void (*PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);
typedef void (*PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (*PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);
typedef void (*PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (*PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
typedef void (*PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
typedef void (*PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);

typedef void (*PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
typedef void (*PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (*PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (*PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
typedef void (*PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);







typedef void (*PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);

typedef void (*PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);
typedef void (*PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);
typedef void (*PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
typedef void (*PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);
typedef void (*PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);
typedef void (*PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);

typedef void (*PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);

typedef GLboolean (*PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);
typedef void (*PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);
typedef void (*PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);
typedef void (*PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);
typedef GLboolean (*PFNGLISTEXTUREEXTPROC) (GLuint texture);
typedef void (*PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);

typedef void (*PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);
typedef void (*PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);

typedef void (*PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);
typedef void (*PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);

typedef void (*PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);
typedef void (*PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);

typedef void (*PFNGLARRAYELEMENTEXTPROC) (GLint i);
typedef void (*PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
typedef void (*PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (*PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);
typedef void (*PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);
typedef void (*PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
typedef void (*PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
typedef void (*PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
typedef void (*PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);

typedef void (*PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);

typedef void (*PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);
typedef void (*PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);
typedef void (*PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);
typedef void (*PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);

typedef void (*PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);
typedef void (*PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);

typedef void (*PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);
typedef void (*PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);

typedef GLint (*PFNGLGETINSTRUMENTSSGIXPROC) (void);
typedef void (*PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);
typedef GLint (*PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);
typedef void (*PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);
typedef void (*PFNGLSTARTINSTRUMENTSSGIXPROC) (void);
typedef void (*PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);

typedef void (*PFNGLFRAMEZOOMSGIXPROC) (GLint factor);







typedef void (*PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);

typedef void (*PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
typedef void (*PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
typedef void (*PFNGLDEFORMSGIXPROC) (GLbitfield mask);
typedef void (*PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);
typedef void (*PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);
typedef void (*PFNGLFLUSHRASTERSGIXPROC) (void);

typedef void (*PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);
typedef void (*PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);

typedef void (*PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
typedef void (*PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (*PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (*PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);

typedef void (*PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
typedef void (*PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);

typedef void (*PFNGLHINTPGIPROC) (GLenum target, GLint mode);

typedef void (*PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
typedef void (*PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);
typedef void (*PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);

typedef void (*PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);
typedef void (*PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);
typedef void (*PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);
typedef void (*PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);
typedef void (*PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);

typedef void (*PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);







typedef void (*PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);

typedef void (*PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);
typedef void (*PFNGLUNLOCKARRAYSEXTPROC) (void);

typedef void (*PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);
typedef void (*PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);

typedef void (*PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);
typedef void (*PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);
typedef void (*PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);
typedef void (*PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);
typedef void (*PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);
typedef void (*PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);
typedef void (*PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);
typedef void (*PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);
typedef void (*PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);
typedef void (*PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);
typedef void (*PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);
typedef void (*PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);
typedef void (*PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);
typedef void (*PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);
typedef void (*PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);
typedef void (*PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);

typedef void (*PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);

typedef void (*PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);
typedef void (*PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);
typedef void (*PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);

typedef void (*PFNGLASYNCMARKERSGIXPROC) (GLuint marker);
typedef GLint (*PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);
typedef GLint (*PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);
typedef GLuint (*PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);
typedef void (*PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);
typedef GLboolean (*PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);

typedef void (*PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);
typedef void (*PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);
typedef void (*PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);
typedef void (*PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);

typedef void (*PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);
typedef void (*PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);
typedef void (*PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);

typedef void (*PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (*PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);
typedef void (*PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (*PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);
typedef void (*PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (*PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);
typedef void (*PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);
typedef void (*PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);
typedef void (*PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);
typedef void (*PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);
typedef void (*PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (*PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);
typedef void (*PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);
typedef void (*PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);
typedef void (*PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);
typedef void (*PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);
typedef void (*PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);







typedef void (*PFNGLTEXTURENORMALEXTPROC) (GLenum mode);

typedef void (*PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (*PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);

typedef void (*PFNGLFOGCOORDFEXTPROC) (GLfloat coord);
typedef void (*PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);
typedef void (*PFNGLFOGCOORDDEXTPROC) (GLdouble coord);
typedef void (*PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);
typedef void (*PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);

typedef void (*PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
typedef void (*PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);
typedef void (*PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
typedef void (*PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);
typedef void (*PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
typedef void (*PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);
typedef void (*PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
typedef void (*PFNGLTANGENT3IVEXTPROC) (const GLint *v);
typedef void (*PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
typedef void (*PFNGLTANGENT3SVEXTPROC) (const GLshort *v);
typedef void (*PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
typedef void (*PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);
typedef void (*PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
typedef void (*PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);
typedef void (*PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
typedef void (*PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);
typedef void (*PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
typedef void (*PFNGLBINORMAL3IVEXTPROC) (const GLint *v);
typedef void (*PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
typedef void (*PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);
typedef void (*PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);

typedef void (*PFNGLFINISHTEXTURESUNXPROC) (void);

typedef void (*PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);
typedef void (*PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);
typedef void (*PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);
typedef void (*PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);
typedef void (*PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);
typedef void (*PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);
typedef void (*PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);
typedef void (*PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);

typedef void (*PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);
typedef void (*PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);
typedef void (*PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);
typedef void (*PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);
typedef void (*PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);
typedef void (*PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);
typedef void (*PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);

typedef void (*PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
typedef void (*PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);
typedef void (*PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);
typedef void (*PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);
typedef void (*PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);
typedef void (*PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (*PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);
typedef void (*PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);
typedef void (*PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);
typedef void (*PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);
typedef void (*PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);
typedef void (*PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (*PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (*PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);
typedef void (*PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);
typedef void (*PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);
typedef void (*PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);
typedef void (*PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);
typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);







typedef void (*PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);







typedef void (*PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);

typedef void (*PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);
typedef void (*PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);
typedef void (*PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);

typedef void (*PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);
typedef void (*PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);

typedef void (*PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);
typedef void (*PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);
typedef void (*PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);
typedef void (*PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);
typedef void (*PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (*PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
typedef void (*PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (*PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
typedef void (*PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);
typedef void (*PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);

typedef void (*PFNGLRESIZEBUFFERSMESAPROC) (void);

typedef void (*PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);
typedef void (*PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);
typedef void (*PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);
typedef void (*PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);
typedef void (*PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);
typedef void (*PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);
typedef void (*PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);
typedef void (*PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);
typedef void (*PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);
typedef void (*PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);
typedef void (*PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);
typedef void (*PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);
typedef void (*PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);
typedef void (*PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);
typedef void (*PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);
typedef void (*PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);
typedef void (*PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);
typedef void (*PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);
typedef void (*PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (*PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);

typedef void (*PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
typedef void (*PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);

typedef void (*PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
typedef void (*PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
typedef void (*PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
typedef void (*PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
typedef void (*PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
typedef void (*PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
typedef void (*PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
typedef void (*PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);

typedef void (*PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);

typedef void (*PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);
typedef void (*PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);

typedef void (*PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);







typedef void (*PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);

typedef void (*PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);
typedef void (*PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);
typedef GLboolean (*PFNGLISFENCENVPROC) (GLuint fence);
typedef GLboolean (*PFNGLTESTFENCENVPROC) (GLuint fence);
typedef void (*PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);
typedef void (*PFNGLFINISHFENCENVPROC) (GLuint fence);
typedef void (*PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);

typedef void (*PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);
typedef void (*PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);
typedef void (*PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);
typedef void (*PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);
typedef void (*PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
typedef void (*PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);

typedef void (*PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);
typedef void (*PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);

typedef GLboolean (*PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);
typedef void (*PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);
typedef void (*PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);
typedef void (*PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);
typedef void (*PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);
typedef void (*PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);
typedef void (*PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (*PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);
typedef void (*PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);
typedef void (*PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (*PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (*PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
typedef GLboolean (*PFNGLISPROGRAMNVPROC) (GLuint id);
typedef void (*PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);
typedef void (*PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);
typedef void (*PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);
typedef void (*PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLdouble *v);
typedef void (*PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *v);
typedef void (*PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);
typedef void (*PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);
typedef void (*PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);
typedef void (*PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);
typedef void (*PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);
typedef void (*PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (*PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);
typedef void (*PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);
typedef void (*PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (*PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (*PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (*PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);
typedef void (*PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);
typedef void (*PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);

typedef void (*PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);
typedef void (*PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);
typedef void (*PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);
typedef void (*PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);

typedef GLuint (*PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);
typedef void (*PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);
typedef void (*PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);
typedef void (*PFNGLBEGINFRAGMENTSHADERATIPROC) (void);
typedef void (*PFNGLENDFRAGMENTSHADERATIPROC) (void);
typedef void (*PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);
typedef void (*PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);
typedef void (*PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (*PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (*PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (*PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (*PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (*PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (*PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);

typedef void (*PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);
typedef void (*PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);

typedef GLuint (*PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
typedef GLboolean (*PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (*PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
typedef void (*PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
typedef void (*PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (*PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (*PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
typedef void (*PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (*PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);

typedef void (*PFNGLBEGINVERTEXSHADEREXTPROC) (void);
typedef void (*PFNGLENDVERTEXSHADEREXTPROC) (void);
typedef void (*PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);
typedef GLuint (*PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);
typedef void (*PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);
typedef void (*PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);
typedef void (*PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
typedef void (*PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
typedef void (*PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (*PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (*PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
typedef void (*PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);
typedef GLuint (*PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
typedef void (*PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);
typedef void (*PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);
typedef void (*PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);
typedef void (*PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);
typedef void (*PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);
typedef void (*PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);
typedef void (*PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);
typedef void (*PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);
typedef void (*PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);
typedef void (*PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);
typedef void (*PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);
typedef void (*PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
typedef void (*PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);
typedef GLuint (*PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);
typedef GLuint (*PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);
typedef GLuint (*PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);
typedef GLuint (*PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);
typedef GLuint (*PFNGLBINDPARAMETEREXTPROC) (GLenum value);
typedef GLboolean (*PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);
typedef void (*PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (*PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (*PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
typedef void (*PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);
typedef void (*PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (*PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (*PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);
typedef void (*PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);
typedef void (*PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);
typedef void (*PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);

typedef void (*PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);
typedef void (*PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (*PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);
typedef void (*PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (*PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);
typedef void (*PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (*PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);
typedef void (*PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (*PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);
typedef void (*PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (*PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);
typedef void (*PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (*PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);
typedef void (*PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (*PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);
typedef void (*PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (*PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);
typedef void (*PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (*PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);
typedef void (*PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (*PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (*PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (*PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (*PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (*PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);
typedef void (*PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (*PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (*PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (*PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (*PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);
typedef void (*PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);
typedef void (*PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);
typedef void (*PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);
typedef void (*PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);
typedef void (*PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (*PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);
typedef void (*PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (*PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);
typedef void (*PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);
typedef void (*PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);
typedef void (*PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);

typedef void (*PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);
typedef void (*PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);
typedef void (*PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);







typedef void (*PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);

typedef void (*PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);
typedef void (*PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);
typedef GLboolean (*PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);
typedef void (*PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);
typedef void (*PFNGLENDOCCLUSIONQUERYNVPROC) (void);
typedef void (*PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);
typedef void (*PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);

typedef void (*PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);
typedef void (*PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);

typedef void (*PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);

typedef void (*PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
typedef void (*PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
typedef void (*PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
typedef void (*PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (*PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);

typedef void (*PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);
typedef void (*PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);
typedef void (*PFNGLSETFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean (*PFNGLISFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean (*PFNGLTESTFENCEAPPLEPROC) (GLuint fence);
typedef void (*PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);
typedef GLboolean (*PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);
typedef void (*PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);

typedef void (*PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);
typedef void (*PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);
typedef void (*PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);
typedef GLboolean (*PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);

typedef void (*PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);
typedef void (*PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);
typedef void (*PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);

typedef void (*PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);

typedef void (*PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
typedef void (*PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
typedef void (*PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
typedef void (*PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);

typedef void (*PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);
typedef void (*PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (*PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (*PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
typedef void (*PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (*PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
typedef void (*PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);
typedef void (*PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);
typedef void (*PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (*PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (*PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);
typedef void (*PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (*PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);
typedef void (*PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (*PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (*PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (*PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (*PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);
typedef void (*PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);
typedef void (*PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);
typedef void (*PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (*PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);
typedef void (*PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);
typedef void (*PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);
typedef void (*PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);
typedef void (*PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (*PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);
typedef void (*PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (*PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (*PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (*PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (*PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);
typedef void (*PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
typedef void (*PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
typedef void (*PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
typedef void (*PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);

typedef void (*PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid *pointer);
typedef void (*PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);

typedef void (*PFNGLPRIMITIVERESTARTNVPROC) (void);
typedef void (*PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);

typedef GLvoid* (*PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);
typedef void (*PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);

typedef void (*PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (*PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);

typedef void (*PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (*PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);

typedef void (*PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);

typedef void (*PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);

typedef GLboolean (*PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
typedef void (*PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
typedef void (*PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
typedef void (*PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
typedef void (*PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef GLboolean (*PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
typedef void (*PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
typedef void (*PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
typedef void (*PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
typedef GLenum (*PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
typedef void (*PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (*PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (*PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (*PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (*PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void (*PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);







typedef void (*PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid *string);

typedef void (*PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClearTag);

typedef void (*PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);







typedef void (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

typedef void (*PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT *params);
typedef void (*PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EXT *params);

typedef void (*PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
typedef void (*PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);

typedef void (*PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint param);
typedef void (*PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, GLsizeiptr size);

typedef void (*PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (*PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);
typedef void (*PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (*PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (*PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);
typedef void (*PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (*PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (*PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);
typedef void (*PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (*PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (*PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);
typedef void (*PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (*PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);
typedef void (*PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);
typedef void (*PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);
typedef void (*PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);

typedef void (*PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);
typedef void (*PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (*PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (*PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);







typedef void (*PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);

typedef void (*PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);
typedef void (*PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);
typedef void (*PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);
typedef void (*PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (*PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);
typedef void (*PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);
typedef void (*PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (*PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (*PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);
typedef void (*PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);
typedef void (*PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);
typedef void (*PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);
typedef void (*PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);
typedef void (*PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);
typedef void (*PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);
typedef void (*PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);

typedef void (*PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);
typedef void (*PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);
typedef GLint (*PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);
typedef void (*PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);
typedef void (*PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);
typedef void (*PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (*PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (*PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);

typedef void (*PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (*PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);

typedef void (*PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);

typedef void (*PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);
typedef void (*PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);
typedef void (*PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);

typedef void (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);

typedef void (*PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params);
typedef void (*PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params);
typedef void (*PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params);

typedef void (*PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (*PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);
typedef void (*PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);
typedef void (*PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef void (*PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
typedef GLboolean (*PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);

typedef void (*PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
typedef void (*PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);
typedef void (*PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
typedef void (*PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (*PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (*PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (*PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
typedef void (*PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
typedef GLint (*PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
typedef void (*PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
typedef void (*PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
typedef void (*PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);

typedef void (*PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
typedef GLint (*PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
typedef GLintptr (*PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);

typedef void (*PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
typedef void (*PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
typedef void (*PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
typedef void (*PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);







typedef void (*PFNGLFRAMETERMINATORGREMEDYPROC) (void);

typedef void (*PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);
typedef void (*PFNGLENDCONDITIONALRENDERNVPROC) (void);

typedef void (*PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
typedef void (*PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
typedef void (*PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);
typedef void (*PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params);
typedef void (*PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *params);
typedef void (*PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT *params);

typedef void (*PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);
typedef void (*PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);
typedef void (*PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (*PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (*PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);
typedef void (*PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);
typedef void (*PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);

typedef void (*PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);
typedef void (*PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);
typedef void (*PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (*PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (*PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (*PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (*PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);
typedef void (*PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (*PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (*PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (*PFNGLMATRIXPOPEXTPROC) (GLenum mode);
typedef void (*PFNGLMATRIXPUSHEXTPROC) (GLenum mode);
typedef void (*PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (*PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (*PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);
typedef void (*PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);
typedef void (*PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);
typedef void (*PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);
typedef void (*PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);
typedef void (*PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (*PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (*PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (*PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
typedef void (*PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);
typedef void (*PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (*PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
typedef void (*PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (*PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (*PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (*PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (*PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
typedef void (*PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);
typedef void (*PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
typedef void (*PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (*PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);
typedef void (*PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);
typedef void (*PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);
typedef void (*PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (*PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
typedef void (*PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (*PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
typedef void (*PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);
typedef void (*PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
typedef void (*PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);
typedef void (*PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);
typedef void (*PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);
typedef void (*PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);
typedef void (*PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);
typedef void (*PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);
typedef void (*PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);
typedef void (*PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLvoid* *data);
typedef void (*PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, GLvoid *img);
typedef void (*PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);
typedef void (*PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, GLvoid *img);
typedef void (*PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid *string);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);
typedef void (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);
typedef void (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);
typedef void (*PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, GLvoid *string);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);
typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);
typedef void (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);
typedef void (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);
typedef void (*PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);
typedef void (*PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);
typedef void (*PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);
typedef void (*PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);
typedef void (*PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);
typedef void (*PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);
typedef void (*PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);
typedef void (*PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (*PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (*PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (*PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);
typedef void (*PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (*PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (*PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (*PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (*PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);
typedef void (*PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (*PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (*PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (*PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void (*PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage);
typedef void (*PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data);
typedef GLvoid* (*PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);
typedef GLboolean (*PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);
typedef GLvoid* (*PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (*PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (*PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (*PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);
typedef void (*PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, GLvoid* *params);
typedef void (*PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data);
typedef void (*PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (*PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (*PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);
typedef GLenum (*PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);
typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (*PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (*PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
typedef void (*PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);
typedef void (*PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);
typedef void (*PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);
typedef void (*PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);
typedef void (*PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);
typedef void (*PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);
typedef void (*PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (*PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);
typedef void (*PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);
typedef void (*PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);
typedef void (*PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (*PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

typedef void (*PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);
typedef void (*PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);
typedef void (*PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);

typedef void (*PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
typedef void (*PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
typedef void (*PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
typedef GLboolean (*PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);
typedef void (*PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);
typedef void (*PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);
typedef void (*PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);

typedef void (*PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
typedef void (*PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
typedef void (*PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
typedef void (*PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
typedef void (*PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
typedef void (*PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
typedef void (*PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
typedef void (*PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
typedef void (*PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);
typedef void (*PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);
typedef void (*PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);

typedef void (*PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);
typedef void (*PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);







typedef void (*PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);

typedef void (*PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);
typedef void (*PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (*PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);
typedef void (*PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);

typedef void (*PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const GLvoid *pointer);
typedef void (*PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, GLvoid* *params);

typedef void (*PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);
typedef void (*PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);
typedef GLboolean (*PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);
typedef void (*PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
typedef void (*PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
typedef void (*PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
typedef void (*PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);

typedef GLenum (*PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);
typedef GLenum (*PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);
typedef void (*PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLenum pname, GLint *params);

typedef void (*PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);
typedef void (*PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
typedef void (*PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
typedef void (*PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);
typedef void (*PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, GLint *params);
typedef void (*PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);
typedef void (*PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);
typedef void (*PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);
typedef GLenum (*PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);
typedef void (*PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);
typedef void (*PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);
typedef void (*PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);







typedef void (*PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);

typedef void (*PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);
typedef void (*PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);
typedef GLuint (*PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);

typedef void (*PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
typedef void (*PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
typedef GLboolean (*PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);
typedef void (*PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
typedef void (*PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
typedef GLboolean (*PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
typedef void (*PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
typedef void (*PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
typedef void (*PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
typedef void (*PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
typedef void (*PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (*PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
typedef void (*PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
typedef void (*PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

typedef void (*PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
typedef void (*PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (*PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (*PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (*PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (*PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (*PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);
typedef void (*PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
typedef void (*PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
typedef void (*PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
typedef void (*PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (*PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);







typedef void (*PFNGLTEXTUREBARRIERNVPROC) (void);

typedef void (*PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
typedef void (*PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);

typedef void (*PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
typedef void (*PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
typedef void (*PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (*PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (*PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
typedef void (*PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
typedef void (*PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);

typedef void (*PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count, const GLuint *params);
typedef void (*PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint index, GLuint *param);

typedef void (*PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);
typedef void (*PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);
typedef void (*PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (*PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (*PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (*PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (*PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (*PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);
typedef void (*PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);
typedef void (*PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (*PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (*PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (*PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (*PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (*PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (*PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (*PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);
typedef void (*PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);
typedef void (*PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (*PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (*PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (*PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (*PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (*PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (*PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
typedef void (*PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);
typedef void (*PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (*PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (*PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (*PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (*PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (*PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
typedef void (*PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

typedef void (*PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);
typedef void (*PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);
typedef void (*PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (*PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (*PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (*PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (*PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (*PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);
typedef void (*PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);
typedef void (*PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);
typedef void (*PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (*PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (*PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (*PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (*PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (*PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);
typedef void (*PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);
typedef void (*PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);
typedef void (*PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);

typedef void (*PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);
typedef void (*PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *names);
typedef GLboolean (*PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);

typedef void (*PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
typedef void (*PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
typedef void (*PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
typedef GLuint (*PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);

typedef void (*PFNGLVDPAUINITNVPROC) (const GLvoid *vdpDevice, const GLvoid *getProcAddress);
typedef void (*PFNGLVDPAUFININVPROC) (void);
typedef GLvdpauSurfaceNV (*PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
typedef GLvdpauSurfaceNV (*PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
typedef void (*PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);
typedef void (*PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);
typedef void (*PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
typedef void (*PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access);
typedef void (*PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
typedef void (*PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);

typedef void (*PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (*PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (*PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (*PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (*PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (*PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);

typedef void (*PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat *val);







typedef GLsync (*PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);

typedef void (*PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const GLvoid *indirect, GLsizei primcount, GLsizei stride);
typedef void (*PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const GLvoid *indirect, GLsizei primcount, GLsizei stride);

typedef GLuint (*PFNGLGENPATHSNVPROC) (GLsizei range);
typedef void (*PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);
typedef GLboolean (*PFNGLISPATHNVPROC) (GLuint path);
typedef void (*PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const GLvoid *coords);
typedef void (*PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const GLvoid *coords);
typedef void (*PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const GLvoid *coords);
typedef void (*PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const GLvoid *coords);
typedef void (*PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const GLvoid *pathString);
typedef void (*PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const GLvoid *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (*PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (*PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
typedef void (*PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);
typedef void (*PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
typedef void (*PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
typedef void (*PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *value);
typedef void (*PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);
typedef void (*PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *value);
typedef void (*PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);
typedef void (*PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat *dashArray);
typedef void (*PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);
typedef void (*PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);
typedef void (*PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);
typedef void (*PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);
typedef void (*PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
typedef void (*PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
typedef void (*PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);
typedef void (*PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
typedef void (*PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
typedef void (*PFNGLPATHFOGGENNVPROC) (GLenum genMode);
typedef void (*PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);
typedef void (*PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);
typedef void (*PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (*PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
typedef void (*PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value);
typedef void (*PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *value);
typedef void (*PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);
typedef void (*PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);
typedef void (*PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);
typedef void (*PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
typedef void (*PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
typedef void (*PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
typedef void (*PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value);
typedef void (*PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *value);
typedef void (*PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *value);
typedef void (*PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat *value);
typedef GLboolean (*PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);
typedef GLboolean (*PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);
typedef GLfloat (*PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);
typedef GLboolean (*PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);

typedef void (*PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);

typedef GLuint64 (*PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);
typedef GLuint64 (*PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);
typedef void (*PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
typedef void (*PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);
typedef GLuint64 (*PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (*PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);
typedef void (*PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);
typedef void (*PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);
typedef void (*PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);
typedef void (*PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);
typedef void (*PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);
typedef GLboolean (*PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
typedef GLboolean (*PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);
	]]
	
	-- GLU
	ffi.cdef[[
typedef struct GLUnurbs GLUnurbs;
typedef struct GLUquadric GLUquadric;
typedef struct GLUtesselator GLUtesselator;

typedef GLUnurbs GLUnurbsObj;
typedef GLUquadric GLUquadricObj;
typedef GLUtesselator GLUtesselatorObj;
typedef GLUtesselator GLUtriangulatorObj;

static const int GLU_FALSE = 0;
static const int GLU_TRUE = 1;
static const int GLU_VERSION_1_1 = 1;
static const int GLU_VERSION_1_2 = 1;
static const int GLU_VERSION = 100800;
static const int GLU_EXTENSIONS = 100801;
static const int GLU_INVALID_ENUM = 100900;
static const int GLU_INVALID_VALUE = 100901;
static const int GLU_OUT_OF_MEMORY = 100902;
static const int GLU_INVALID_OPERATION = 100904;
static const int GLU_OUTLINE_POLYGON = 100240;
static const int GLU_OUTLINE_PATCH = 100241;
static const int GLU_NURBS_ERROR1 = 100251;
static const int GLU_NURBS_ERROR2 = 100252;
static const int GLU_NURBS_ERROR3 = 100253;
static const int GLU_NURBS_ERROR4 = 100254;
static const int GLU_NURBS_ERROR5 = 100255;
static const int GLU_NURBS_ERROR6 = 100256;
static const int GLU_NURBS_ERROR7 = 100257;
static const int GLU_NURBS_ERROR8 = 100258;
static const int GLU_NURBS_ERROR9 = 100259;
static const int GLU_NURBS_ERROR10 = 100260;
static const int GLU_NURBS_ERROR11 = 100261;
static const int GLU_NURBS_ERROR12 = 100262;
static const int GLU_NURBS_ERROR13 = 100263;
static const int GLU_NURBS_ERROR14 = 100264;
static const int GLU_NURBS_ERROR15 = 100265;
static const int GLU_NURBS_ERROR16 = 100266;
static const int GLU_NURBS_ERROR17 = 100267;
static const int GLU_NURBS_ERROR18 = 100268;
static const int GLU_NURBS_ERROR19 = 100269;
static const int GLU_NURBS_ERROR20 = 100270;
static const int GLU_NURBS_ERROR21 = 100271;
static const int GLU_NURBS_ERROR22 = 100272;
static const int GLU_NURBS_ERROR23 = 100273;
static const int GLU_NURBS_ERROR24 = 100274;
static const int GLU_NURBS_ERROR25 = 100275;
static const int GLU_NURBS_ERROR26 = 100276;
static const int GLU_NURBS_ERROR27 = 100277;
static const int GLU_NURBS_ERROR28 = 100278;
static const int GLU_NURBS_ERROR29 = 100279;
static const int GLU_NURBS_ERROR30 = 100280;
static const int GLU_NURBS_ERROR31 = 100281;
static const int GLU_NURBS_ERROR32 = 100282;
static const int GLU_NURBS_ERROR33 = 100283;
static const int GLU_NURBS_ERROR34 = 100284;
static const int GLU_NURBS_ERROR35 = 100285;
static const int GLU_NURBS_ERROR36 = 100286;
static const int GLU_NURBS_ERROR37 = 100287;
static const int GLU_AUTO_LOAD_MATRIX = 100200;
static const int GLU_CULLING = 100201;
static const int GLU_SAMPLING_TOLERANCE = 100203;
static const int GLU_DISPLAY_MODE = 100204;
static const int GLU_PARAMETRIC_TOLERANCE = 100202;
static const int GLU_SAMPLING_METHOD = 100205;
static const int GLU_U_STEP = 100206;
static const int GLU_V_STEP = 100207;
static const int GLU_PATH_LENGTH = 100215;
static const int GLU_PARAMETRIC_ERROR = 100216;
static const int GLU_DOMAIN_DISTANCE = 100217;
static const int GLU_MAP1_TRIM_2 = 100210;
static const int GLU_MAP1_TRIM_3 = 100211;
static const int GLU_POINT = 100010;
static const int GLU_LINE = 100011;
static const int GLU_FILL = 100012;
static const int GLU_SILHOUETTE = 100013;
static const int GLU_ERROR = 100103;
static const int GLU_SMOOTH = 100000;
static const int GLU_FLAT = 100001;
static const int GLU_NONE = 100002;
static const int GLU_OUTSIDE = 100020;
static const int GLU_INSIDE = 100021;
static const int GLU_TESS_BEGIN = 100100;
static const int GLU_BEGIN = 100100;
static const int GLU_TESS_VERTEX = 100101;
static const int GLU_VERTEX = 100101;
static const int GLU_TESS_END = 100102;
static const int GLU_END = 100102;
static const int GLU_TESS_ERROR = 100103;
static const int GLU_TESS_EDGE_FLAG = 100104;
static const int GLU_EDGE_FLAG = 100104;
static const int GLU_TESS_COMBINE = 100105;
static const int GLU_TESS_BEGIN_DATA = 100106;
static const int GLU_TESS_VERTEX_DATA = 100107;
static const int GLU_TESS_END_DATA = 100108;
static const int GLU_TESS_ERROR_DATA = 100109;
static const int GLU_TESS_EDGE_FLAG_DATA = 100110;
static const int GLU_TESS_COMBINE_DATA = 100111;
static const int GLU_CW = 100120;
static const int GLU_CCW = 100121;
static const int GLU_INTERIOR = 100122;
static const int GLU_EXTERIOR = 100123;
static const int GLU_UNKNOWN = 100124;
static const int GLU_TESS_WINDING_RULE = 100140;
static const int GLU_TESS_BOUNDARY_ONLY = 100141;
static const int GLU_TESS_TOLERANCE = 100142;
static const int GLU_TESS_ERROR1 = 100151;
static const int GLU_TESS_ERROR2 = 100152;
static const int GLU_TESS_ERROR3 = 100153;
static const int GLU_TESS_ERROR4 = 100154;
static const int GLU_TESS_ERROR5 = 100155;
static const int GLU_TESS_ERROR6 = 100156;
static const int GLU_TESS_ERROR7 = 100157;
static const int GLU_TESS_ERROR8 = 100158;
static const int GLU_TESS_MISSING_BEGIN_POLYGON = 100151;
static const int GLU_TESS_MISSING_BEGIN_CONTOUR = 100152;
static const int GLU_TESS_MISSING_END_POLYGON = 100153;
static const int GLU_TESS_MISSING_END_CONTOUR = 100154;
static const int GLU_TESS_COORD_TOO_LARGE = 100155;
static const int GLU_TESS_NEED_COMBINE_CALLBACK = 100156;
static const int GLU_TESS_WINDING_ODD = 100130;
static const int GLU_TESS_WINDING_NONZERO = 100131;
static const int GLU_TESS_WINDING_POSITIVE = 100132;
static const int GLU_TESS_WINDING_NEGATIVE = 100133;
static const int GLU_TESS_WINDING_ABS_GEQ_TWO = 100134;
static const int GLU_INCOMPATIBLE_GL_VERSION = 100903;

typedef void (*_GLUfuncptr)();

extern void gluBeginCurve (GLUnurbs* nurb);
extern void gluBeginPolygon (GLUtesselator* tess);
extern void gluBeginSurface (GLUnurbs* nurb);
extern void gluBeginTrim (GLUnurbs* nurb);
extern GLint gluBuild1DMipmaps (GLenum target, GLint internalFormat, GLsizei width, GLenum format, GLenum type, const void *data);
extern GLint gluBuild2DMipmaps (GLenum target, GLint internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *data);
extern void gluCylinder (GLUquadric* quad, GLdouble base, GLdouble top, GLdouble height, GLint slices, GLint stacks);
extern void gluDeleteNurbsRenderer (GLUnurbs* nurb);
extern void gluDeleteQuadric (GLUquadric* quad);
extern void gluDeleteTess (GLUtesselator* tess);
extern void gluDisk (GLUquadric* quad, GLdouble inner, GLdouble outer, GLint slices, GLint loops);
extern void gluEndCurve (GLUnurbs* nurb);
extern void gluEndPolygon (GLUtesselator* tess);
extern void gluEndSurface (GLUnurbs* nurb);
extern void gluEndTrim (GLUnurbs* nurb);
extern const GLubyte * gluErrorString (GLenum error);
extern const wchar_t * gluErrorUnicodeStringEXT (GLenum error);
extern void gluGetNurbsProperty (GLUnurbs* nurb, GLenum property, GLfloat* data);
extern const GLubyte * gluGetString (GLenum name);
extern void gluGetTessProperty (GLUtesselator* tess, GLenum which, GLdouble* data);
extern void gluLoadSamplingMatrices (GLUnurbs* nurb, const GLfloat *model, const GLfloat *perspective, const GLint *view);
extern void gluLookAt (GLdouble eyeX, GLdouble eyeY, GLdouble eyeZ, GLdouble centerX, GLdouble centerY, GLdouble centerZ, GLdouble upX, GLdouble upY, GLdouble upZ);
extern GLUnurbs* gluNewNurbsRenderer (void);
extern GLUquadric* gluNewQuadric (void);
extern GLUtesselator* gluNewTess (void);
extern void gluNextContour (GLUtesselator* tess, GLenum type);
extern void gluNurbsCallback (GLUnurbs* nurb, GLenum which, _GLUfuncptr CallBackFunc);
extern void gluNurbsCurve (GLUnurbs* nurb, GLint knotCount, GLfloat *knots, GLint stride, GLfloat *control, GLint order, GLenum type);
extern void gluNurbsProperty (GLUnurbs* nurb, GLenum property, GLfloat value);
extern void gluNurbsSurface (GLUnurbs* nurb, GLint sKnotCount, GLfloat* sKnots, GLint tKnotCount, GLfloat* tKnots, GLint sStride, GLint tStride, GLfloat* control, GLint sOrder, GLint tOrder, GLenum type);
extern void gluOrtho2D (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top);
extern void gluPartialDisk (GLUquadric* quad, GLdouble inner, GLdouble outer, GLint slices, GLint loops, GLdouble start, GLdouble sweep);
extern void gluPerspective (GLdouble fovy, GLdouble aspect, GLdouble zNear, GLdouble zFar);
extern void gluPickMatrix (GLdouble x, GLdouble y, GLdouble delX, GLdouble delY, GLint *viewport);
extern GLint gluProject (GLdouble objX, GLdouble objY, GLdouble objZ, const GLdouble *model, const GLdouble *proj, const GLint *view, GLdouble* winX, GLdouble* winY, GLdouble* winZ);
extern void gluPwlCurve (GLUnurbs* nurb, GLint count, GLfloat* data, GLint stride, GLenum type);
extern void gluQuadricCallback (GLUquadric* quad, GLenum which, _GLUfuncptr CallBackFunc);
extern void gluQuadricDrawStyle (GLUquadric* quad, GLenum draw);
extern void gluQuadricNormals (GLUquadric* quad, GLenum normal);
extern void gluQuadricOrientation (GLUquadric* quad, GLenum orientation);
extern void gluQuadricTexture (GLUquadric* quad, GLboolean texture);
extern GLint gluScaleImage (GLenum format, GLsizei wIn, GLsizei hIn, GLenum typeIn, const void *dataIn, GLsizei wOut, GLsizei hOut, GLenum typeOut, GLvoid* dataOut);
extern void gluSphere (GLUquadric* quad, GLdouble radius, GLint slices, GLint stacks);
extern void gluTessBeginContour (GLUtesselator* tess);
extern void gluTessBeginPolygon (GLUtesselator* tess, GLvoid* data);
extern void gluTessCallback (GLUtesselator* tess, GLenum which, _GLUfuncptr CallBackFunc);
extern void gluTessEndContour (GLUtesselator* tess);
extern void gluTessEndPolygon (GLUtesselator* tess);
extern void gluTessNormal (GLUtesselator* tess, GLdouble valueX, GLdouble valueY, GLdouble valueZ);
extern void gluTessProperty (GLUtesselator* tess, GLenum which, GLdouble data);
extern void gluTessVertex (GLUtesselator* tess, GLdouble *location, GLvoid* data);
extern GLint gluUnProject (GLdouble winX, GLdouble winY, GLdouble winZ, const GLdouble *model, const GLdouble *proj, const GLint *view, GLdouble* objX, GLdouble* objY, GLdouble* objZ);
extern GLint gluUnProject4 (GLdouble winX, GLdouble winY, GLdouble winZ, GLdouble clipW, const GLdouble *model, const GLdouble *proj, const GLint *view, GLdouble nearVal, GLdouble farVal, GLdouble* objX, GLdouble* objY, GLdouble* objZ, GLdouble* objW);
	]]
	
	-- GLFW
	ffi.cdef[[
static const int GLFW_VERSION_MAJOR = 2;
static const int GLFW_VERSION_MINOR = 7;
static const int GLFW_VERSION_REVISION = 4;
static const int GLFW_RELEASE = 0;
static const int GLFW_PRESS = 1;
static const int GLFW_KEY_UNKNOWN = -1;
static const int GLFW_KEY_SPACE = 32;
static const int GLFW_KEY_SPECIAL = 256;
static const int GLFW_KEY_ESC = (GLFW_KEY_SPECIAL+1);
static const int GLFW_KEY_F1 = (GLFW_KEY_SPECIAL+2);
static const int GLFW_KEY_F2 = (GLFW_KEY_SPECIAL+3);
static const int GLFW_KEY_F3 = (GLFW_KEY_SPECIAL+4);
static const int GLFW_KEY_F4 = (GLFW_KEY_SPECIAL+5);
static const int GLFW_KEY_F5 = (GLFW_KEY_SPECIAL+6);
static const int GLFW_KEY_F6 = (GLFW_KEY_SPECIAL+7);
static const int GLFW_KEY_F7 = (GLFW_KEY_SPECIAL+8);
static const int GLFW_KEY_F8 = (GLFW_KEY_SPECIAL+9);
static const int GLFW_KEY_F9 = (GLFW_KEY_SPECIAL+10);
static const int GLFW_KEY_F10 = (GLFW_KEY_SPECIAL+11);
static const int GLFW_KEY_F11 = (GLFW_KEY_SPECIAL+12);
static const int GLFW_KEY_F12 = (GLFW_KEY_SPECIAL+13);
static const int GLFW_KEY_F13 = (GLFW_KEY_SPECIAL+14);
static const int GLFW_KEY_F14 = (GLFW_KEY_SPECIAL+15);
static const int GLFW_KEY_F15 = (GLFW_KEY_SPECIAL+16);
static const int GLFW_KEY_F16 = (GLFW_KEY_SPECIAL+17);
static const int GLFW_KEY_F17 = (GLFW_KEY_SPECIAL+18);
static const int GLFW_KEY_F18 = (GLFW_KEY_SPECIAL+19);
static const int GLFW_KEY_F19 = (GLFW_KEY_SPECIAL+20);
static const int GLFW_KEY_F20 = (GLFW_KEY_SPECIAL+21);
static const int GLFW_KEY_F21 = (GLFW_KEY_SPECIAL+22);
static const int GLFW_KEY_F22 = (GLFW_KEY_SPECIAL+23);
static const int GLFW_KEY_F23 = (GLFW_KEY_SPECIAL+24);
static const int GLFW_KEY_F24 = (GLFW_KEY_SPECIAL+25);
static const int GLFW_KEY_F25 = (GLFW_KEY_SPECIAL+26);
static const int GLFW_KEY_UP = (GLFW_KEY_SPECIAL+27);
static const int GLFW_KEY_DOWN = (GLFW_KEY_SPECIAL+28);
static const int GLFW_KEY_LEFT = (GLFW_KEY_SPECIAL+29);
static const int GLFW_KEY_RIGHT = (GLFW_KEY_SPECIAL+30);
static const int GLFW_KEY_LSHIFT = (GLFW_KEY_SPECIAL+31);
static const int GLFW_KEY_RSHIFT = (GLFW_KEY_SPECIAL+32);
static const int GLFW_KEY_LCTRL = (GLFW_KEY_SPECIAL+33);
static const int GLFW_KEY_RCTRL = (GLFW_KEY_SPECIAL+34);
static const int GLFW_KEY_LALT = (GLFW_KEY_SPECIAL+35);
static const int GLFW_KEY_RALT = (GLFW_KEY_SPECIAL+36);
static const int GLFW_KEY_TAB = (GLFW_KEY_SPECIAL+37);
static const int GLFW_KEY_ENTER = (GLFW_KEY_SPECIAL+38);
static const int GLFW_KEY_BACKSPACE = (GLFW_KEY_SPECIAL+39);
static const int GLFW_KEY_INSERT = (GLFW_KEY_SPECIAL+40);
static const int GLFW_KEY_DEL = (GLFW_KEY_SPECIAL+41);
static const int GLFW_KEY_PAGEUP = (GLFW_KEY_SPECIAL+42);
static const int GLFW_KEY_PAGEDOWN = (GLFW_KEY_SPECIAL+43);
static const int GLFW_KEY_HOME = (GLFW_KEY_SPECIAL+44);
static const int GLFW_KEY_END = (GLFW_KEY_SPECIAL+45);
static const int GLFW_KEY_KP_0 = (GLFW_KEY_SPECIAL+46);
static const int GLFW_KEY_KP_1 = (GLFW_KEY_SPECIAL+47);
static const int GLFW_KEY_KP_2 = (GLFW_KEY_SPECIAL+48);
static const int GLFW_KEY_KP_3 = (GLFW_KEY_SPECIAL+49);
static const int GLFW_KEY_KP_4 = (GLFW_KEY_SPECIAL+50);
static const int GLFW_KEY_KP_5 = (GLFW_KEY_SPECIAL+51);
static const int GLFW_KEY_KP_6 = (GLFW_KEY_SPECIAL+52);
static const int GLFW_KEY_KP_7 = (GLFW_KEY_SPECIAL+53);
static const int GLFW_KEY_KP_8 = (GLFW_KEY_SPECIAL+54);
static const int GLFW_KEY_KP_9 = (GLFW_KEY_SPECIAL+55);
static const int GLFW_KEY_KP_DIVIDE = (GLFW_KEY_SPECIAL+56);
static const int GLFW_KEY_KP_MULTIPLY = (GLFW_KEY_SPECIAL+57);
static const int GLFW_KEY_KP_SUBTRACT = (GLFW_KEY_SPECIAL+58);
static const int GLFW_KEY_KP_ADD = (GLFW_KEY_SPECIAL+59);
static const int GLFW_KEY_KP_DECIMAL = (GLFW_KEY_SPECIAL+60);
static const int GLFW_KEY_KP_EQUAL = (GLFW_KEY_SPECIAL+61);
static const int GLFW_KEY_KP_ENTER = (GLFW_KEY_SPECIAL+62);
static const int GLFW_KEY_KP_NUM_LOCK = (GLFW_KEY_SPECIAL+63);
static const int GLFW_KEY_CAPS_LOCK = (GLFW_KEY_SPECIAL+64);
static const int GLFW_KEY_SCROLL_LOCK = (GLFW_KEY_SPECIAL+65);
static const int GLFW_KEY_PAUSE = (GLFW_KEY_SPECIAL+66);
static const int GLFW_KEY_LSUPER = (GLFW_KEY_SPECIAL+67);
static const int GLFW_KEY_RSUPER = (GLFW_KEY_SPECIAL+68);
static const int GLFW_KEY_MENU = (GLFW_KEY_SPECIAL+69);
static const int GLFW_KEY_LAST = GLFW_KEY_MENU;
static const int GLFW_MOUSE_BUTTON_1 = 0;
static const int GLFW_MOUSE_BUTTON_2 = 1;
static const int GLFW_MOUSE_BUTTON_3 = 2;
static const int GLFW_MOUSE_BUTTON_4 = 3;
static const int GLFW_MOUSE_BUTTON_5 = 4;
static const int GLFW_MOUSE_BUTTON_6 = 5;
static const int GLFW_MOUSE_BUTTON_7 = 6;
static const int GLFW_MOUSE_BUTTON_8 = 7;
static const int GLFW_MOUSE_BUTTON_LAST = GLFW_MOUSE_BUTTON_8;
static const int GLFW_MOUSE_BUTTON_LEFT = GLFW_MOUSE_BUTTON_1;
static const int GLFW_MOUSE_BUTTON_RIGHT = GLFW_MOUSE_BUTTON_2;
static const int GLFW_MOUSE_BUTTON_MIDDLE = GLFW_MOUSE_BUTTON_3;
static const int GLFW_JOYSTICK_1 = 0;
static const int GLFW_JOYSTICK_2 = 1;
static const int GLFW_JOYSTICK_3 = 2;
static const int GLFW_JOYSTICK_4 = 3;
static const int GLFW_JOYSTICK_5 = 4;
static const int GLFW_JOYSTICK_6 = 5;
static const int GLFW_JOYSTICK_7 = 6;
static const int GLFW_JOYSTICK_8 = 7;
static const int GLFW_JOYSTICK_9 = 8;
static const int GLFW_JOYSTICK_10 = 9;
static const int GLFW_JOYSTICK_11 = 10;
static const int GLFW_JOYSTICK_12 = 11;
static const int GLFW_JOYSTICK_13 = 12;
static const int GLFW_JOYSTICK_14 = 13;
static const int GLFW_JOYSTICK_15 = 14;
static const int GLFW_JOYSTICK_16 = 15;
static const int GLFW_JOYSTICK_LAST = GLFW_JOYSTICK_16;
static const int GLFW_WINDOW = 0x00010001;
static const int GLFW_FULLSCREEN = 0x00010002;
static const int GLFW_OPENED = 0x00020001;
static const int GLFW_ACTIVE = 0x00020002;
static const int GLFW_ICONIFIED = 0x00020003;
static const int GLFW_ACCELERATED = 0x00020004;
static const int GLFW_RED_BITS = 0x00020005;
static const int GLFW_GREEN_BITS = 0x00020006;
static const int GLFW_BLUE_BITS = 0x00020007;
static const int GLFW_ALPHA_BITS = 0x00020008;
static const int GLFW_DEPTH_BITS = 0x00020009;
static const int GLFW_STENCIL_BITS = 0x0002000A;
static const int GLFW_REFRESH_RATE = 0x0002000B;
static const int GLFW_ACCUM_RED_BITS = 0x0002000C;
static const int GLFW_ACCUM_GREEN_BITS = 0x0002000D;
static const int GLFW_ACCUM_BLUE_BITS = 0x0002000E;
static const int GLFW_ACCUM_ALPHA_BITS = 0x0002000F;
static const int GLFW_AUX_BUFFERS = 0x00020010;
static const int GLFW_STEREO = 0x00020011;
static const int GLFW_WINDOW_NO_RESIZE = 0x00020012;
static const int GLFW_FSAA_SAMPLES = 0x00020013;
static const int GLFW_OPENGL_VERSION_MAJOR = 0x00020014;
static const int GLFW_OPENGL_VERSION_MINOR = 0x00020015;
static const int GLFW_OPENGL_FORWARD_COMPAT = 0x00020016;
static const int GLFW_OPENGL_DEBUG_CONTEXT = 0x00020017;
static const int GLFW_OPENGL_PROFILE = 0x00020018;
static const int GLFW_OPENGL_CORE_PROFILE = 0x00050001;
static const int GLFW_OPENGL_COMPAT_PROFILE = 0x00050002;
static const int GLFW_MOUSE_CURSOR = 0x00030001;
static const int GLFW_STICKY_KEYS = 0x00030002;
static const int GLFW_STICKY_MOUSE_BUTTONS = 0x00030003;
static const int GLFW_SYSTEM_KEYS = 0x00030004;
static const int GLFW_KEY_REPEAT = 0x00030005;
static const int GLFW_AUTO_POLL_EVENTS = 0x00030006;
static const int GLFW_WAIT = 0x00040001;
static const int GLFW_NOWAIT = 0x00040002;
static const int GLFW_PRESENT = 0x00050001;
static const int GLFW_AXES = 0x00050002;
static const int GLFW_BUTTONS = 0x00050003;
static const int GLFW_NO_RESCALE_BIT = 0x00000001;
static const int GLFW_ORIGIN_UL_BIT = 0x00000002;
static const int GLFW_BUILD_MIPMAPS_BIT = 0x00000004;
static const int GLFW_ALPHA_MAP_BIT = 0x00000008;
static const int GLFW_INFINITY = 100000;

typedef struct {
    int Width, Height;
    int RedBits, BlueBits, GreenBits;
} GLFWvidmode;


typedef struct {
    int Width, Height;
    int Format;
    int BytesPerPixel;
    unsigned char *Data;
} GLFWimage;

typedef int GLFWthread;
typedef void * GLFWmutex;
typedef void * GLFWcond;

typedef void ( * GLFWwindowsizefun)(int,int);
typedef int ( * GLFWwindowclosefun)(void);
typedef void ( * GLFWwindowrefreshfun)(void);
typedef void ( * GLFWmousebuttonfun)(int,int);
typedef void ( * GLFWmouseposfun)(int,int);
typedef void ( * GLFWmousewheelfun)(int);
typedef void ( * GLFWkeyfun)(int,int);
typedef void ( * GLFWcharfun)(int,int);
typedef void ( * GLFWthreadfun)(void *);

 int glfwInit( void );
 void glfwTerminate( void );
 void glfwGetVersion( int *major, int *minor, int *rev );


 int glfwOpenWindow( int width, int height, int redbits, int greenbits, int bluebits, int alphabits, int depthbits, int stencilbits, int mode );
 void glfwOpenWindowHint( int target, int hint );
 void glfwCloseWindow( void );
 void glfwSetWindowTitle( const char *title );
 void glfwGetWindowSize( int *width, int *height );
 void glfwSetWindowSize( int width, int height );
 void glfwSetWindowPos( int x, int y );
 void glfwIconifyWindow( void );
 void glfwRestoreWindow( void );
 void glfwSwapBuffers( void );
 void glfwSwapInterval( int interval );
 int glfwGetWindowParam( int param );
 void glfwSetWindowSizeCallback( GLFWwindowsizefun cbfun );
 void glfwSetWindowCloseCallback( GLFWwindowclosefun cbfun );
 void glfwSetWindowRefreshCallback( GLFWwindowrefreshfun cbfun );


 int glfwGetVideoModes( GLFWvidmode *list, int maxcount );
 void glfwGetDesktopMode( GLFWvidmode *mode );


 void glfwPollEvents( void );
 void glfwWaitEvents( void );
 int glfwGetKey( int key );
 int glfwGetMouseButton( int button );
 void glfwGetMousePos( int *xpos, int *ypos );
 void glfwSetMousePos( int xpos, int ypos );
 int glfwGetMouseWheel( void );
 void glfwSetMouseWheel( int pos );
 void glfwSetKeyCallback( GLFWkeyfun cbfun );
 void glfwSetCharCallback( GLFWcharfun cbfun );
 void glfwSetMouseButtonCallback( GLFWmousebuttonfun cbfun );
 void glfwSetMousePosCallback( GLFWmouseposfun cbfun );
 void glfwSetMouseWheelCallback( GLFWmousewheelfun cbfun );


 int glfwGetJoystickParam( int joy, int param );
 int glfwGetJoystickPos( int joy, float *pos, int numaxes );
 int glfwGetJoystickButtons( int joy, unsigned char *buttons, int numbuttons );


 double glfwGetTime( void );
 void glfwSetTime( double time );
 void glfwSleep( double time );


 int glfwExtensionSupported( const char *extension );
 void* glfwGetProcAddress( const char *procname );
 void glfwGetGLVersion( int *major, int *minor, int *rev );


 GLFWthread glfwCreateThread( GLFWthreadfun fun, void *arg );
 void glfwDestroyThread( GLFWthread ID );
 int glfwWaitThread( GLFWthread ID, int waitmode );
 GLFWthread glfwGetThreadID( void );
 GLFWmutex glfwCreateMutex( void );
 void glfwDestroyMutex( GLFWmutex mutex );
 void glfwLockMutex( GLFWmutex mutex );
 void glfwUnlockMutex( GLFWmutex mutex );
 GLFWcond glfwCreateCond( void );
 void glfwDestroyCond( GLFWcond cond );
 void glfwWaitCond( GLFWcond cond, GLFWmutex mutex, double timeout );
 void glfwSignalCond( GLFWcond cond );
 void glfwBroadcastCond( GLFWcond cond );
 int glfwGetNumberOfProcessors( void );


 void glfwEnable( int token );
 void glfwDisable( int token );


 int glfwReadImage( const char *name, GLFWimage *img, int flags );
 int glfwReadMemoryImage( const void *data, long size, GLFWimage *img, int flags );
 void glfwFreeImage( GLFWimage *img );
 int glfwLoadTexture2D( const char *name, int flags );
 int glfwLoadMemoryTexture2D( const void *data, long size, int flags );
 int glfwLoadTextureImage2D( GLFWimage *img, int flags );
	]]
	
	-- STB_Image
	ffi.cdef[[
enum
{
   STBI_default = 0,

   STBI_grey = 1,
   STBI_grey_alpha = 2,
   STBI_rgb = 3,
   STBI_rgb_alpha = 4
};

typedef unsigned char stbi_uc;
extern stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp);
extern stbi_uc *stbi_load (char const *filename, int *x, int *y, int *comp, int req_comp);
//extern stbi_uc *stbi_load_from_file (FILE *f, int *x, int *y, int *comp, int req_comp);

typedef struct
{
   int (*read) (void *user,char *data,int size);
   void (*skip) (void *user,unsigned n);
   int (*eof) (void *user);
} stbi_io_callbacks;

extern stbi_uc *stbi_load_from_callbacks (stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp);


extern float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp);

extern float *stbi_loadf (char const *filename, int *x, int *y, int *comp, int req_comp);
//extern float *stbi_loadf_from_file (FILE *f, int *x, int *y, int *comp, int req_comp);


extern float *stbi_loadf_from_callbacks (stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp);

extern void stbi_hdr_to_ldr_gamma(float gamma);
extern void stbi_hdr_to_ldr_scale(float scale);

extern void stbi_ldr_to_hdr_gamma(float gamma);
extern void stbi_ldr_to_hdr_scale(float scale);



extern int stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user);
extern int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len);

extern int stbi_is_hdr (char const *filename);
//extern int stbi_is_hdr_from_file(FILE *f);

extern const char *stbi_failure_reason (void);


extern void stbi_image_free (void *retval_from_stbi_load);


extern int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp);
extern int stbi_info_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp);


extern int stbi_info (char const *filename, int *x, int *y, int *comp);
//extern int stbi_info_from_file (FILE *f, int *x, int *y, int *comp);

extern void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply);

extern char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen);
extern char *stbi_zlib_decode_malloc(const char *buffer, int len, int *outlen);
extern int stbi_zlib_decode_buffer(char *obuffer, int olen, const char *ibuffer, int ilen);

extern char *stbi_zlib_decode_noheader_malloc(const char *buffer, int len, int *outlen);
extern int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen);
	]]
	
	if ffi.os == "Windows" then
		gl = ffi.load("opengl32")
		glu = ffi.load("glu32")
	else
		gl = ffi.load("GL")
		glu = ffi.load("GLU")
	end
	LuJGL.gl = gl
	LuJGL.glu = glu
	glfw = ffi.load("glfw")
	LuJGL.glfw = glfw
	
	local ok, stb_image = pcall(ffi.load, "stb_image")
	if ok then
		LuJGL.stb_image = stb_image
	end
	
	LuJGL.glext = setmetatable({}, {
		__index = function(self, k)
			local ptr = glfw.glfwGetProcAddress(k)
			if ptr == nil then error("glfwGetProcAddress failed for "..k.." (are you accessing the right function?)",2) end
			local ok, cptr = pcall(ffi.cast, string.format("PFN%sPROC", string.upper(k)), ptr)
			if not ok then error("couldn't cast: "..k,2) end
			rawset(self, k, cptr)
			return cptr
		end,
	})
	
	-- Load some constants for utility functions
	tex_channels2glconst = {
		[1] = glu.GL_ALPHA,
		[2] = glu.GL_LUMINANCE_ALPHA,
		[3] = glu.GL_RGB,
		[4] = glu.GL_RGBA,
	}
end

local function xpcall_traceback_hook(err)
	print(debug.traceback(tostring(err) or "(non-string error)"))
end

local function create_callback(func)
	-- Work around for this:
	-- http://lua-users.org/lists/lua-l/2011-12/msg00712.html
	jit.off(func)
	return func
end

local function call_callback(func,...)
	if not func then return true end
	local ok, msg = xpcall(func,xpcall_traceback_hook,...)
	if not ok then
		stop = true
	end
	return ok, msg
end

--- Initializes GLFW and creates a new window.
-- @param name The window name
-- @param w (Optional) Window width. Defaults to 640.
-- @param h (Optional) Window height. Defaults to 480.
function LuJGL.initialize(name, w, h)
	w = w or 640
	h = h or 480
	
	if glfw.glfwInit() == 0 then
		error("error initializing glfw",0)
	end
	
	glfw.glfwOpenWindowHint(glfw.GLFW_WINDOW_NO_RESIZE, true)
	
	-- TODO: Whats a good default for the number of stencil bits?
	if glfw.glfwOpenWindow(w,h,8,8,8,8,24,8,glfw.GLFW_WINDOW) == 0 then
		glfw.glfwTerminate()
		error("error initializing glfw window",0)
	end
	
	local size_buffer = ffi.new("int[2]")
	glfw.glfwGetWindowSize(size_buffer, size_buffer + 1)
	LuJGL.width = size_buffer[0]
	LuJGL.height = size_buffer[1]
	
	glfw.glfwSetWindowTitle(name)
	
	glfw.glfwSetWindowCloseCallback(create_callback(function()
		local ok, msg = call_callback(event_cb, "close")
		if ok and not msg then stop = true end
		return false
	end))
	
	glfw.glfwSetKeyCallback(create_callback(function(key, down)
		if key <= 255 then
			key = string.char(key):lower()
		end
		call_callback(event_cb, "key", down ~= 0, key)
	end))
	
	glfw.glfwSetMouseButtonCallback(create_callback(function(button, action)
		glfw.glfwGetMousePos(int_buffer,int_buffer+1)
		call_callback(event_cb, "mouse", button, action ~= 0, int_buffer[0], int_buffer[1])
	end))
	
	glfw.glfwSetMousePosCallback(create_callback(function(x,y)
		call_callback(event_cb, "motion", x, y)
	end))
	
	local last_wheel_pos = 0
	glfw.glfwSetMouseWheelCallback(create_callback(function(pos)
		call_callback(event_cb, "wheel", pos - last_wheel_pos, pos)
		last_wheel_pos = pos
	end))
end

function LuJGL.deinitialize()
	glfw.glfwCloseWindow()
	glfw.glfwTerminate()
end

--- Sets the idle callback. This is where the "thinking" code should go.
function LuJGL.setIdleCallback(cb)
	idle_cb = cb
end

--- Sets the render callback. Render the scene here.
function LuJGL.setRenderCallback(cb)
	render_cb = cb
end

--- Sets the event callback. Called for handling events.
function LuJGL.setEventCallback(cb)
	event_cb = cb
end

--- Checks for an OpenGL error. Errors if it finds one.
function LuJGL.checkError()
	local errcode = gl.glGetError()
	if errcode ~= gl.GL_NO_ERROR then
		error("OpenGL Error: "..ffi.string(glu.gluErrorString(errcode)),0)
	end
end

--- Enters the main loop.
function LuJGL.mainLoop()
	glfw.glfwSetTime(0)
	LuJGL.frameCount = 0
	while not stop do
		call_callback(idle_cb)
		call_callback(render_cb)
		glfw.glfwSwapBuffers()
		LuJGL.frameCount = LuJGL.frameCount + 1
	end
	glfw.glfwCloseWindow()
	glfw.glfwTerminate()
end

--- Signals the main loop to terminate. This simply sets a flag; this function
-- does return.
function LuJGL.signalQuit()
	stop = true
end

--- Gets the time since the main loop started in seconds
function LuJGL.getTime()
	return glfw.glfwGetTime()
end

-- -- Some helful utilities

do
	local last_framecount = 0
	local last_time = 0
	--- Returns (frames / seconds) since the last call to this function
	function LuJGL.fps()
		local count, now = LuJGL.frameCount, LuJGL.getTime()
		local num = (count - last_framecount) / (now - last_time)
		last_framecount = count
		last_time = now
		return num
	end
end

if LuJGL.stb_image then
	--- Loads an image file to a texture, using stb_image
	-- @param filepath Path to file to load texture from
	-- @param fchannels If non-nil, force this number of channels
	-- @param mipmaps Whether to generate mipmaps for this texture
	-- @param wrap Whether to set the texture repeat flag
	-- @return Texture ID
	-- @return Image Width
	-- @return Image Height
	-- @return Image channels (before adjusting to fchannels, see stb_image)
	function LuJGL.loadTexture(filepath, fchannels, mipmaps, wrap)
		local imgdatabuffer = ffi.new("int[3]",0)
		
		local image = ffi.gc(LuJGL.stb_image.stbi_load(filepath, imgdatabuffer, imgdatabuffer+1, imgdatabuffer+2, fchannels or 0),
			LuJGL.stb_image.stbi_image_free)
		
		if image == nil then
			error(ffi.string(LuJGL.stb_image.stbi_failure_reason()))
		end
		
		local texbuffer = ffi.new("unsigned int[1]",0)
		gl.glGenTextures(1,texbuffer)
		local texid = texbuffer[0]
		if texid == 0 then error("glGenTextures failed") end
		gl.glBindTexture(gl.GL_TEXTURE_2D,texid)
		
		if wrap then
			gl.glTexParameterf(gl.GL_TEXTURE_2D, gl.GL_TEXTURE_WRAP_S, gl.GL_REPEAT)
			gl.glTexParameterf(gl.GL_TEXTURE_2D, gl.GL_TEXTURE_WRAP_T, gl.GL_REPEAT)
		end
		
		if mipmaps then
			gl.glTexParameterf(gl.GL_TEXTURE_2D, gl.GL_TEXTURE_MIN_FILTER, gl.GL_LINEAR_MIPMAP_NEAREST)
			gl.glTexParameterf(gl.GL_TEXTURE_2D, gl.GL_TEXTURE_MAG_FILTER, gl.GL_LINEAR)
			local ok = glu.gluBuild2DMipmaps(gl.GL_TEXTURE_2D, fchannels or imgdatabuffer[2], imgdatabuffer[0], imgdatabuffer[1],
				tex_channels2glconst[fchannels or imgdatabuffer[2]], gl.GL_UNSIGNED_BYTE, image)
			if ok ~= 0 then
				error(ffi.string(glu.gluErrorString(ok)))
			end
		else
			gl.glTexParameterf(gl.GL_TEXTURE_2D, gl.GL_TEXTURE_MIN_FILTER, gl.GL_LINEAR)
			gl.glTexParameterf(gl.GL_TEXTURE_2D, gl.GL_TEXTURE_MAG_FILTER, gl.GL_LINEAR)
			gl.glTexImage2D(gl.GL_TEXTURE_2D, 0, fchannels or imgdatabuffer[2], imgdatabuffer[0], imgdatabuffer[1],
				0, tex_channels2glconst[fchannels or imgdatabuffer[2]], gl.GL_UNSIGNED_BYTE, image)
		end
		
		LuJGL.checkError()
		return texid, imgdatabuffer[0], imgdatabuffer[1], imgdatabuffer[2]
	end
end

local fbuffer = ffi.new("float[?]",4)
--- Convenience function for glLightfv. Uses a static internal buffer
-- to store the array in.
function LuJGL.glLight(light, enum, r, g, b, a)
	fbuffer[0] = r or 0
	fbuffer[1] = g or 0
	fbuffer[2] = b or 0
	fbuffer[3] = a or 1
	gl.glLightfv(light, enum, fbuffer)
end

--- Begins rendering 2D. Use this to render HUD, GUI, etc.
function LuJGL.begin2D()
	gl.glPushAttrib(bit.bor(gl.GL_ENABLE_BIT))
	gl.glDisable(gl.GL_DEPTH_TEST)
	gl.glDisable(gl.GL_CULL_FACE)
	gl.glDisable(gl.GL_FOG)
	gl.glDisable(gl.GL_LIGHTING)
	
	gl.glMatrixMode(gl.GL_MODELVIEW)
	gl.glPushMatrix()
	gl.glLoadIdentity()
	gl.glMatrixMode(gl.GL_PROJECTION)
	gl.glPushMatrix()
	gl.glLoadIdentity()
	gl.glOrtho(0,LuJGL.width,0,LuJGL.height,-1,1)
	gl.glMatrixMode(gl.GL_MODELVIEW)
end

--- Ends 2d rendering.
function LuJGL.end2D()
	gl.glMatrixMode(gl.GL_PROJECTION)
	gl.glPopMatrix()
	gl.glMatrixMode(gl.GL_MODELVIEW)
	gl.glPopMatrix()
	
	gl.glPopAttrib()
end

--- Looks up and caches an OpenGL extension function
-- @param func The function name, including the prefix (ex. glLinkProgramARB)
-- @return The pointer to the functon, appropriately casted, or nil if no function definition was found.
function LuJGL.getProcAddress(func)
	if ext_function_cache[func] then return ext_function_cache[func] end
	local ptr = glfw.glfwGetProcAddress(func)
	local ok, cptr = pcall(ffi.cast, string.format("PFN%sPROC", string.upper(func)), ptr)
	if not ok then return nil end
	ext_function_cache[func] = cptr
	return cptr
end

return LuJGL
